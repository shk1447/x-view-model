"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[9340],{5252:(n,r,e)=>{e.r(r),e.d(r,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>a});var o=e(7624),t=e(2172);const i={},s="Login Flow",l={id:"examples/login",title:"Login Flow",description:"ViewFlow\ub97c \ud65c\uc6a9\ud55c Login \ud750\ub984 \uc608\uc81c",source:"@site/docs/examples/login.mdx",sourceDirName:"examples",slug:"/examples/login",permalink:"/x-view-model/en/docs/examples/login",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Count Action",permalink:"/x-view-model/en/docs/examples/counter"}},c={},a=[];function u(n){const r={blockquote:"blockquote",code:"code",h1:"h1",p:"p",pre:"pre",...(0,t.M)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(r.h1,{id:"login-flow",children:"Login Flow"}),"\n",(0,o.jsxs)(r.blockquote,{children:["\n",(0,o.jsx)(r.p,{children:"ViewFlow\ub97c \ud65c\uc6a9\ud55c Login \ud750\ub984 \uc608\uc81c"}),"\n"]}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-tsx",metastring:"live noInline",live:!0,children:'const { useViewFlow, registViewFlow } = xvm;\r\n\r\ntype State = {\r\n  name: string;\r\n};\r\n\r\ntype Action = {\r\n  setName: (payload: string) => void;\r\n};\r\n\r\ntype Context = State & Action;\r\n\r\ntype Flow = {\r\n  login: {\r\n    success: {};\r\n    fail: {};\r\n  };\r\n  main: {};\r\n};\r\n\r\nconst viewFlow = registViewFlow<Context, Flow>(\r\n  {\r\n    name: "",\r\n    setName(payload) {\r\n      this.name = payload;\r\n    },\r\n  },\r\n  {\r\n    login: {\r\n      invoke: async function (context: Context, err: any) {\r\n        console.log(context);\r\n        if (!context.name) {\r\n          throw new Error("");\r\n        }\r\n\r\n        // api \uc694\uccad \ub85c\uc9c1\r\n      },\r\n      onDone: "#login.success",\r\n      onError: "#login.fail",\r\n    },\r\n\r\n    "login.success": {\r\n      invoke: async function (context: Context, err: any) {\r\n        // \uc131\uacf5 \ud6c4\uc5d0 \ub300\ud55c \ucc98\ub9ac\r\n      },\r\n      onDone: (context) => {\r\n        return "#main";\r\n      },\r\n      onError: undefined,\r\n    },\r\n    "login.fail": {\r\n      invoke: async function (context: Context, err: any) {\r\n        // fail\uc5d0 \ub300\ud55c \ucc98\ub9ac \ub85c\uc9c1\r\n      },\r\n      onDone: undefined,\r\n      onError: undefined,\r\n    },\r\n    main: {\r\n      invoke: async function (context: Context, err: any) {},\r\n      onDone: undefined,\r\n      onError: undefined,\r\n    },\r\n  },\r\n  { deep: true, name: "LoginViewFlow" }\r\n);\r\n\r\nconst Form = () => {\r\n  const [[state, send], [current, flow]] = useViewFlow(viewFlow, ["name"]);\r\n\r\n  useEffect(() => {\r\n    if (current == "login.success") {\r\n      // \ub85c\uadf8\uc778 \uc131\uacf5\uc2dc\r\n      alert("success");\r\n    } else if (current == "login.fail") {\r\n      // \ub85c\uadf8\uc778 \uc2e4\ud328\uc2dc\r\n    } else if (current == "main") {\r\n      // \ub85c\uadf8\uc778 \uc131\uacf5\ud6c4 \uba54\uc778\uc73c\ub85c \uc811\uadfc\uc2dc\r\n    }\r\n  }, [current]);\r\n  return (\r\n    <>\r\n      <p>{current}</p>\r\n      <input\r\n        value={state.name}\r\n        onChange={(e) => send("setName", e.target.value)}\r\n      />\r\n      <button onClick={() => flow("#login")}>login</button>\r\n    </>\r\n  );\r\n};\r\n\r\nrender(\r\n  <>\r\n    <Form />\r\n  </>\r\n);\n'})})]})}function d(n={}){const{wrapper:r}={...(0,t.M)(),...n.components};return r?(0,o.jsx)(r,{...n,children:(0,o.jsx)(u,{...n})}):u(n)}}}]);