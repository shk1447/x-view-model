{
  "api_reference/SaigeVision.Net.Core.V2.Constants.html": {
    "href": "api_reference/SaigeVision.Net.Core.V2.Constants.html",
    "title": "Class Constants",
    "keywords": "Class Constants 고정변수를 위한 정적 클래스 Inheritance object Constants Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SaigeVision.Net.Core.V2 Assembly: SaigeVision.Net.Core.V2.dll Syntax public static class Constants Fields View Source LenOfColorName 칼라명의 최대 길이 Declaration public const int LenOfColorName = 8 Field Value Type Description int View Source MaxLenOfClassName class name의 최대 길이 Declaration public const int MaxLenOfClassName = 63 Field Value Type Description int View Source MaxLenOfModelName 모델명의 최대 길이 Declaration public const int MaxLenOfModelName = 63 Field Value Type Description int View Source MaxLenOfTextFormatting (OCR) 인식할 수 있는 글자의 최대 길이입니다. 하나의 \\ref SaigeTextObject 에 인식된 글자는 이 길이를 넘을 수 없습니다. Declaration public const int MaxLenOfTextFormatting = 200 Field Value Type Description int View Source MaxLenOfTrainedVersion Trained Version 최대 길이 Declaration public const int MaxLenOfTrainedVersion = 63 Field Value Type Description int View Source MaxNumOfClasses class 최대 갯수 Declaration public const int MaxNumOfClasses = 255 Field Value Type Description int"
  },
  "api_reference/SaigeVision.Net.Core.V2.html": {
    "href": "api_reference/SaigeVision.Net.Core.V2.html",
    "title": "Namespace SaigeVision.Net.Core.V2",
    "keywords": "Namespace SaigeVision.Net.Core.V2 Classes Constants 고정변수를 위한 정적 클래스 NativeMethod Saige Engine 으로 부터 Core한 로직을 받아오기 위한 클래스 NativeValidation 엔진으로부터 받은 return 값을 검증하기 위한 클래스 Structs SaigeDetectedObject Saige Detected Box Structure SaigeEllipse Saige Ellipse Box Structure SaigeHandleConfig 추론 핸들 설정 사항이 담긴 구조체입니다. GPU 메모리 및 추론 시간에 영향을 미칠 수 있는 항목들입니다. SaigeInferenceOption 추론 옵션이 담긴 구조체입니다. SaigeKeyInfoDict (KIE) KIE 기능 반영 시 안내 예정. SaigeModelInfo 모델 정보가 담긴 구조체입니다. SaigeOCRTextBox (OCR) OCR 기능 반영 시 안내 예정. SaigeRoiInfo ROI 정보가 담긴 구조체입니다. ROI 모드와 그에 대응하는 파라미터, 그리고 공통적으로 사용되는 blind mask 정보로 구성되어 있습니다. SaigeRotatedBox Saige Rotated Box Structure SaigeSegmentedObject Segmentation 또는 Anomaly Detection을 통해 검출된 영역의 정보가 담긴 구조체입니다. SaigeTextFormatting (OCR) 인식하고자 하는 글자의 포맷을 지정하는 옵션입니다. 글자 수에 관계 없이 인식하고자 하는 글자집합을 설정하는 방식과, 글자의 위치별로 인식하고자 하는 글자집합을 설정하는 두 가지 방식이 있습니다. Text Formatting 방식과 설정 방법은 다음과 같습니다. 글자 수에 관계 없이 글자 집합을 지정하는 방식 (By Character Set) length 값을 0으로 설정합니다. 각 문자집합 bool 배열의 첫 번째 값을 지정합니다. 예시: 영소문자, 숫자만 인식하는 경우 SaigeInferenceOption option; option.textFormatting.length = 0; option.textFormatting.engLower[0] = true; option.textFormatting.engUpper[0] = false; option.textFormatting.kor[0] = false; option.textFormatting.number[0] = true; option.textFormatting.symbol[0] = false; 글자 수와 패턴을 지정하는 방식(By Character Pattern) length 값을 0 초과, MaxLenOfTextFormatting 이하로 설정합니다. 각 문자집합 bool 배열의 0 ~ length-1 까지의 값을 지정합니다. 예시: 000가1234 (숫자 3자리, 한글 1자리, 숫자 4자리) SaigeInferenceOption option; option.textFormatting.length = 8; option.textFormatting.number[3] = false; option.textFormatting.kor[3] = true; SaigeTextObject (OCR) 텍스트를 검출하는 OCR 검사의 결과가 담긴 구조체입니다. OCR기능은 글자의 영역을 검출하는 부분과 해당 영역의 글자 종류를 인식하는 부분으로 나뉘어있습니다. SaigeVision OCR에서는 글자의 영역을 polygon 형태(2차원 점의 배열)로 제공하며 문자열 정보를 같이 담은 구조체로 검사결과를 제공합니다. Enums ResponseCode"
  },
  "api_reference/SaigeVision.Net.Core.V2.NativeMethod.html": {
    "href": "api_reference/SaigeVision.Net.Core.V2.NativeMethod.html",
    "title": "Class NativeMethod",
    "keywords": "Class NativeMethod Saige Engine 으로 부터 Core한 로직을 받아오기 위한 클래스 Inheritance object NativeMethod Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SaigeVision.Net.Core.V2 Assembly: SaigeVision.Net.Core.V2.dll Syntax public class NativeMethod Methods SaigeColorCodeToRGB(int, string, string, string) Declaration public static extern int SaigeColorCodeToRGB(int color, string r, string g, string b) Parameters Type Name Description int color string r string g string b Returns Type Description int SaigeCreateInferenceHandle(out IntPtr, int, byte[], int, SaigeHandleConfig, int) Declaration public static extern int SaigeCreateInferenceHandle(out IntPtr handle, int modelType, byte[] modelFilePath, int GPUNumber, SaigeHandleConfig config, int configFlags) Parameters Type Name Description IntPtr handle int modelType byte[] modelFilePath int GPUNumber SaigeHandleConfig config int configFlags Returns Type Description int SaigeCreateInferenceResult(out IntPtr) Declaration public static extern int SaigeCreateInferenceResult(out IntPtr handle) Parameters Type Name Description IntPtr handle Returns Type Description int SaigeDestroyInferenceHandle(IntPtr) Declaration public static extern int SaigeDestroyInferenceHandle(IntPtr handle) Parameters Type Name Description IntPtr handle Returns Type Description int SaigeDestroyInferenceResult(IntPtr) Declaration public static extern int SaigeDestroyInferenceResult(IntPtr handle) Parameters Type Name Description IntPtr handle Returns Type Description int SaigeDrawBoundingBox(SaigeDetectedObject, int, string, int, int, int, int[], int) Declaration public static extern int SaigeDrawBoundingBox(SaigeDetectedObject saigeDetectedObject, int num, string img, int width, int height, int channel, int[] colors, int waitMS) Parameters Type Name Description SaigeDetectedObject saigeDetectedObject int num string img int width int height int channel int[] colors int waitMS Returns Type Description int SaigeDrawHeatmap(float[], int, int, int) Declaration public static extern int SaigeDrawHeatmap(float[] image, int width, int height, int waitMS) Parameters Type Name Description float[] image int width int height int waitMS Returns Type Description int SaigeDrawImage(IntPtr, int, int, int, double, char, bool, int) Declaration public static extern int SaigeDrawImage(IntPtr image, int width, int height, int channel, double alpha, char type, bool invert, int waitMS) Parameters Type Name Description IntPtr image int width int height int channel double alpha char type bool invert int waitMS Returns Type Description int SaigeDrawImageOverBase(IntPtr, IntPtr, int, int, int, int, double, char, bool, int) Declaration public static extern int SaigeDrawImageOverBase(IntPtr base_img, IntPtr img, int width, int height, int channel_base, int channel_img, double alpha, char type, bool reverse, int waitMS) Parameters Type Name Description IntPtr base_img IntPtr img int width int height int channel_base int channel_img double alpha char type bool reverse int waitMS Returns Type Description int SaigeDrawSegmentedObjects(IntPtr, SaigeSegmentedObject[], int, int, int, int, double, int) Declaration public static extern int SaigeDrawSegmentedObjects(IntPtr img, SaigeSegmentedObject[] objects, int num_seg_objs, int width, int height, int channels, double overlay_alpha, int waitMS) Parameters Type Name Description IntPtr img SaigeSegmentedObject[] objects int num_seg_objs int width int height int channels double overlay_alpha int waitMS Returns Type Description int SaigeFreeImageData(IntPtr) Declaration public static extern int SaigeFreeImageData(IntPtr imageHandle) Parameters Type Name Description IntPtr imageHandle Returns Type Description int SaigeGetImageData(string, out int, out int, out int, out int) Declaration public static extern IntPtr SaigeGetImageData(string imagePath, out int width, out int height, out int channel, out int type) Parameters Type Name Description string imagePath int width int height int channel int type Returns Type Description IntPtr SaigeGetInferenceOption(IntPtr, out SaigeInferenceOption) Declaration public static extern int SaigeGetInferenceOption(IntPtr handle, out SaigeInferenceOption option) Parameters Type Name Description IntPtr handle SaigeInferenceOption option Returns Type Description int SaigeGetInferenceResultAnomalyScores(IntPtr, out double, out double, out double) Declaration public static extern int SaigeGetInferenceResultAnomalyScores(IntPtr resultHandle, out double anomalyScore, out double minScore, out double maxScore) Parameters Type Name Description IntPtr resultHandle double anomalyScore double minScore double maxScore Returns Type Description int SaigeGetInferenceResultClass(IntPtr, out int) Declaration public static extern int SaigeGetInferenceResultClass(IntPtr resultHandle, out int classIdx) Parameters Type Name Description IntPtr resultHandle int classIdx Returns Type Description int SaigeGetInferenceResultClassActivationMap(IntPtr, IntPtr[]) Declaration public static extern int SaigeGetInferenceResultClassActivationMap(IntPtr resultHandle, IntPtr[] classActivationMap) Parameters Type Name Description IntPtr resultHandle IntPtr[] classActivationMap Returns Type Description int SaigeGetInferenceResultDetectedObjects(IntPtr, SaigeDetectedObject[]) Declaration public static extern int SaigeGetInferenceResultDetectedObjects(IntPtr resultHandle, SaigeDetectedObject[] saigeDetectedObject) Parameters Type Name Description IntPtr resultHandle SaigeDetectedObject[] saigeDetectedObject Returns Type Description int SaigeGetInferenceResultEnhancedImage(IntPtr, IntPtr[]) Declaration public static extern int SaigeGetInferenceResultEnhancedImage(IntPtr resultHandle, IntPtr[] image) Parameters Type Name Description IntPtr resultHandle IntPtr[] image Returns Type Description int SaigeGetInferenceResultHeatmap(IntPtr, IntPtr[]) Declaration public static extern int SaigeGetInferenceResultHeatmap(IntPtr resultHandle, IntPtr[] heatmap) Parameters Type Name Description IntPtr resultHandle IntPtr[] heatmap Returns Type Description int SaigeGetInferenceResultInspectionTime(IntPtr, out long, out long, out long) Declaration public static extern int SaigeGetInferenceResultInspectionTime(IntPtr resultHandle, out long imreadTime, out long inferenceTime, out long postProcessingTime) Parameters Type Name Description IntPtr resultHandle long imreadTime long inferenceTime long postProcessingTime Returns Type Description int SaigeGetInferenceResultIsNg(IntPtr, out bool) Declaration public static extern int SaigeGetInferenceResultIsNg(IntPtr resultHandle, out bool isNg) Parameters Type Name Description IntPtr resultHandle bool isNg Returns Type Description int SaigeGetInferenceResultIsOversized(IntPtr, out bool) Declaration public static extern int SaigeGetInferenceResultIsOversized(IntPtr resultHandle, out bool isOversized) Parameters Type Name Description IntPtr resultHandle bool isOversized Returns Type Description int SaigeGetInferenceResultKIDict(IntPtr, SaigeKeyInfoDict[]) Declaration public static extern int SaigeGetInferenceResultKIDict(IntPtr resultHandle, SaigeKeyInfoDict[] keyInfoDict) Parameters Type Name Description IntPtr resultHandle SaigeKeyInfoDict[] keyInfoDict Returns Type Description int SaigeGetInferenceResultMask(IntPtr, IntPtr[]) Declaration public static extern int SaigeGetInferenceResultMask(IntPtr resultHandle, IntPtr[] mask) Parameters Type Name Description IntPtr resultHandle IntPtr[] mask Returns Type Description int SaigeGetInferenceResultNumOfDetectedObjects(IntPtr, out int) Declaration public static extern int SaigeGetInferenceResultNumOfDetectedObjects(IntPtr resultHandle, out int numOfObjects) Parameters Type Name Description IntPtr resultHandle int numOfObjects Returns Type Description int SaigeGetInferenceResultNumOfSegmentedObjects(IntPtr, out int) Declaration public static extern int SaigeGetInferenceResultNumOfSegmentedObjects(IntPtr resultHandle, out int count) Parameters Type Name Description IntPtr resultHandle int count Returns Type Description int SaigeGetInferenceResultNumOfTextObjects(IntPtr, out int) Declaration public static extern int SaigeGetInferenceResultNumOfTextObjects(IntPtr resultHandle, out int num) Parameters Type Name Description IntPtr resultHandle int num Returns Type Description int SaigeGetInferenceResultScore(IntPtr, float[], int) Declaration public static extern int SaigeGetInferenceResultScore(IntPtr resultHandle, float[] scores, int flags) Parameters Type Name Description IntPtr resultHandle float[] scores int flags Returns Type Description int SaigeGetInferenceResultScoremapIAD(IntPtr, IntPtr[]) Declaration public static extern int SaigeGetInferenceResultScoremapIAD(IntPtr resultHandle, IntPtr[] scoremap) Parameters Type Name Description IntPtr resultHandle IntPtr[] scoremap Returns Type Description int SaigeGetInferenceResultScoremapSEG(IntPtr, IntPtr[]) Declaration public static extern int SaigeGetInferenceResultScoremapSEG(IntPtr resultHandle, IntPtr[] scoremap) Parameters Type Name Description IntPtr resultHandle IntPtr[] scoremap Returns Type Description int SaigeGetInferenceResultSegmentedObjects(IntPtr, SaigeSegmentedObject[]) Declaration public static extern int SaigeGetInferenceResultSegmentedObjects(IntPtr resultHandle, SaigeSegmentedObject[] saigeSegmentedObject) Parameters Type Name Description IntPtr resultHandle SaigeSegmentedObject[] saigeSegmentedObject Returns Type Description int SaigeGetInferenceResultTextObjects(IntPtr, SaigeTextObject[]) Declaration public static extern int SaigeGetInferenceResultTextObjects(IntPtr resultHandle, SaigeTextObject[] textObjects) Parameters Type Name Description IntPtr resultHandle SaigeTextObject[] textObjects Returns Type Description int SaigeGetModelInfo(IntPtr, out SaigeModelInfo) Declaration public static extern int SaigeGetModelInfo(IntPtr handle, out SaigeModelInfo info) Parameters Type Name Description IntPtr handle SaigeModelInfo info Returns Type Description int SaigeGetModuleVersion() Declaration public static extern IntPtr SaigeGetModuleVersion() Returns Type Description IntPtr SaigeInferFromByteArray(IntPtr, IntPtr, int, int, int, IntPtr) Declaration public static extern int SaigeInferFromByteArray(IntPtr handle, IntPtr imageData, int width, int height, int flags, IntPtr resultHandle) Parameters Type Name Description IntPtr handle IntPtr imageData int width int height int flags IntPtr resultHandle Returns Type Description int SaigeInferFromImageFile(IntPtr, string, IntPtr) Declaration public static extern int SaigeInferFromImageFile(IntPtr handle, string imagePath, IntPtr resultHandle) Parameters Type Name Description IntPtr handle string imagePath IntPtr resultHandle Returns Type Description int SaigeInferFromMultipleByteArray(IntPtr, int, IntPtr[], int, int, int, IntPtr[]) Declaration public static extern int SaigeInferFromMultipleByteArray(IntPtr handle, int imageCount, IntPtr[] imageData, int width, int height, int flags, IntPtr[] resultHandle) Parameters Type Name Description IntPtr handle int imageCount IntPtr[] imageData int width int height int flags IntPtr[] resultHandle Returns Type Description int SaigeSetInferenceOption(IntPtr, SaigeInferenceOption, int) Declaration public static extern int SaigeSetInferenceOption(IntPtr handle, SaigeInferenceOption option, int flags) Parameters Type Name Description IntPtr handle SaigeInferenceOption option int flags Returns Type Description int SaigeStrError(int) Declaration public static extern IntPtr SaigeStrError(int responceCode) Parameters Type Name Description int responceCode Returns Type Description IntPtr"
  },
  "api_reference/SaigeVision.Net.Core.V2.NativeValidation.html": {
    "href": "api_reference/SaigeVision.Net.Core.V2.NativeValidation.html",
    "title": "Class NativeValidation",
    "keywords": "Class NativeValidation 엔진으로부터 받은 return 값을 검증하기 위한 클래스 Inheritance object NativeValidation Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SaigeVision.Net.Core.V2 Assembly: SaigeVision.Net.Core.V2.dll Syntax public static class NativeValidation Methods View Source ValidateNativeResponse(int) 엔진으로부터 받은 값을 확인하기 위한 함수 response 값이 음수로 들어올 경우 Exception 발생 Declaration public static void ValidateNativeResponse(int response) Parameters Type Name Description int response 엔진으로부터 받은 return값"
  },
  "api_reference/SaigeVision.Net.Core.V2.ResponseCode.html": {
    "href": "api_reference/SaigeVision.Net.Core.V2.ResponseCode.html",
    "title": "Enum ResponseCode",
    "keywords": "Enum ResponseCode Namespace: SaigeVision.Net.Core.V2 Assembly: SaigeVision.Net.Core.V2.dll Syntax public enum ResponseCode Fields Name Description ERROR NO_ERROR_OUT"
  },
  "api_reference/SaigeVision.Net.Core.V2.SaigeDetectedObject.html": {
    "href": "api_reference/SaigeVision.Net.Core.V2.SaigeDetectedObject.html",
    "title": "Struct SaigeDetectedObject",
    "keywords": "Struct SaigeDetectedObject Saige Detected Box Structure Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: SaigeVision.Net.Core.V2 Assembly: SaigeVision.Net.Core.V2.dll Syntax public struct SaigeDetectedObject Fields View Source Area Declaration public uint Area Field Value Type Description uint View Source boundingBox Declaration public SaigeRotatedBox boundingBox Field Value Type Description SaigeRotatedBox View Source classIdx Declaration public int classIdx Field Value Type Description int View Source score Declaration public int score Field Value Type Description int"
  },
  "api_reference/SaigeVision.Net.Core.V2.SaigeEllipse.html": {
    "href": "api_reference/SaigeVision.Net.Core.V2.SaigeEllipse.html",
    "title": "Struct SaigeEllipse",
    "keywords": "Struct SaigeEllipse Saige Ellipse Box Structure Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: SaigeVision.Net.Core.V2 Assembly: SaigeVision.Net.Core.V2.dll Syntax public struct SaigeEllipse Fields View Source angle 직사각형이 시계 방향으로 회전한 각도입니다. 단위는 '도'입니다. Declaration public double angle Field Value Type Description double View Source center 직사각형의 중심점 좌표입니다. 좌표 값은 {x, y}입니다. Declaration public double[] center Field Value Type Description double[] View Source height 직사각형의 높이입니다. Declaration public double height Field Value Type Description double View Source width 직사각형의 너비입니다. Declaration public double width Field Value Type Description double"
  },
  "api_reference/SaigeVision.Net.Core.V2.SaigeHandleConfig.html": {
    "href": "api_reference/SaigeVision.Net.Core.V2.SaigeHandleConfig.html",
    "title": "Struct SaigeHandleConfig",
    "keywords": "Struct SaigeHandleConfig 추론 핸들 설정 사항이 담긴 구조체입니다. GPU 메모리 및 추론 시간에 영향을 미칠 수 있는 항목들입니다. Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: SaigeVision.Net.Core.V2 Assembly: SaigeVision.Net.Core.V2.dll Syntax public struct SaigeHandleConfig Fields View Source batchSize (Common) 추론을 한 번 수행할 때 몇 개의 이미지를 동시에 추론할지 설정합니다. 머신의 자원(GPU 메모리 등)에 따라, 설정한 값으로 추론이 불가능할 수도 있습니다. 원하는 값으로 설정하는 데 실패했다면 값을 낮춘 뒤 추론 핸들을 다시 만들어 주세요. Declaration public int batchSize Field Value Type Description int View Source inspectionSizeHeight (SEG) 추론할 때의 이미지 높이를 설정합니다. 이미지 원본의 높이와 상관없이, 리사이즈와 패딩을 통해 이 값으로 높이를 만들어 추론을 수행합니다. Declaration public int inspectionSizeHeight Field Value Type Description int View Source inspectionSizeWidth (SEG) 추론할 때의 이미지 너비를 설정합니다. 이미지 원본의 너비와 상관없이, 리사이즈와 패딩을 통해 이 값으로 너비를 만들어 추론을 수행합니다. Declaration public int inspectionSizeWidth Field Value Type Description int"
  },
  "api_reference/SaigeVision.Net.Core.V2.SaigeInferenceOption.html": {
    "href": "api_reference/SaigeVision.Net.Core.V2.SaigeInferenceOption.html",
    "title": "Struct SaigeInferenceOption",
    "keywords": "Struct SaigeInferenceOption 추론 옵션이 담긴 구조체입니다. Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: SaigeVision.Net.Core.V2 Assembly: SaigeVision.Net.Core.V2.dll Syntax public struct SaigeInferenceOption Fields View Source additionalScores (CLS) 클래스별 additional score 값입니다. n번째 인덱스에 설정한 값만큼 n번째 클래스에 추가 score가 부여됩니다. 각 additional score 값은 0 이상 100 이하의 실수로만 설정 가능합니다. Declaration public float[] additionalScores Field Value Type Description float[] View Source anomalyScoreThreshold (IAD) 이미지 전체를 대표하는 anomaly score가 이 값보다 크면 비정상 이미지로, 작거나 같으면 정상 이미지로 판정합니다. 학습 시점에 찾은 최적값이 기본값으로 설정됩니다. Declaration public double anomalyScoreThreshold Field Value Type Description double View Source batchSize (Common) 추론을 한 번 수행할 때 추론하는 이미지의 개수입니다. 추론 핸들 생성 시에 SaigeHandleConfig를 통해서만 설정할 수 있습니다. Declaration public int batchSize Field Value Type Description int View Source calcClassActivationMap (CLS) true로 설정하면 추론 시 class activation map을 계산합니다. Declaration public bool calcClassActivationMap Field Value Type Description bool View Source calcHeatmap (IAD) true로 설정하면 추론 시 이미지 원본과 같은 크기의 heatmap을 계산합니다. Declaration public bool calcHeatmap Field Value Type Description bool View Source calcMask (IAD, SEG) true로 설정하면 추론 시 이미지 원본과 같은 크기의 mask를 계산합니다. Declaration public bool calcMask Field Value Type Description bool View Source calcObject (SEG, IAD) true로 설정하면 추론 시 segmented object를 계산합니다. Declaration public bool calcObject Field Value Type Description bool View Source calcObjectAreaAndApplyThreshold (SEG, IAD) true로 설정하면 segmented object의 면적을 계산합니다. Segmented object의 면적이 object area threshold 보다 작으면 최종 결과에서 제외됩니다. Declaration public bool calcObjectAreaAndApplyThreshold Field Value Type Description bool View Source calcObjectScoreAndApplyThreshold (SEG, IAD) true로 설정하면 segmented object의 score를 계산합니다. Segmented object의 score가 object score threshold 보다 작으면 최종 결과에서 제외됩니다. Declaration public bool calcObjectScoreAndApplyThreshold Field Value Type Description bool View Source calcScoremap (SEG) true로 설정하면 추론 시 scoremap을 계산합니다. Declaration public bool calcScoremap Field Value Type Description bool View Source calcTime (Common) 추론 API 실행에 소요되는 시간을 세분화하여 출력할지 결정합니다. true로 설정하면 이미지를 읽는 시간, 순수 딥러닝 추론 시간, 후처리 시간을 각각 확인할 수 있습니다. false로 설정하면 추론 API 실행에 소요된 총 시간만을 확인할 수 있습니다. true로 설정하면 전체 추론 시간이 느려질 수 있습니다. 실제 검사 시에는 false로 설정하는 것을 권장합니다. Declaration public bool calcTime Field Value Type Description bool View Source heatmapColorRangeMax (IAD) Heatmap을 계산할 때 이 값보다 score가 큰 픽셀은 모두 클리핑됩니다. 학습 시점에 찾은 최적값이 기본값으로 설정됩니다. Declaration public double heatmapColorRangeMax Field Value Type Description double View Source heatmapColorRangeMin (IAD) Heatmap을 계산할 때 이 값보다 score가 작은 픽셀은 모두 클리핑됩니다. 학습 시점에 찾은 최적값이 기본값으로 설정됩니다. Declaration public double heatmapColorRangeMin Field Value Type Description double View Source inspectionSizeHeight (SEG) 추론할 때의 이미지 높이입니다. 추론 핸들 생성 시에 SaigeHandleConfig를 통해서만 설정할 수 있습니다. Declaration public int inspectionSizeHeight Field Value Type Description int View Source inspectionSizeWidth (SEG) 추론할 때의 이미지 너비입니다. 추론 핸들 생성 시에 SaigeHandleConfig를 통해서만 설정할 수 있습니다. Declaration public int inspectionSizeWidth Field Value Type Description int View Source maxNumOfDetectedObjects (DET) 검출할 detected object의 최대 개수입니다. Declaration public int[] maxNumOfDetectedObjects Field Value Type Description int[] View Source maxNumOfTextObjects (OCR) 한 번에 출력할 수 있는 글자 오브젝트의 최대 검출 개수입니다. 0 이하의 값은 제한 없음을 의미합니다. Declaration public int maxNumOfTextObjects Field Value Type Description int View Source objectAreaThreshold (IAD) 검출된 segmented object의 면적이 이 값보다 작으면 최종 결과에서 제외됩니다. calcObject가 true일 때 유효합니다. Declaration public int objectAreaThreshold Field Value Type Description int View Source objectAreaThresholdPerClass (SEG, DET) 클래스별 object area threshold 값입니다. n번째 클래스로 검출된 segmented object의 면적이 n번째 값보다 작으면 최종 결과에서 제외됩니다. Declaration public int[] objectAreaThresholdPerClass Field Value Type Description int[] View Source objectBoundaryThreshold (IAD) 이 값이 클수록 mask 및 segmented object의 경계가 좁아집니다. Mask를 계산할 때 이 값보다 score가 더 큰 픽셀은 1로, 더 작은 픽셀은 0으로 계산합니다. calcObject가 true일 때 유효합니다. Declaration public double objectBoundaryThreshold Field Value Type Description double View Source objectBoundaryThresholdPerClass (SEG) 클래스별 object boundary threshold 값입니다. n번째 값이 클수록 n번째 클래스의 mask 및 segmented object의 경계가 좁아집니다. Declaration public int[] objectBoundaryThresholdPerClass Field Value Type Description int[] View Source objectScoreThreshold (IAD) 검출된 segmented object의 score가 이 값보다 작으면 최종 결과에서 제외됩니다. calcObject가 true일 때 유효합니다. Declaration public double objectScoreThreshold Field Value Type Description double View Source objectScoreThresholdPerClass (SEG, DET) 클래스별 object score threshold 값입니다. n번째 클래스로 검출된 segmented object의 score가 n번째 값보다 작으면 최종 결과에서 제외됩니다. 0번 인덱스 값은 OK 클래스에 대응하는 값으로 의미가 없으며 설정도 불가능합니다. calcObject가 true일 때 유효합니다. Declaration public double[] objectScoreThresholdPerClass Field Value Type Description double[] View Source oversizedImageHandling (SEG, IEN) SaigeHandleConfig에서 지정한 inspection size보다 큰 이미지를 처리하는 방법입니다. Segmentation 은 SAIGE_DO_NOT_INSPECT, SAIGE_RESIZE_TO_FIT, SAIGE_CROP_INTO_TILES 세 가지 옵션을 사용할 수 있으며, Image Enhancement에서는 SAIGE_DO_NOT_ENHANCE, SAIGE_CROP_INTO_TILES 두 가지 옵션을 사용할 수 있습니다. DO_NOT_INSPECT : 추론을 수행하지 않고 에러를 일으킵니다. DO_NOT_ENHANCE : 추론을 수행하지 않고 에러를 일으킵니다. RESIZE_TO_FIT : 이미지의 가로-세로 비율을 유지하면서 inspection size 보다는 크지 않게 이미지를 리사이즈하여 추론을 수행합니다. CROP_INTO_TILES : Inspection size로 이미지를 크롭하여 패치마다 추론을 수행한 뒤 각 결과를 합쳐 내보냅니다. Declaration public IntPtr oversizedImageHandling Field Value Type Description IntPtr View Source polygonScoreThreshold (OCR) 검출된 글자영역인 polygon score 값이 이 값보다 작으면 최종 결과에서 제외됩니다. Declaration public double polygonScoreThreshold Field Value Type Description double View Source textFormatting (OCR) 인식하고자 하는 글자의 포맷을 지정하는 옵션입니다. Declaration public SaigeTextFormatting textFormatting Field Value Type Description SaigeTextFormatting View Source textScoreThreshold (OCR) 인식된 글자 오브젝트의 text score 값이 이 값보다 작으면 최종 결과에서 제외됩니다. Declaration public double textScoreThreshold Field Value Type Description double View Source textSizeRangeMax (OCR) 검출된 글자영역 크기의 유효범위 상한값입니다. 이 값보다 큰 글자는 최종 결과에서 제외됩니다. Declaration public int textSizeRangeMax Field Value Type Description int View Source textSizeRangeMin (OCR) 검출된 글자영역 크기의 유효범위 하한값입니다. 이 값보다 작은 글자는 최종 결과에서 제외됩니다. Declaration public int textSizeRangeMin Field Value Type Description int"
  },
  "api_reference/SaigeVision.Net.Core.V2.SaigeKeyInfoDict.html": {
    "href": "api_reference/SaigeVision.Net.Core.V2.SaigeKeyInfoDict.html",
    "title": "Struct SaigeKeyInfoDict",
    "keywords": "Struct SaigeKeyInfoDict (KIE) KIE 기능 반영 시 안내 예정. Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: SaigeVision.Net.Core.V2 Assembly: SaigeVision.Net.Core.V2.dll Syntax public struct SaigeKeyInfoDict Fields View Source infos Declaration public IntPtr infos Field Value Type Description IntPtr View Source keys Declaration public IntPtr keys Field Value Type Description IntPtr View Source numOfKey Declaration public int numOfKey Field Value Type Description int"
  },
  "api_reference/SaigeVision.Net.Core.V2.SaigeModelInfo.html": {
    "href": "api_reference/SaigeVision.Net.Core.V2.SaigeModelInfo.html",
    "title": "Struct SaigeModelInfo",
    "keywords": "Struct SaigeModelInfo 모델 정보가 담긴 구조체입니다. Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: SaigeVision.Net.Core.V2 Assembly: SaigeVision.Net.Core.V2.dll Syntax public struct SaigeModelInfo Fields View Source classColors 클래스 색상 코드입니다. HTML 포맷의 색상 코드로, SaigeColorCodeToRGB API를 통해 RGB 값으로 변환할 수 있습니다. Declaration public char[] classColors Field Value Type Description char[] View Source classIsNg 클래스가 NG 클래스인지 나타냅니다. Declaration public bool[] classIsNg Field Value Type Description bool[] View Source classNames 클래스 이름입니다. Declaration public byte[] classNames Field Value Type Description byte[] View Source cropSizeHeight (SEG) 학습 때 사용된 패치의 높이입니다. 추론 이미지와는 관련 없습니다. Declaration public int cropSizeHeight Field Value Type Description int View Source cropSizeWidth (SEG) 학습 때 사용된 패치의 너비입니다. 추론 이미지와는 관련 없습니다. Declaration public int cropSizeWidth Field Value Type Description int View Source developerVersion 모델을 학습할 때 사용한 SaigeVision Developer의 버전입니다. Declaration public char[] developerVersion Field Value Type Description char[] View Source imageResizeHeight (IAD) 인풋 이미지에 적용되는 리사이즈 높이입니다. 추론 이미지에도 동일하게 적용됩니다. Declaration public int imageResizeHeight Field Value Type Description int View Source imageResizeWidth (IAD) 인풋 이미지에 적용되는 리사이즈 너비입니다. 추론 이미지에도 동일하게 적용됩니다. Declaration public int imageResizeWidth Field Value Type Description int View Source moduleVersion 모델을 학습할 때 사용한 SaigeVision Developer의 구성 요소 중 딥러닝 모듈의 버전입니다. Declaration public char[] moduleVersion Field Value Type Description char[] View Source networkType 어떤 종류의 딥러닝 네트워크를 사용했는지 나타냅니다. 네트워크 타입 중 (v1)으로 끝나는 것들은 SaigeVision 1.x.x 버전에서 사용되던 네트워크 타입을 뜻합니다. (네트워크 종류가 동일할 뿐, 모델 파일이 호환되지는 않습니다). IAD: Fast, Standard, Accurate SEG: Fast, Standard, Accurate, Shallow(V1), Standard(V1), Deep(V1) Declaration public string networkType Field Value Type Description string View Source numOfClasses 클래스 개수입니다. IAD: 2 (OK와 NG로 고정) SEG: 사용자가 추가한 클래스 개수+1, 자동 할당된 OK 클래스 포함 Declaration public int numOfClasses Field Value Type Description int View Source resizeFactor (SEG) 인풋 이미지에 적용되는 리사이즈 비율입니다. 추론 이미지에도 동일하게 적용됩니다. Declaration public float resizeFactor Field Value Type Description float View Source roiInfo ROI 정보입니다. Declaration public SaigeRoiInfo roiInfo Field Value Type Description SaigeRoiInfo View Source serverVersion 모델을 학습할 때 사용한 SaigeVision Developer의 구성 요소 중 서버의 버전입니다. Declaration public char[] serverVersion Field Value Type Description char[] View Source targetImageQuality (IEN) 학습시 선택한 enhancement 품질입니다. high, ultra-high 중 하나입니다. Declaration public string targetImageQuality Field Value Type Description string View Source targetTextSize (OCR) 이미지의 텍스트 박스의 height가 targetTextSize가 되도록 학습 단계에서 resize 배율을 자동으로 찾아줍니다. Declaration public int targetTextSize Field Value Type Description int Properties View Source description 학습 시 지정한 모델 설명 문구입니다. Declaration public IntPtr description { get; set; } Property Value Type Description IntPtr View Source numOfIterations 학습을 진행한 반복 수 입니다. Declaration public IntPtr numOfIterations { get; set; } Property Value Type Description IntPtr View Source numOfTrainImages 학습에 직접 사용한 이미지 수 입니다. Declaration public int numOfTrainImages { get; set; } Property Value Type Description int View Source numOfValidationImages 학습과정에서 Validation에 사용한 이미지 수 입니다. Declaration public int numOfValidationImages { get; set; } Property Value Type Description int View Source trainingTimeCompleted 학습이 종료된 시각을 나타내는 unix timestamp 값입니다. Declaration public long trainingTimeCompleted { get; set; } Property Value Type Description long View Source trainingTimeElapsed 학습을 완료하는데 걸린 시간을 초로 나타낸 값입니다. Declaration public long trainingTimeElapsed { get; set; } Property Value Type Description long View Source trainingTimeStated 학습을 시작한 시각을 나타내는 unix timestamp 값입니다. Declaration public long trainingTimeStated { get; set; } Property Value Type Description long View Source usedGpuName 학습 시 사용한 GPU의 이름입니다. Declaration public IntPtr usedGpuName { get; set; } Property Value Type Description IntPtr"
  },
  "api_reference/SaigeVision.Net.Core.V2.SaigeOCRTextBox.html": {
    "href": "api_reference/SaigeVision.Net.Core.V2.SaigeOCRTextBox.html",
    "title": "Struct SaigeOCRTextBox",
    "keywords": "Struct SaigeOCRTextBox (OCR) OCR 기능 반영 시 안내 예정. Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: SaigeVision.Net.Core.V2 Assembly: SaigeVision.Net.Core.V2.dll Syntax public struct SaigeOCRTextBox Fields View Source height Declaration public int height Field Value Type Description int View Source nPoints Declaration public int nPoints Field Value Type Description int View Source patch Declaration public IntPtr patch Field Value Type Description IntPtr View Source points Declaration public IntPtr points Field Value Type Description IntPtr View Source text Declaration public IntPtr text Field Value Type Description IntPtr View Source width Declaration public int width Field Value Type Description int"
  },
  "api_reference/SaigeVision.Net.Core.V2.SaigeRoiInfo.html": {
    "href": "api_reference/SaigeVision.Net.Core.V2.SaigeRoiInfo.html",
    "title": "Struct SaigeRoiInfo",
    "keywords": "Struct SaigeRoiInfo ROI 정보가 담긴 구조체입니다. ROI 모드와 그에 대응하는 파라미터, 그리고 공통적으로 사용되는 blind mask 정보로 구성되어 있습니다. Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: SaigeVision.Net.Core.V2 Assembly: SaigeVision.Net.Core.V2.dll Syntax public struct SaigeRoiInfo Fields View Source blindMask Blind가 적용된 픽셀은 1, 그렇지 않은 픽셀은 0으로 표시된 mask입니다. ROI가 적용된 모델에 한해 확인할 수 있는 정보입니다. ROI가 적용되지 않은 모델의 경우 null 포인터가 제공됩니다. Declaration public IntPtr blindMask Field Value Type Description IntPtr View Source blindMaskHeight Blind mask의 높이입니다. Declaration public int blindMaskHeight Field Value Type Description int View Source blindMaskWidth Blind mask의 너비입니다. Declaration public int blindMaskWidth Field Value Type Description int View Source bottom (simple) 이미지 높이 대비 ROI 아래쪽 좌표값의 비율입니다. Declaration public double bottom Field Value Type Description double View Source expansion (advanced) Advanced ROI 기능 반영 시 안내 예정. Declaration public int expansion Field Value Type Description int View Source intensityMax (advanced) Advanced ROI 기능 반영 시 안내 예정. Declaration public int intensityMax Field Value Type Description int View Source intensityMin (advanced) Advanced ROI 기능 반영 시 안내 예정. Declaration public int intensityMin Field Value Type Description int View Source inversion (advanced) Advanced ROI 기능 반영 시 안내 예정. Declaration public bool inversion Field Value Type Description bool View Source left (simple) 이미지 너비 대비 ROI 왼쪽 좌표값의 비율입니다. Declaration public double left Field Value Type Description double View Source offsetBottom (advanced) Advanced ROI 기능 반영 시 안내 예정. Declaration public double offsetBottom Field Value Type Description double View Source offsetLeft (advanced) Advanced ROI 기능 반영 시 안내 예정. Declaration public double offsetLeft Field Value Type Description double View Source offsetRight (advanced) Advanced ROI 기능 반영 시 안내 예정. Declaration public double offsetRight Field Value Type Description double View Source offsetTop (advanced) Advanced ROI 기능 반영 시 안내 예정. Declaration public double offsetTop Field Value Type Description double View Source right (simple) 이미지 너비 대비 ROI 오른쪽 좌표값의 비율입니다. Declaration public double right Field Value Type Description double View Source roiMode ROI가 simple 모드인지 advanced 모드인지 나타냅니다. Declaration public string roiMode Field Value Type Description string View Source top (simple) 이미지 높이 대비 ROI 위쪽 좌표값의 비율입니다. Declaration public double top Field Value Type Description double"
  },
  "api_reference/SaigeVision.Net.Core.V2.SaigeRotatedBox.html": {
    "href": "api_reference/SaigeVision.Net.Core.V2.SaigeRotatedBox.html",
    "title": "Struct SaigeRotatedBox",
    "keywords": "Struct SaigeRotatedBox Saige Rotated Box Structure Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: SaigeVision.Net.Core.V2 Assembly: SaigeVision.Net.Core.V2.dll Syntax public struct SaigeRotatedBox Fields View Source angle 직사각형이 시계 방향으로 회전한 각도입니다. 단위는 '도'입니다. Declaration public double angle Field Value Type Description double View Source center 직사각형의 중심점 좌표입니다. 좌표 값은 {x, y}입니다. Declaration public double[] center Field Value Type Description double[] View Source height 직사각형의 높이입니다. Declaration public double height Field Value Type Description double View Source points 직사각형의 꼭지점 좌표입니다. 좌표 값은 {x1, y1, x2, y2, x3, y3, x4, y4}입니다. 1번 점부터 4번 점까지의 순서는 회전하기 전의 직사각형을 기준으로 합니다. 1번 점은 회전하기 전 직사각형의 왼쪽 아래 점이며, 1번 점부터 시계 방향 순서로 2번, 3번, 4번 점이 이어집니다. Declaration public double[] points Field Value Type Description double[] View Source width 직사각형의 너비입니다. Declaration public double width Field Value Type Description double"
  },
  "api_reference/SaigeVision.Net.Core.V2.SaigeSegmentedObject.html": {
    "href": "api_reference/SaigeVision.Net.Core.V2.SaigeSegmentedObject.html",
    "title": "Struct SaigeSegmentedObject",
    "keywords": "Struct SaigeSegmentedObject Segmentation 또는 Anomaly Detection을 통해 검출된 영역의 정보가 담긴 구조체입니다. Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: SaigeVision.Net.Core.V2 Assembly: SaigeVision.Net.Core.V2.dll Syntax public struct SaigeSegmentedObject Fields View Source area 검출된 영역의 면적입니다. Declaration public uint area Field Value Type Description uint View Source boundingBox 검출된 영역을 포함하면서 면적이 가장 작은 직사각형입니다. 회전각은 항상 0도입니다. Declaration public SaigeRotatedBox boundingBox Field Value Type Description SaigeRotatedBox View Source boundingRotBox 검출된 영역을 포함하면서 면적이 가장 작은 직사각형입니다. 회전각이 0도가 아닐 수 있습니다. Declaration public SaigeRotatedBox boundingRotBox Field Value Type Description SaigeRotatedBox View Source classIndex 검출된 영역이 속한 클래스의 인덱스입니다. 검출된 segmented object는 OK 클래스(0번 인덱스)에 속할 수 없습니다. 따라서 classIndex는 반드시 1 이상의 값을 가집니다. Declaration public uint classIndex Field Value Type Description uint View Source fittedEllipse 검출된 영역에 가장 잘 맞는 타원입니다. Declaration public SaigeEllipse fittedEllipse Field Value Type Description SaigeEllipse View Source numOfContours 검출된 영역을 표현하는 contour의 개수입니다. Declaration public int numOfContours Field Value Type Description int View Source numOfPointsOnContour 각 contour를 구성하는 점의 개수입니다. Declaration public IntPtr numOfPointsOnContour Field Value Type Description IntPtr View Source pointsOnContour 각 contour를 구성하는 점을 contour 순서대로 담은 배열입니다. {x1, y1, x2, y2, … }와 같은 식으로 구성되어 있습니다. Declaration public IntPtr pointsOnContour Field Value Type Description IntPtr View Source score 검출된 영역을 대표하는 score 값입니다. Declaration public double score Field Value Type Description double"
  },
  "api_reference/SaigeVision.Net.Core.V2.SaigeTextFormatting.html": {
    "href": "api_reference/SaigeVision.Net.Core.V2.SaigeTextFormatting.html",
    "title": "Struct SaigeTextFormatting",
    "keywords": "Struct SaigeTextFormatting (OCR) 인식하고자 하는 글자의 포맷을 지정하는 옵션입니다. 글자 수에 관계 없이 인식하고자 하는 글자집합을 설정하는 방식과, 글자의 위치별로 인식하고자 하는 글자집합을 설정하는 두 가지 방식이 있습니다. Text Formatting 방식과 설정 방법은 다음과 같습니다. 글자 수에 관계 없이 글자 집합을 지정하는 방식 (By Character Set) length 값을 0으로 설정합니다. 각 문자집합 bool 배열의 첫 번째 값을 지정합니다. 예시: 영소문자, 숫자만 인식하는 경우 SaigeInferenceOption option; option.textFormatting.length = 0; option.textFormatting.engLower[0] = true; option.textFormatting.engUpper[0] = false; option.textFormatting.kor[0] = false; option.textFormatting.number[0] = true; option.textFormatting.symbol[0] = false; 글자 수와 패턴을 지정하는 방식(By Character Pattern) length 값을 0 초과, MaxLenOfTextFormatting 이하로 설정합니다. 각 문자집합 bool 배열의 0 ~ length-1 까지의 값을 지정합니다. 예시: 000가1234 (숫자 3자리, 한글 1자리, 숫자 4자리) SaigeInferenceOption option; option.textFormatting.length = 8; option.textFormatting.number[3] = false; option.textFormatting.kor[3] = true; Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: SaigeVision.Net.Core.V2 Assembly: SaigeVision.Net.Core.V2.dll Syntax public struct SaigeTextFormatting Fields View Source engLower 영소문자를 포함하는지 여부를 지정하는 변수입니다. Declaration public bool[] engLower Field Value Type Description bool[] View Source engUpper 영대문자를 포함하는지 여부를 지정하는 변수입니다. Declaration public bool[] engUpper Field Value Type Description bool[] View Source kor 한글을 포함하는지 여부를 지정하는 변수입니다. 지원하는 한글집합은 KSC5601을 지원하며 예외적인 글자도 추가될 수 있습니다. Declaration public bool[] kor Field Value Type Description bool[] View Source length 인식하려는 글자의 수를 지정합니다. 0인 경우 글자 수에 관계 없는 옵션을 의미합니다. Declaration public int length Field Value Type Description int View Source number 숫자를 포함하는지 여부를 지정하는 변수입니다. Declaration public bool[] number Field Value Type Description bool[] View Source symbol 기호를 포함하는지 여부를 지정하는 변수입니다. 지원하는 기호의 종류는 다음과 같습니다. .,'\"·●°_~-+±=*※#%&@:/!?(){}[]<> Declaration public bool[] symbol Field Value Type Description bool[]"
  },
  "api_reference/SaigeVision.Net.Core.V2.SaigeTextObject.html": {
    "href": "api_reference/SaigeVision.Net.Core.V2.SaigeTextObject.html",
    "title": "Struct SaigeTextObject",
    "keywords": "Struct SaigeTextObject (OCR) 텍스트를 검출하는 OCR 검사의 결과가 담긴 구조체입니다. OCR기능은 글자의 영역을 검출하는 부분과 해당 영역의 글자 종류를 인식하는 부분으로 나뉘어있습니다. SaigeVision OCR에서는 글자의 영역을 polygon 형태(2차원 점의 배열)로 제공하며 문자열 정보를 같이 담은 구조체로 검사결과를 제공합니다. Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: SaigeVision.Net.Core.V2 Assembly: SaigeVision.Net.Core.V2.dll Syntax public struct SaigeTextObject Fields View Source numOfPoints 글자 영역을 구성하는 점의 개수 입니다. Declaration public int numOfPoints Field Value Type Description int View Source points 글자 영역 polygon의 점의 좌표입니다. 순서는 x1, y1, x2, y2, ..., xn, yn 형태입니다. Declaration public IntPtr points Field Value Type Description IntPtr View Source polygonScore 검출된 글자 영역의 신뢰도 점수입니다. Declaration public double polygonScore Field Value Type Description double View Source text 검출된 문자열 값입니다. Declaration public IntPtr text Field Value Type Description IntPtr View Source textLength 검출된 문자열의 마지막 null 문자를 제외한 길이입니다. Declaration public int textLength Field Value Type Description int View Source textScore 인식된 글자의 확률적 점수입니다. 각 글자별 점수의 평균값 입니다. Declaration public double textScore Field Value Type Description double View Source textSize 검출된 글자의 크기입니다. Declaration public double textSize Field Value Type Description double"
  },
  "api_reference/SaigeVision.Net.V2.BitmapExtension.html": {
    "href": "api_reference/SaigeVision.Net.V2.BitmapExtension.html",
    "title": "Class BitmapExtension",
    "keywords": "Class BitmapExtension Bitmap 관련 정적 클래스입니다. Inheritance object BitmapExtension Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SaigeVision.Net.V2 Assembly: SaigeVision.Net.V2.dll Syntax public static class BitmapExtension Methods View Source GetImageTypeFlag(Mat) Declaration public static ImageTypeFlags GetImageTypeFlag(Mat mat) Parameters Type Name Description Mat mat Returns Type Description ImageTypeFlags View Source GetMatType(int) 이미지 channel 값을 넣으면 적절한 PixelFormat으로 변경해주는 기능 Declaration public static MatType GetMatType(int channel) Parameters Type Name Description int channel Channel 정보 (1,3,4 중 하나 입력) Returns Type Description MatType 채널에 맞는 적절한 PixelFormat View Source ToMat(int, int, int, byte[]) Declaration public static Mat ToMat(int width, int height, int channel, byte[] data) Parameters Type Name Description int width int height int channel byte[] data Returns Type Description Mat View Source ToMat(int, int, int, IntPtr) Declaration public static Mat ToMat(int width, int height, int channel, IntPtr data) Parameters Type Name Description int width int height int channel IntPtr data Returns Type Description Mat"
  },
  "api_reference/SaigeVision.Net.V2.Classification.ClassificationEngine.html": {
    "href": "api_reference/SaigeVision.Net.V2.Classification.ClassificationEngine.html",
    "title": "Class ClassificationEngine",
    "keywords": "Class ClassificationEngine Classification를 수행할 수 있는 Engine입니다 Inheritance object InspectionEngine<ClassificationOption, ClassificationResult> ClassificationEngine Implements IInspectionEngine<ClassificationOption, ClassificationResult> IDisposable Inherited Members InspectionEngine<ClassificationOption, ClassificationResult>.GetInferenceOption() InspectionEngine<ClassificationOption, ClassificationResult>.SetInferenceOption(ClassificationOption, bool) InspectionEngine<ClassificationOption, ClassificationResult>.GetResult() InspectionEngine<ClassificationOption, ClassificationResult>.GetResults() InspectionEngine<ClassificationOption, ClassificationResult>.Results InspectionEngine<ClassificationOption, ClassificationResult>.GetModelInfo() InspectionEngine<ClassificationOption, ClassificationResult>.GetModuleVersion() InspectionEngine<ClassificationOption, ClassificationResult>.Inspection(SrImage) InspectionEngine<ClassificationOption, ClassificationResult>.Inspection(SrImage[]) InspectionEngine<ClassificationOption, ClassificationResult>.InspectionAsync(SrImage) InspectionEngine<ClassificationOption, ClassificationResult>.InspectionAsync(SrImage[]) InspectionEngine<ClassificationOption, ClassificationResult>.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: SaigeVision.Net.V2.Classification Assembly: SaigeVision.Net.V2.dll Syntax public sealed class ClassificationEngine : InspectionEngine<ClassificationOption, ClassificationResult>, IInspectionEngine<ClassificationOption, ClassificationResult>, IDisposable Constructors View Source ClassificationEngine(string, int, int, bool) 생성자입니다 Declaration public ClassificationEngine(string model, int gpuNumber, int batchSize = 1, bool useOptimize = false) Parameters Type Name Description string model .saigecls 모델파일의 경로 int gpuNumber 추론에 사용할 장치의 인덱스 int batchSize 추론을 한 번 수행할 때 몇 개의 이미지를 동시에 추론할지 설정 bool useOptimize 최적화 적용하는 플래그. 추론 최적화를 적용하면 추론 시간이 단축되지만, 추론 결과가 약간 달라질 수 있습니다. See Also InspectionEngine<TOption, UResult> ClassificationOption ClassificationResult Methods View Source GetInferenceOption() 검사에 필요한 옵션값을 가져옵니다 Declaration public override ClassificationOption GetInferenceOption() Returns Type Description ClassificationOption 검사에 필요한 옵션값 Overrides SaigeVision.Net.V2.InspectionEngine<SaigeVision.Net.V2.Classification.ClassificationOption, SaigeVision.Net.V2.Classification.ClassificationResult>.GetInferenceOption() See Also InspectionEngine<TOption, UResult> ClassificationOption ClassificationResult View Source GetResult() 검사 결과를 받아오는 함수 Declaration public override ClassificationResult GetResult() Returns Type Description ClassificationResult 검사 결과가 담겨있는 값 Overrides SaigeVision.Net.V2.InspectionEngine<SaigeVision.Net.V2.Classification.ClassificationOption, SaigeVision.Net.V2.Classification.ClassificationResult>.GetResult() See Also InspectionEngine<TOption, UResult> ClassificationOption ClassificationResult View Source GetResults() 검사 결과를 받아오는 함수 Declaration public override ClassificationResult[] GetResults() Returns Type Description ClassificationResult[] 검사 결과가 담겨있는 배열값 Overrides SaigeVision.Net.V2.InspectionEngine<SaigeVision.Net.V2.Classification.ClassificationOption, SaigeVision.Net.V2.Classification.ClassificationResult>.GetResults() See Also InspectionEngine<TOption, UResult> ClassificationOption ClassificationResult View Source SetInferenceOption(ClassificationOption, bool) 검사에 필요한 옵션값을 설정합니다 Declaration public override void SetInferenceOption(ClassificationOption option, bool writeModelFile = false) Parameters Type Name Description ClassificationOption option 옵션을 설정할 값 bool writeModelFile 모델파일에 옵션값을 덮어 씁니다. Overrides SaigeVision.Net.V2.InspectionEngine<SaigeVision.Net.V2.Classification.ClassificationOption, SaigeVision.Net.V2.Classification.ClassificationResult>.SetInferenceOption(SaigeVision.Net.V2.Classification.ClassificationOption, bool) See Also InspectionEngine<TOption, UResult> ClassificationOption ClassificationResult Implements IInspectionEngine<TOption, UResult> System.IDisposable See Also InspectionEngine<TOption, UResult> ClassificationOption ClassificationResult"
  },
  "api_reference/SaigeVision.Net.V2.Classification.ClassificationOption.html": {
    "href": "api_reference/SaigeVision.Net.V2.Classification.ClassificationOption.html",
    "title": "Class ClassificationOption",
    "keywords": "Class ClassificationOption 검사에 필요한 옵션을 가져오거나 설정할 수 있습니다. Inheritance object InspectionOption ClassificationOption Implements IInspectionOption Inherited Members InspectionOption.CalcTime InspectionOption.BatchSize object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SaigeVision.Net.V2.Classification Assembly: SaigeVision.Net.V2.dll Syntax public class ClassificationOption : InspectionOption, IInspectionOption Constructors View Source ClassificationOption(bool, int, bool, float[]) 검사 결과에 필요한 옵션값을 설정합니다 Declaration public ClassificationOption(bool calcTime, int batchSize, bool calcClassActivationMap, float[] additionalScores) Parameters Type Name Description bool calcTime 추론 API 실행에 소요되는 시간을 세분화하여 출력할지 결정합니다. int batchSize 추론을 한 번 수행할 때 추론하는 이미지의 개수입니다. bool calcClassActivationMap true로 설정하면 추론 시 class activation map을 계산합니다. float[] additionalScores 클래스별 additional score 값입니다. Properties View Source AdditionalScores 클래스별 additional score 값입니다. n번째 인덱스에 설정한 값만큼 n번째 클래스에 추가 score가 부여됩니다. 각 additional score 값은 0 이상 100 이하의 실수로만 설정 가능합니다. Declaration public float[] AdditionalScores { get; set; } Property Value Type Description float[] View Source CalcClassActivationMap true로 설정하면 추론 시 class activation map을 계산합니다. true로 설정하면 전체 추론 시간이 느려지며 추론 최적화를 적용하는 것도 불가능합니다. 실제 검사 시에는 false로 설정하는 것을 권장합니다. Declaration public bool CalcClassActivationMap { get; set; } Property Value Type Description bool Implements IInspectionOption"
  },
  "api_reference/SaigeVision.Net.V2.Classification.ClassificationResult.html": {
    "href": "api_reference/SaigeVision.Net.V2.Classification.ClassificationResult.html",
    "title": "Class ClassificationResult",
    "keywords": "Class ClassificationResult Classification 검사 결과에 대한 정보가 담겨있는 클래스입니다. Inheritance object InspectionResult ClassificationResult Implements IInspectionResult Inherited Members InspectionResult.InspectionTime object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SaigeVision.Net.V2.Classification Assembly: SaigeVision.Net.V2.dll Syntax public class ClassificationResult : InspectionResult, IInspectionResult Constructors View Source ClassificationResult(ClassScoreInfo, ClassScoreInfo[], Bitmap, InferenceTimeInfo) 생성자입니다. Declaration public ClassificationResult(ClassScoreInfo bestScoreClassInfo, ClassScoreInfo[] classScoreInfos, Bitmap activationMap, InferenceTimeInfo inspectionTime) Parameters Type Name Description ClassScoreInfo bestScoreClassInfo Additional score 까지 반영된 클래스별 최종 score 값 중 가장 값의 ClassScoreInfo를 받아옵니다. ClassScoreInfo[] classScoreInfos 클래스별 score 값이 담긴 ClassScoreInfo 배열을 받아 옵니다. Bitmap activationMap Activation Bitmap을 받아 옵니다. InferenceTimeInfo inspectionTime 추론 API 실행에 소요된 시간을 밀리초 단위로 받아 옵니다. Properties View Source ActivationMap ActivationMap을 Bitmap 형식으로 받아 옵니다. Declaration public Bitmap ActivationMap { get; set; } Property Value Type Description Bitmap View Source BestScoreClassInfo Additional score 까지 반영된 클래스별 최종 score 값 중 가장 값의 ClassScoreInfo를 받아옵니다. Declaration public ClassScoreInfo BestScoreClassInfo { get; set; } Property Value Type Description ClassScoreInfo View Source ClassScoreInfos 클래스별 score 값이 담긴 ClassScoreInfo 배열을 받아 옵니다. Declaration public ClassScoreInfo[] ClassScoreInfos { get; set; } Property Value Type Description ClassScoreInfo[] Implements IInspectionResult"
  },
  "api_reference/SaigeVision.Net.V2.Classification.html": {
    "href": "api_reference/SaigeVision.Net.V2.Classification.html",
    "title": "Namespace SaigeVision.Net.V2.Classification",
    "keywords": "Namespace SaigeVision.Net.V2.Classification Classes ClassificationEngine Classification를 수행할 수 있는 Engine입니다 ClassificationOption 검사에 필요한 옵션을 가져오거나 설정할 수 있습니다. ClassificationResult Classification 검사 결과에 대한 정보가 담겨있는 클래스입니다."
  },
  "api_reference/SaigeVision.Net.V2.ClassInfo.html": {
    "href": "api_reference/SaigeVision.Net.V2.ClassInfo.html",
    "title": "Class ClassInfo",
    "keywords": "Class ClassInfo 검출하고자 하는 요소에 분류 구분이 지정 되어 있는 정보입니다. Inheritance object ClassInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SaigeVision.Net.V2 Assembly: SaigeVision.Net.V2.dll Syntax public class ClassInfo Constructors View Source ClassInfo(string, Color) 생성자입니다. Declaration public ClassInfo(string name, Color color) Parameters Type Name Description string name 클래스 이름 Color color 클래스 색상 Properties View Source Color 클래스 색상 Declaration public Color Color { get; } Property Value Type Description Color View Source Name 클래스 이름 Declaration public string Name { get; } Property Value Type Description string"
  },
  "api_reference/SaigeVision.Net.V2.ClassScoreInfo.html": {
    "href": "api_reference/SaigeVision.Net.V2.ClassScoreInfo.html",
    "title": "Class ClassScoreInfo",
    "keywords": "Class ClassScoreInfo Class Score 정보 확인 Inheritance object ClassScoreInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SaigeVision.Net.V2 Assembly: SaigeVision.Net.V2.dll Syntax public class ClassScoreInfo Constructors View Source ClassScoreInfo(ClassInfo, float) ClassScoreInfo 를 위한 생성자 Declaration public ClassScoreInfo(ClassInfo classInfo, float score) Parameters Type Name Description ClassInfo classInfo ClassInfo 정보 float score Score 값 Properties View Source ClassInfo ClassInfo 정보 Declaration public ClassInfo ClassInfo { get; set; } Property Value Type Description ClassInfo View Source Score Score 값 Declaration public float Score { get; set; } Property Value Type Description float"
  },
  "api_reference/SaigeVision.Net.V2.Contour.html": {
    "href": "api_reference/SaigeVision.Net.V2.Contour.html",
    "title": "Class Contour",
    "keywords": "Class Contour 컨투어 형태의 라벨링 방법입니다. Inheritance object Contour Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SaigeVision.Net.V2 Assembly: SaigeVision.Net.V2.dll Syntax public class Contour Constructors View Source Contour(List<PointF>, List<List<PointF>>) 생성자입니다. Declaration public Contour(List<PointF> value, List<List<PointF>> innerValue) Parameters Type Name Description List<PointF> value 컨투어 값 List<List<PointF>> innerValue 내부 컨투어 값 View Source Contour(List<PointF>) 생성자입니다. Declaration public Contour(List<PointF> value) Parameters Type Name Description List<PointF> value 컨투어 값 Properties View Source InnerValue 내부 컨투어값 Declaration public List<List<PointF>> InnerValue { get; } Property Value Type Description List<List<PointF>> View Source Value 컨투어값 Declaration public List<PointF> Value { get; } Property Value Type Description List<PointF> Methods View Source GetContour(int, IntPtr, IntPtr) Engine으로 부터 받은 contour에 대한 정보를 Contour 형태로 값을 가져온다 Declaration public static Contour GetContour(int nContours, IntPtr nPointsOnContour, IntPtr pointsOnContour) Parameters Type Name Description int nContours 검출된 영역을 표현하는 contour의 개수입니다. IntPtr nPointsOnContour 각 contour를 구성하는 점의 개수입니다. IntPtr pointsOnContour 각 contour를 구성하는 점을 contour 순서대로 담은 배열입니다. {x1, y1, x2, y2, … }와 같은 식으로 구성되어 있습니다. Returns Type Description Contour Contour View Source GetContour(int, IntPtr) Engine으로 부터 받은 contour에 대한 정보를 Contour 형태로 값을 가져온다 오직 하나의 contour 일 경우에 사용 Declaration public static Contour GetContour(int nPointsOnContour, IntPtr pointsOnContour) Parameters Type Name Description int nPointsOnContour 각 contour를 구성하는 점의 개수입니다. IntPtr pointsOnContour 각 contour를 구성하는 점을 contour 순서대로 담은 배열입니다. {x1, y1, x2, y2, … }와 같은 식으로 구성되어 있습니다. Returns Type Description Contour Contour"
  },
  "api_reference/SaigeVision.Net.V2.DetectedObject.html": {
    "href": "api_reference/SaigeVision.Net.V2.DetectedObject.html",
    "title": "Class DetectedObject",
    "keywords": "Class DetectedObject Detection을 통해 검출된 영역의 정보가 담긴 구조체입니다. Inheritance object DetectedObject Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SaigeVision.Net.V2 Assembly: SaigeVision.Net.V2.dll Syntax public class DetectedObject Constructors View Source DetectedObject(RotatedBox, ClassInfo, int, uint) 생성자입니다 Declaration public DetectedObject(RotatedBox boundingBox, ClassInfo classInfo, int score, uint area) Parameters Type Name Description RotatedBox boundingBox 검출된 detected object에 대응하는 직사각형입니다. ClassInfo classInfo 검출된 영역이 속한 클래스의 정보입니다. int score 검출된 영역을 대표하는 score 값입니다. 범위는 0 ~ 100입니다. uint area 검출된 영역의 면적입니다. Properties View Source Area 검출된 영역의 면적입니다. Declaration public uint Area { get; } Property Value Type Description uint View Source BoundingBox 검출된 detected object에 대응하는 직사각형입니다. Declaration public RotatedBox BoundingBox { get; } Property Value Type Description RotatedBox View Source ClassInfo 검출된 영역이 속한 클래스의 정보입니다. 검출된 detected object는 OK 클래스(0번 인덱스)에 속할 수 없습니다. 따라서 classIndex는 반드시 1 이상의 값을 가집니다 Declaration public ClassInfo ClassInfo { get; } Property Value Type Description ClassInfo View Source Score 검출된 영역을 대표하는 score 값입니다. 범위는 0 ~ 100입니다. Declaration public int Score { get; } Property Value Type Description int"
  },
  "api_reference/SaigeVision.Net.V2.Detection.DetectionEngine.html": {
    "href": "api_reference/SaigeVision.Net.V2.Detection.DetectionEngine.html",
    "title": "Class DetectionEngine",
    "keywords": "Class DetectionEngine Detection을 수행할 수 있는 Engine입니다 Inheritance object InspectionEngine<DetectionOption, DetectionResult> DetectionEngine Implements IInspectionEngine<DetectionOption, DetectionResult> IDisposable Inherited Members InspectionEngine<DetectionOption, DetectionResult>.GetInferenceOption() InspectionEngine<DetectionOption, DetectionResult>.SetInferenceOption(DetectionOption, bool) InspectionEngine<DetectionOption, DetectionResult>.GetResult() InspectionEngine<DetectionOption, DetectionResult>.GetResults() InspectionEngine<DetectionOption, DetectionResult>.Results InspectionEngine<DetectionOption, DetectionResult>.GetModelInfo() InspectionEngine<DetectionOption, DetectionResult>.GetModuleVersion() InspectionEngine<DetectionOption, DetectionResult>.Inspection(SrImage) InspectionEngine<DetectionOption, DetectionResult>.Inspection(SrImage[]) InspectionEngine<DetectionOption, DetectionResult>.InspectionAsync(SrImage) InspectionEngine<DetectionOption, DetectionResult>.InspectionAsync(SrImage[]) InspectionEngine<DetectionOption, DetectionResult>.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: SaigeVision.Net.V2.Detection Assembly: SaigeVision.Net.V2.dll Syntax public sealed class DetectionEngine : InspectionEngine<DetectionOption, DetectionResult>, IInspectionEngine<DetectionOption, DetectionResult>, IDisposable Constructors View Source DetectionEngine(string, int, bool) 생성자입니다 Declaration public DetectionEngine(string model, int gpuNumber, bool useOptimize = false) Parameters Type Name Description string model .saigedet 모델파일의 경로 int gpuNumber 추론에 사용할 장치의 인덱스 bool useOptimize 최적화 적용하는 플래그. 추론 최적화를 적용하면 추론 시간이 단축되지만, 추론 결과가 약간 달라질 수 있습니다. See Also InspectionEngine<TOption, UResult> DetectionOption DetectionResult Methods View Source GetInferenceOption() 검사에 필요한 옵션값을 가져옵니다 Declaration public override DetectionOption GetInferenceOption() Returns Type Description DetectionOption 검사에 필요한 옵션값 Overrides SaigeVision.Net.V2.InspectionEngine<SaigeVision.Net.V2.Detection.DetectionOption, SaigeVision.Net.V2.Detection.DetectionResult>.GetInferenceOption() See Also InspectionEngine<TOption, UResult> DetectionOption DetectionResult View Source GetResult() 검사 결과를 받아오는 함수 Declaration public override DetectionResult GetResult() Returns Type Description DetectionResult 검사 결과가 담겨있는 값 Overrides SaigeVision.Net.V2.InspectionEngine<SaigeVision.Net.V2.Detection.DetectionOption, SaigeVision.Net.V2.Detection.DetectionResult>.GetResult() See Also InspectionEngine<TOption, UResult> DetectionOption DetectionResult View Source GetResults() 검사 결과를 받아오는 함수 Declaration public override DetectionResult[] GetResults() Returns Type Description DetectionResult[] 검사 결과가 담겨있는 배열값 Overrides SaigeVision.Net.V2.InspectionEngine<SaigeVision.Net.V2.Detection.DetectionOption, SaigeVision.Net.V2.Detection.DetectionResult>.GetResults() See Also InspectionEngine<TOption, UResult> DetectionOption DetectionResult View Source SetInferenceOption(DetectionOption, bool) 검사에 필요한 옵션값을 설정합니다 Declaration public override void SetInferenceOption(DetectionOption option, bool writeModelFile = false) Parameters Type Name Description DetectionOption option 옵션을 설정할 값 bool writeModelFile 모델파일에 옵션값을 덮어 씁니다. Overrides SaigeVision.Net.V2.InspectionEngine<SaigeVision.Net.V2.Detection.DetectionOption, SaigeVision.Net.V2.Detection.DetectionResult>.SetInferenceOption(SaigeVision.Net.V2.Detection.DetectionOption, bool) See Also InspectionEngine<TOption, UResult> DetectionOption DetectionResult Implements IInspectionEngine<TOption, UResult> System.IDisposable See Also InspectionEngine<TOption, UResult> DetectionOption DetectionResult"
  },
  "api_reference/SaigeVision.Net.V2.Detection.DetectionOption.html": {
    "href": "api_reference/SaigeVision.Net.V2.Detection.DetectionOption.html",
    "title": "Class DetectionOption",
    "keywords": "Class DetectionOption Detection 검사에 필요한 옵션을 가져오거나 설정할 수 있습니다. Inheritance object InspectionOption DetectionOption Implements IInspectionOption Inherited Members InspectionOption.CalcTime InspectionOption.BatchSize object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SaigeVision.Net.V2.Detection Assembly: SaigeVision.Net.V2.dll Syntax public class DetectionOption : InspectionOption, IInspectionOption Constructors View Source DetectionOption(bool, int, int[], int[], double[]) 검사 결과에 필요한 옵션값을 설정합니다 Declaration public DetectionOption(bool calcTime, int batchSize, int[] maxNumOfDetectedObjects, int[] objectAreaThresholdPerClass, double[] objectScoreThresholdPerClass) Parameters Type Name Description bool calcTime 추론 API 실행에 소요되는 시간을 세분화하여 출력할지 결정합니다. int batchSize 추론을 한 번 수행할 때 추론하는 이미지의 개수입니다. int[] maxNumOfDetectedObjects 검출할 detected object의 최대 개수입니다. int[] objectAreaThresholdPerClass 클래스별 object area threshold 값입니다. double[] objectScoreThresholdPerClass 클래스별 object score threshold 값입니다. Properties View Source MaxNumOfDetectedObjects 검출할 detected object의 최대 개수입니다. 이 값보다 더 많은 개수의 detected object가 검출되면 score가 낮은 순으로 최종 결과에서 제외됩니다. Declaration public int[] MaxNumOfDetectedObjects { get; set; } Property Value Type Description int[] View Source ObjectAreaThresholdPerClass 클래스별 object area threshold 값입니다. n번째 클래스로 검출된 object의 면적이 n번째 값보다 작으면 최종 결과에서 제외됩니다. Declaration public int[] ObjectAreaThresholdPerClass { get; set; } Property Value Type Description int[] View Source ObjectScoreThresholdPerClass 클래스별 object score threshold 값입니다. n번째 클래스로 검출된 object의 score가 n번째 값보다 작으면 최종 결과에서 제외됩니다. Declaration public double[] ObjectScoreThresholdPerClass { get; set; } Property Value Type Description double[] Implements IInspectionOption"
  },
  "api_reference/SaigeVision.Net.V2.Detection.DetectionResult.html": {
    "href": "api_reference/SaigeVision.Net.V2.Detection.DetectionResult.html",
    "title": "Class DetectionResult",
    "keywords": "Class DetectionResult Segmentation 검사 결과에 대한 정보가 담겨있는 클래스입니다. Inheritance object InspectionResult DetectionResult Implements IInspectionResult Inherited Members InspectionResult.InspectionTime object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SaigeVision.Net.V2.Detection Assembly: SaigeVision.Net.V2.dll Syntax public class DetectionResult : InspectionResult, IInspectionResult Constructors View Source DetectionResult(DetectedObject[], InferenceTimeInfo) 생성자입니다. Declaration public DetectionResult(DetectedObject[] detectedObjects, InferenceTimeInfo inferenceTimeInfo) Parameters Type Name Description DetectedObject[] detectedObjects Detection을 통해 검출된 영역의 정보를 받아 옵니다. InferenceTimeInfo inferenceTimeInfo 추론 API 실행에 소요된 시간을 밀리초 단위로 받아 옵니다. Properties View Source DetectedObjects Detection을 통해 검출된 영역의 정보를 받아 옵니다. Declaration public DetectedObject[] DetectedObjects { get; } Property Value Type Description DetectedObject[] Implements IInspectionResult"
  },
  "api_reference/SaigeVision.Net.V2.Detection.html": {
    "href": "api_reference/SaigeVision.Net.V2.Detection.html",
    "title": "Namespace SaigeVision.Net.V2.Detection",
    "keywords": "Namespace SaigeVision.Net.V2.Detection Classes DetectionEngine Detection을 수행할 수 있는 Engine입니다 DetectionOption Detection 검사에 필요한 옵션을 가져오거나 설정할 수 있습니다. DetectionResult Segmentation 검사 결과에 대한 정보가 담겨있는 클래스입니다."
  },
  "api_reference/SaigeVision.Net.V2.Ellipse.html": {
    "href": "api_reference/SaigeVision.Net.V2.Ellipse.html",
    "title": "Class Ellipse",
    "keywords": "Class Ellipse Inheritance object Ellipse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SaigeVision.Net.V2 Assembly: SaigeVision.Net.V2.dll Syntax public class Ellipse Constructors View Source Ellipse(PointF, double, double, double) 생성자입니다 Declaration public Ellipse(PointF center, double width, double height, double angle) Parameters Type Name Description PointF center 중심점 좌표 double width 너비 double height 높이 double angle 각도값(도) Properties View Source Angle 직사각형이 시계 방향으로 회전한 각도입니다. 단위는 '도'입니다. Declaration public double Angle { get; set; } Property Value Type Description double View Source Center 직사각형의 중심점 좌표입니다. 좌표 값은 {x, y}입니다. Declaration public PointF Center { get; set; } Property Value Type Description PointF View Source Height 직사각형의 높이입니다. Declaration public double Height { get; set; } Property Value Type Description double View Source Width 직사각형의 너비입니다. Declaration public double Width { get; set; } Property Value Type Description double Methods View Source GetEllipse(SaigeEllipse) Engine으로 부터 받은 SaigeEllipse 을 Ellipse 형태로 변경해주는 기능 제공 Declaration public static Ellipse GetEllipse(SaigeEllipse saigeEllipse) Parameters Type Name Description SaigeEllipse saigeEllipse 엔진으로 부터 받은 SaigeEllipse값 Returns Type Description Ellipse Ellipse값"
  },
  "api_reference/SaigeVision.Net.V2.EngineTypeFlags.html": {
    "href": "api_reference/SaigeVision.Net.V2.EngineTypeFlags.html",
    "title": "Enum EngineTypeFlags",
    "keywords": "Enum EngineTypeFlags Engine Type을 선택하는 flags Namespace: SaigeVision.Net.V2 Assembly: SaigeVision.Net.V2.dll Syntax public enum EngineTypeFlags Fields Name Description Classification Classfication Detection Detection IAD Image Anomaly Detection IEN Image Enhancemen OCR Optical Character Recognition Segmentation Segmentation"
  },
  "api_reference/SaigeVision.Net.V2.html": {
    "href": "api_reference/SaigeVision.Net.V2.html",
    "title": "Namespace SaigeVision.Net.V2",
    "keywords": "Namespace SaigeVision.Net.V2 Classes BitmapExtension Bitmap 관련 정적 클래스입니다. ClassInfo 검출하고자 하는 요소에 분류 구분이 지정 되어 있는 정보입니다. ClassScoreInfo Class Score 정보 확인 Contour 컨투어 형태의 라벨링 방법입니다. DetectedObject Detection을 통해 검출된 영역의 정보가 담긴 구조체입니다. Ellipse InferenceTimeInfo 추론 API 실행에 소요된 시간을 밀리초 단위로 받아 옵니다. InspectionEngine<TOption, UResult> Inspection을 수행하는 Engine의 추상 구현체입니다. Engine이 사용 가능한 상태가 되도록 준비하는것을 지원합니다. InspectionOption 추론 옵션 정보 InspectionResult 추론 결과 정보 ModelInfo 모델 정보가 담긴 구조체입니다. OverSizeImage (SEG, IEN) SaigeHandleConfig에서 지정한 inspection size보다 큰 이미지를 처리하는 방법입니다. Segmentation 은 SAIGE_DO_NOT_INSPECT, SAIGE_RESIZE_TO_FIT, SAIGE_CROP_INTO_TILES 세 가지 옵션을 사용할 수 있으며, Image Enhancement에서는 SAIGE_DO_NOT_ENHANCE, SAIGE_CROP_INTO_TILES 두 가지 옵션을 사용할 수 있습니다. RotatedBox ScoreValues<T> 스코어 값, 최저, 최고를 표시하는 클래스입니다. SegmentedObject Segmentation 또는 Anomaly Detection을 통해 검출된 영역의 정보가 담긴 구조체입니다. SrImage TextFormatting 인식하고자 하는 글자의 포맷을 지정하는 옵션입니다. 글자 수에 관계 없이 인식하고자 하는 글자집합을 설정하는 방식과, 글자의 위치별로 인식하고자 하는 글자집합을 설정하는 두 가지 방식이 있습니다. TextObject 텍스트를 검출하는 OCR 검사의 결과가 담긴 클래스입니다. Interfaces IInspectionEngine<TOption, UResult> InspectionEngine 의 추상체입니다. IInspectionOption Interface Option IInspectionResult Interface Option Enums EngineTypeFlags Engine Type을 선택하는 flags ImageDataRawFlag ImageTypeFlags Image data 를 선택하는 flag 입니다 OptionFlags Option 을 선택할 수 있는 flags OverSizeImageFlags (SEG) SaigeHandleConfig에서 지정한 inspection size보다 큰 이미지를 처리하는 방법입니다."
  },
  "api_reference/SaigeVision.Net.V2.IAD.html": {
    "href": "api_reference/SaigeVision.Net.V2.IAD.html",
    "title": "Namespace SaigeVision.Net.V2.IAD",
    "keywords": "Namespace SaigeVision.Net.V2.IAD Classes IADEngine IAD를 수행할 수 있는 Engine입니다 IADOption 검사에 필요한 옵션을 가져오거나 설정할 수 있습니다. IADResult IAD 검사 결과에 대한 정보가 담겨있는 클래스입니다."
  },
  "api_reference/SaigeVision.Net.V2.IAD.IADEngine.html": {
    "href": "api_reference/SaigeVision.Net.V2.IAD.IADEngine.html",
    "title": "Class IADEngine",
    "keywords": "Class IADEngine IAD를 수행할 수 있는 Engine입니다 Inheritance object InspectionEngine<IADOption, IADResult> IADEngine Implements IInspectionEngine<IADOption, IADResult> IDisposable Inherited Members InspectionEngine<IADOption, IADResult>.GetInferenceOption() InspectionEngine<IADOption, IADResult>.SetInferenceOption(IADOption, bool) InspectionEngine<IADOption, IADResult>.GetResult() InspectionEngine<IADOption, IADResult>.GetResults() InspectionEngine<IADOption, IADResult>.Results InspectionEngine<IADOption, IADResult>.GetModelInfo() InspectionEngine<IADOption, IADResult>.GetModuleVersion() InspectionEngine<IADOption, IADResult>.Inspection(SrImage) InspectionEngine<IADOption, IADResult>.Inspection(SrImage[]) InspectionEngine<IADOption, IADResult>.InspectionAsync(SrImage) InspectionEngine<IADOption, IADResult>.InspectionAsync(SrImage[]) InspectionEngine<IADOption, IADResult>.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: SaigeVision.Net.V2.IAD Assembly: SaigeVision.Net.V2.dll Syntax public sealed class IADEngine : InspectionEngine<IADOption, IADResult>, IInspectionEngine<IADOption, IADResult>, IDisposable Constructors View Source IADEngine(string, int, int, bool) 생성자입니다 Declaration public IADEngine(string model, int gpuNumber, int batchSize = 1, bool useOptimize = false) Parameters Type Name Description string model .saigeiad 모델파일의 경로 int gpuNumber 추론에 사용할 장치의 인덱스 int batchSize 추론을 한 번 수행할 때 몇 개의 이미지를 동시에 추론할지 설정 bool useOptimize 최적화 적용하는 플래그. 추론 최적화를 적용하면 추론 시간이 단축되지만, 추론 결과가 약간 달라질 수 있습니다. See Also InspectionEngine<TOption, UResult> IADOption IADResult Methods View Source GetInferenceOption() 검사에 필요한 옵션값을 가져옵니다 Declaration public override IADOption GetInferenceOption() Returns Type Description IADOption 검사에 필요한 옵션값 Overrides SaigeVision.Net.V2.InspectionEngine<SaigeVision.Net.V2.IAD.IADOption, SaigeVision.Net.V2.IAD.IADResult>.GetInferenceOption() See Also InspectionEngine<TOption, UResult> IADOption IADResult View Source GetResult() 검사 결과를 받아오는 함수 Declaration public override IADResult GetResult() Returns Type Description IADResult 검사 결과가 담겨있는 값 Overrides SaigeVision.Net.V2.InspectionEngine<SaigeVision.Net.V2.IAD.IADOption, SaigeVision.Net.V2.IAD.IADResult>.GetResult() See Also InspectionEngine<TOption, UResult> IADOption IADResult View Source GetResults() 검사 결과를 받아오는 함수 Declaration public override IADResult[] GetResults() Returns Type Description IADResult[] 검사 결과가 담겨있는 배열값 Overrides SaigeVision.Net.V2.InspectionEngine<SaigeVision.Net.V2.IAD.IADOption, SaigeVision.Net.V2.IAD.IADResult>.GetResults() See Also InspectionEngine<TOption, UResult> IADOption IADResult View Source SetInferenceOption(IADOption, bool) 검사에 필요한 옵션값을 설정합니다 Declaration public override void SetInferenceOption(IADOption option, bool writeModelFile = false) Parameters Type Name Description IADOption option 옵션을 설정할 값 bool writeModelFile 모델파일에 옵션값을 덮어 씁니다. Overrides SaigeVision.Net.V2.InspectionEngine<SaigeVision.Net.V2.IAD.IADOption, SaigeVision.Net.V2.IAD.IADResult>.SetInferenceOption(SaigeVision.Net.V2.IAD.IADOption, bool) See Also InspectionEngine<TOption, UResult> IADOption IADResult Implements IInspectionEngine<TOption, UResult> System.IDisposable See Also InspectionEngine<TOption, UResult> IADOption IADResult"
  },
  "api_reference/SaigeVision.Net.V2.IAD.IADOption.html": {
    "href": "api_reference/SaigeVision.Net.V2.IAD.IADOption.html",
    "title": "Class IADOption",
    "keywords": "Class IADOption 검사에 필요한 옵션을 가져오거나 설정할 수 있습니다. Inheritance object InspectionOption IADOption Implements IInspectionOption Inherited Members InspectionOption.CalcTime InspectionOption.BatchSize object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SaigeVision.Net.V2.IAD Assembly: SaigeVision.Net.V2.dll Syntax public class IADOption : InspectionOption, IInspectionOption Constructors View Source IADOption(bool, int, bool, bool, bool, bool, bool, bool, double, double, double, double, int, double) 검사 결과에 필요한 옵션값을 설정합니다 Declaration public IADOption(bool calcTime, int batchSize, bool calcObject, bool calcObjectAreaAndApplyThreshold, bool calcObjectScoreAndApplyThreshold, bool calcMask, bool calcHeatmap, bool calcScoremap, double anomalyScoreThreshold, double heatmapColorRangeMin, double heatmapColorRangeMax, double objectBoundaryThreshold, int objectAreaThreshold, double objectScoreThreshold) Parameters Type Name Description bool calcTime 추론 API 실행에 소요되는 시간을 세분화하여 출력할지 결정합니다. int batchSize 추론을 한 번 수행할 때 추론하는 이미지의 개수입니다. bool calcObject true로 설정하면 추론 시 segmented object를 계산합니다. bool calcObjectAreaAndApplyThreshold true로 설정하면 segmented object의 면적을 계산합니다. bool calcObjectScoreAndApplyThreshold true로 설정하면 segmented object의 score를 계산합니다. bool calcMask true로 설정하면 추론 시 이미지 원본과 같은 크기의 mask를 계산합니다. bool calcHeatmap true로 설정하면 추론 시 이미지 원본과 같은 크기의 heatmap을 계산합니다. bool calcScoremap true로 설정하면 추론 시 scoremap을 계산합니다. double anomalyScoreThreshold 이미지 전체를 대표하는 anomaly score가 이 값보다 크면 비정상 이미지로, 작거나 같으면 정상 이미지로 판정합니다. double heatmapColorRangeMin Heatmap을 계산할 때 이 값보다 score가 작은 픽셀은 모두 클리핑됩니다. double heatmapColorRangeMax Heatmap을 계산할 때 이 값보다 score가 큰 픽셀은 모두 클리핑됩니다. double objectBoundaryThreshold 이 값이 클수록 mask 및 segmented object의 경계가 좁아집니다. int objectAreaThreshold 검출된 segmented object의 면적이 이 값보다 작으면 최종 결과에서 제외됩니다. double objectScoreThreshold 검출된 segmented object의 score가 이 값보다 작으면 최종 결과에서 제외됩니다. Properties View Source AnomalyScoreThreshold 이미지 전체를 대표하는 anomaly score가 이 값보다 크면 비정상 이미지로, 작거나 같으면 정상 이미지로 판정합니다. 학습 시점에 찾은 최적값이 기본값으로 설정됩니다. Declaration public double AnomalyScoreThreshold { get; set; } Property Value Type Description double View Source CalcHeatmap true로 설정하면 추론 시 이미지 원본과 같은 크기의 heatmap을 계산합니다. Declaration public bool CalcHeatmap { get; set; } Property Value Type Description bool View Source CalcMask true로 설정하면 추론 시 이미지 원본과 같은 크기의 mask를 계산합니다. Declaration public bool CalcMask { get; set; } Property Value Type Description bool View Source CalcObject true로 설정하면 추론 시 segmented object를 계산합니다. Declaration public bool CalcObject { get; set; } Property Value Type Description bool View Source CalcObjectAreaAndApplyThreshold true로 설정하면 segmented object의 면적을 계산합니다. Segmented object의 면적이 object area threshold 보다 작으면 최종 결과에서 제외됩니다. Declaration public bool CalcObjectAreaAndApplyThreshold { get; set; } Property Value Type Description bool View Source CalcObjectScoreAndApplyThreshold true로 설정하면 segmented object의 score를 계산합니다. Segmented object의 score가 object score threshold 보다 작으면 최종 결과에서 제외됩니다. Declaration public bool CalcObjectScoreAndApplyThreshold { get; set; } Property Value Type Description bool View Source CalcScoremap true로 설정하면 추론 시 scoremap을 계산합니다. Declaration public bool CalcScoremap { get; set; } Property Value Type Description bool View Source HeatmapColorRangeMax Heatmap을 계산할 때 이 값보다 score가 큰 픽셀은 모두 클리핑됩니다. 학습 시점에 찾은 최적값이 기본값으로 설정됩니다. Declaration public double HeatmapColorRangeMax { get; set; } Property Value Type Description double View Source HeatmapColorRangeMin Heatmap을 계산할 때 이 값보다 score가 작은 픽셀은 모두 클리핑됩니다. 학습 시점에 찾은 최적값이 기본값으로 설정됩니다. Declaration public double HeatmapColorRangeMin { get; set; } Property Value Type Description double View Source ObjectAreaThreshold 검출된 segmented object의 면적이 이 값보다 작으면 최종 결과에서 제외됩니다. calcObject가 true일 때 유효합니다. Declaration public int ObjectAreaThreshold { get; set; } Property Value Type Description int View Source ObjectBoundaryThreshold 이 값이 클수록 mask 및 segmented object의 경계가 좁아집니다. Mask를 계산할 때 이 값보다 score가 더 큰 픽셀은 1로, 더 작은 픽셀은 0으로 계산합니다. CalcObject가 true일 때 유효합니다. Declaration public double ObjectBoundaryThreshold { get; set; } Property Value Type Description double View Source ObjectScoreThreshold 검출된 segmented object의 score가 이 값보다 작으면 최종 결과에서 제외됩니다. calcObject가 true일 때 유효합니다. Declaration public double ObjectScoreThreshold { get; set; } Property Value Type Description double Implements IInspectionOption"
  },
  "api_reference/SaigeVision.Net.V2.IAD.IADResult.html": {
    "href": "api_reference/SaigeVision.Net.V2.IAD.IADResult.html",
    "title": "Class IADResult",
    "keywords": "Class IADResult IAD 검사 결과에 대한 정보가 담겨있는 클래스입니다. Inheritance object InspectionResult IADResult Implements IInspectionResult Inherited Members InspectionResult.InspectionTime object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SaigeVision.Net.V2.IAD Assembly: SaigeVision.Net.V2.dll Syntax public class IADResult : InspectionResult, IInspectionResult Constructors View Source IADResult(bool, ScoreValues<double>, SegmentedObject[], Bitmap, Bitmap, Bitmap, InferenceTimeInfo) 생성자입니다. Declaration public IADResult(bool isNG, ScoreValues<double> anomalyScore, SegmentedObject[] segmentedObjects, Bitmap mask, Bitmap scoremap, Bitmap heatmap, InferenceTimeInfo inspectionTime) Parameters Type Name Description bool isNG 정상/비정상 판별 결과입니다. ScoreValues<double> anomalyScore 이미지의 대표 anomaly score, 최소, 최대값입니다 SegmentedObject[] segmentedObjects Anomaly Detection을 통해 검출된 영역의 정보를 받아 옵니다. Bitmap mask Mask 이미지 정보입니다. Bitmap scoremap Scoremap 이미지 정보입니다. Bitmap heatmap Heatmap 이미지 정보입니다. InferenceTimeInfo inspectionTime 추론 API 실행에 소요된 시간을 밀리초 단위로 받아 옵니다. Properties View Source AnomalyScore 세 가지 score를 받아 옵니다. 이미지의 대표 anomaly score입니다. 이미지의 픽셀별 score 중 최솟값입니다. 이미지의 픽셀별 score 중 최댓값입니다. Declaration public ScoreValues<double> AnomalyScore { get; } Property Value Type Description ScoreValues<double> View Source Heatmap Heatmap 이미지 정보입니다. heatmapColorRangeMin과 heatmapColorRangeMax 사이로 노멀라이징한 값을 이용하여 이미지가 표시됩니다. Declaration public Bitmap Heatmap { get; } Property Value Type Description Bitmap View Source IsNG 정상/비정상 판별 결과입니다. true면 비정상 이미지임을, false면 정상 이미지임을 나타냅니다. Declaration public bool IsNG { get; } Property Value Type Description bool View Source Mask Mask 이미지 정보입니다. Declaration public Bitmap Mask { get; } Property Value Type Description Bitmap View Source Scoremap Scoremap 이미지 정보입니다. 이미지 픽셀에 해당 클래스로 예측한 score 값이 0 ~ 255 범위의 정수로 표시된 회색조 이미지입니다. Declaration public Bitmap Scoremap { get; } Property Value Type Description Bitmap View Source SegmentedObjects Anomaly Detection을 통해 검출된 영역의 정보를 받아 옵니다. Declaration public SegmentedObject[] SegmentedObjects { get; } Property Value Type Description SegmentedObject[] Implements IInspectionResult"
  },
  "api_reference/SaigeVision.Net.V2.IEN.html": {
    "href": "api_reference/SaigeVision.Net.V2.IEN.html",
    "title": "Namespace SaigeVision.Net.V2.IEN",
    "keywords": "Namespace SaigeVision.Net.V2.IEN Classes IENEngine IEN를 수행할 수 있는 Engine입니다 IENOption 검사에 필요한 옵션을 가져오거나 설정할 수 있습니다. IENResult IEN 검사 결과에 대한 정보가 담겨있는 클래스입니다."
  },
  "api_reference/SaigeVision.Net.V2.IEN.IENEngine.html": {
    "href": "api_reference/SaigeVision.Net.V2.IEN.IENEngine.html",
    "title": "Class IENEngine",
    "keywords": "Class IENEngine IEN를 수행할 수 있는 Engine입니다 Inheritance object InspectionEngine<IENOption, IENResult> IENEngine Implements IInspectionEngine<IENOption, IENResult> IDisposable Inherited Members InspectionEngine<IENOption, IENResult>.GetInferenceOption() InspectionEngine<IENOption, IENResult>.SetInferenceOption(IENOption, bool) InspectionEngine<IENOption, IENResult>.GetResult() InspectionEngine<IENOption, IENResult>.GetResults() InspectionEngine<IENOption, IENResult>.Results InspectionEngine<IENOption, IENResult>.GetModelInfo() InspectionEngine<IENOption, IENResult>.GetModuleVersion() InspectionEngine<IENOption, IENResult>.Inspection(SrImage) InspectionEngine<IENOption, IENResult>.Inspection(SrImage[]) InspectionEngine<IENOption, IENResult>.InspectionAsync(SrImage) InspectionEngine<IENOption, IENResult>.InspectionAsync(SrImage[]) InspectionEngine<IENOption, IENResult>.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: SaigeVision.Net.V2.IEN Assembly: SaigeVision.Net.V2.dll Syntax public sealed class IENEngine : InspectionEngine<IENOption, IENResult>, IInspectionEngine<IENOption, IENResult>, IDisposable Constructors View Source IENEngine(string, int, int, bool, Size?) 생성자입니다 Declaration public IENEngine(string model, int gpuNumber, int batchSize = 1, bool useOptimize = false, Size? imageSize = null) Parameters Type Name Description string model .saigeien 모델파일의 경로 int gpuNumber 추론에 사용할 장치의 인덱스 int batchSize 추론을 한 번 수행할 때 몇 개의 이미지를 동시에 추론할지 설정 bool useOptimize 최적화 적용하는 플래그. 추론 최적화를 적용하면 추론 시간이 단축되지만, 추론 결과가 약간 달라질 수 있습니다. Size? imageSize See Also InspectionEngine<TOption, UResult> IENOption IENResult Methods View Source GetInferenceOption() 검사에 필요한 옵션값을 가져옵니다 Declaration public override IENOption GetInferenceOption() Returns Type Description IENOption 검사에 필요한 옵션값 Overrides SaigeVision.Net.V2.InspectionEngine<SaigeVision.Net.V2.IEN.IENOption, SaigeVision.Net.V2.IEN.IENResult>.GetInferenceOption() See Also InspectionEngine<TOption, UResult> IENOption IENResult View Source GetResult() 검사 결과를 받아오는 함수 Declaration public override IENResult GetResult() Returns Type Description IENResult 검사 결과가 담겨있는 값 Overrides SaigeVision.Net.V2.InspectionEngine<SaigeVision.Net.V2.IEN.IENOption, SaigeVision.Net.V2.IEN.IENResult>.GetResult() See Also InspectionEngine<TOption, UResult> IENOption IENResult View Source GetResults() 검사 결과를 받아오는 함수 Declaration public override IENResult[] GetResults() Returns Type Description IENResult[] 검사 결과가 담겨있는 배열값 Overrides SaigeVision.Net.V2.InspectionEngine<SaigeVision.Net.V2.IEN.IENOption, SaigeVision.Net.V2.IEN.IENResult>.GetResults() See Also InspectionEngine<TOption, UResult> IENOption IENResult View Source SetInferenceOption(IENOption, bool) 검사에 필요한 옵션값을 설정합니다 Declaration public override void SetInferenceOption(IENOption option, bool writeModelFile = false) Parameters Type Name Description IENOption option 옵션을 설정할 값 bool writeModelFile 모델파일에 옵션값을 덮어 씁니다. Overrides SaigeVision.Net.V2.InspectionEngine<SaigeVision.Net.V2.IEN.IENOption, SaigeVision.Net.V2.IEN.IENResult>.SetInferenceOption(SaigeVision.Net.V2.IEN.IENOption, bool) See Also InspectionEngine<TOption, UResult> IENOption IENResult Implements IInspectionEngine<TOption, UResult> System.IDisposable See Also InspectionEngine<TOption, UResult> IENOption IENResult"
  },
  "api_reference/SaigeVision.Net.V2.IEN.IENOption.html": {
    "href": "api_reference/SaigeVision.Net.V2.IEN.IENOption.html",
    "title": "Class IENOption",
    "keywords": "Class IENOption 검사에 필요한 옵션을 가져오거나 설정할 수 있습니다. Inheritance object InspectionOption IENOption Implements IInspectionOption Inherited Members InspectionOption.CalcTime InspectionOption.BatchSize object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SaigeVision.Net.V2.IEN Assembly: SaigeVision.Net.V2.dll Syntax public class IENOption : InspectionOption, IInspectionOption Constructors View Source IENOption(bool, int, OverSizeImageFlags) 검사 결과에 필요한 옵션값을 설정합니다 Declaration public IENOption(bool calcTime, int batchSize, OverSizeImageFlags oversizedImageHandling) Parameters Type Name Description bool calcTime 추론 API 실행에 소요되는 시간을 세분화하여 출력할지 결정합니다. int batchSize 추론을 한 번 수행할 때 추론하는 이미지의 개수입니다. OverSizeImageFlags oversizedImageHandling SaigeHandleConfig에서 지정한 inspection size보다 큰 이미지를 처리하는 방법입니다. Properties View Source OversizedImageHandling (SEG, IEN) SaigeHandleConfig에서 지정한 inspection size보다 큰 이미지를 처리하는 방법입니다. Segmentation 은 SAIGE_DO_NOT_INSPECT, SAIGE_RESIZE_TO_FIT, SAIGE_CROP_INTO_TILES 세 가지 옵션을 사용할 수 있으며, Image Enhancement에서는 SAIGE_DO_NOT_ENHANCE, SAIGE_CROP_INTO_TILES 두 가지 옵션을 사용할 수 있습니다. Declaration public OverSizeImageFlags OversizedImageHandling { get; set; } Property Value Type Description OverSizeImageFlags Implements IInspectionOption"
  },
  "api_reference/SaigeVision.Net.V2.IEN.IENResult.html": {
    "href": "api_reference/SaigeVision.Net.V2.IEN.IENResult.html",
    "title": "Class IENResult",
    "keywords": "Class IENResult IEN 검사 결과에 대한 정보가 담겨있는 클래스입니다. Inheritance object InspectionResult IENResult Implements IInspectionResult Inherited Members InspectionResult.InspectionTime object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SaigeVision.Net.V2.IEN Assembly: SaigeVision.Net.V2.dll Syntax public class IENResult : InspectionResult, IInspectionResult Constructors View Source IENResult(Bitmap, InferenceTimeInfo) 생성자입니다. Declaration public IENResult(Bitmap resultImage, InferenceTimeInfo inspectionTime) Parameters Type Name Description Bitmap resultImage 향상된 품질의 이미지를 받아 옵니다 InferenceTimeInfo inspectionTime 추론 API 실행에 소요된 시간을 밀리초 단위로 받아 옵니다. Properties View Source ResultImage 향상된 품질의 이미지입니다. Declaration public Bitmap ResultImage { get; } Property Value Type Description Bitmap Implements IInspectionResult"
  },
  "api_reference/SaigeVision.Net.V2.IInspectionEngine-2.html": {
    "href": "api_reference/SaigeVision.Net.V2.IInspectionEngine-2.html",
    "title": "Interface IInspectionEngine<TOption, UResult>",
    "keywords": "Interface IInspectionEngine<TOption, UResult> InspectionEngine 의 추상체입니다. Namespace: SaigeVision.Net.V2 Assembly: SaigeVision.Net.V2.dll Syntax public interface IInspectionEngine<TOption, UResult> where TOption : IInspectionOption where UResult : IInspectionResult Type Parameters Name Description TOption 엔진에 필요한 적절한 Option을 주입합니다 UResult 엔진에 필요한 적절한 Result를 주입합니다 Methods View Source Dispose() 메모리를 해제합니다. Declaration void Dispose() View Source GetInferenceOption() 추론에 필요한 옵션 값을 받아 옵니다. Declaration TOption GetInferenceOption() Returns Type Description TOption 엔진별 옵션 정보가 담겨있는 클래스입니다 View Source GetModelInfo() 모델 정보를 받아 옵니다. Declaration ModelInfo GetModelInfo() Returns Type Description ModelInfo 모델 정보가 담겨있는 클래스입니다 View Source GetModuleVersion() Module Version을 받아 옵니다 Declaration string GetModuleVersion() Returns Type Description string 받아온 모듈에 대한 정보가 담겨있는 문자열 View Source Inspection(SrImage) 추론을 진행합니다. Declaration UResult Inspection(SrImage image) Parameters Type Name Description SrImage image 추론에 필요한 SrImage Returns Type Description UResult 추론에 대한 결과값을 받아옵니다 View Source Inspection(SrImage[]) 추론을 진행합니다. SrImage에 대한 배열 크기는 최초 batch 사이즈와 같거나 작아야 합니다. Declaration UResult[] Inspection(SrImage[] images) Parameters Type Name Description SrImage[] images Returns Type Description UResult[] 추론에 대한 결과값을 받아옵니다 View Source InspectionAsync(SrImage) image에 대한 검사를 비동기로 진행합니다. Declaration Task<UResult> InspectionAsync(SrImage image) Parameters Type Name Description SrImage image 추론에 필요한 이미지 Returns Type Description Task<UResult> 추론에 대한 결과값을 받아옵니다 View Source InspectionAsync(SrImage[]) images에 대한 검사를 비동기로 진행합니다. SrImage에 대한 배열 크기는 최초 batch 사이즈와 같거나 작아야 합니다. Declaration Task<UResult[]> InspectionAsync(SrImage[] images) Parameters Type Name Description SrImage[] images 추론에 필요한 이미지들 Returns Type Description Task<UResult[]> 추론에 대한 결과값을 받아옵니다 View Source SetInferenceOption(TOption, bool) 추론에 필요한 옵션 갓을 설정 합니다. Declaration void SetInferenceOption(TOption option, bool writeModelFile = false) Parameters Type Name Description TOption option 엔진별 옵션 정보가 담겨있는 클래스. bool writeModelFile 설정한 옵션값을 모델 파일에 덮어 씁니다"
  },
  "api_reference/SaigeVision.Net.V2.IInspectionOption.html": {
    "href": "api_reference/SaigeVision.Net.V2.IInspectionOption.html",
    "title": "Interface IInspectionOption",
    "keywords": "Interface IInspectionOption Interface Option Namespace: SaigeVision.Net.V2 Assembly: SaigeVision.Net.V2.dll Syntax public interface IInspectionOption"
  },
  "api_reference/SaigeVision.Net.V2.IInspectionResult.html": {
    "href": "api_reference/SaigeVision.Net.V2.IInspectionResult.html",
    "title": "Interface IInspectionResult",
    "keywords": "Interface IInspectionResult Interface Option Namespace: SaigeVision.Net.V2 Assembly: SaigeVision.Net.V2.dll Syntax public interface IInspectionResult"
  },
  "api_reference/SaigeVision.Net.V2.ImageDataRawFlag.html": {
    "href": "api_reference/SaigeVision.Net.V2.ImageDataRawFlag.html",
    "title": "Enum ImageDataRawFlag",
    "keywords": "Enum ImageDataRawFlag Namespace: SaigeVision.Net.V2 Assembly: SaigeVision.Net.V2.dll Syntax [Flags] public enum ImageDataRawFlag Fields Name Description SAIGE_IMAGE_16BIT is 16bit SAIGE_IMAGE_8BIT_GRAY 8bit gray SAIGE_IMAGE_ALPHA is alpha SAIGE_IMAGE_BGR is bgr SAIGE_IMAGE_COLOR is color"
  },
  "api_reference/SaigeVision.Net.V2.ImageTypeFlags.html": {
    "href": "api_reference/SaigeVision.Net.V2.ImageTypeFlags.html",
    "title": "Enum ImageTypeFlags",
    "keywords": "Enum ImageTypeFlags Image data 를 선택하는 flag 입니다 Namespace: SaigeVision.Net.V2 Assembly: SaigeVision.Net.V2.dll Syntax [Flags] public enum ImageTypeFlags Fields Name Description SAIGE_IMAGE_16BIT_GRAY 16bit gray image SAIGE_IMAGE_24BIT_BGR 24bit bgr image SAIGE_IMAGE_24BIT_RGB 24bit rgb image SAIGE_IMAGE_32BIT_BGRA 32bit bgra image SAIGE_IMAGE_32BIT_RGBA 32bit rgba image SAIGE_IMAGE_48BIT_BGR 48bit bgr image SAIGE_IMAGE_48BIT_RGB 48bit rgb image SAIGE_IMAGE_64BIT_BGRA 64bit bgra image SAIGE_IMAGE_64BIT_RGBA 64bit rgba image SAIGE_IMAGE_8BIT_GRAY 8bit gray image"
  },
  "api_reference/SaigeVision.Net.V2.InferenceTimeInfo.html": {
    "href": "api_reference/SaigeVision.Net.V2.InferenceTimeInfo.html",
    "title": "Class InferenceTimeInfo",
    "keywords": "Class InferenceTimeInfo 추론 API 실행에 소요된 시간을 밀리초 단위로 받아 옵니다. Inheritance object InferenceTimeInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SaigeVision.Net.V2 Assembly: SaigeVision.Net.V2.dll Syntax public class InferenceTimeInfo Constructors View Source InferenceTimeInfo(long, long, long) 생성자입니다 Declaration public InferenceTimeInfo(long imreadTime, long inferenceTime, long postProcessingTime) Parameters Type Name Description long imreadTime 이미지를 읽는 시간입니다. long inferenceTime 이미지 전처리 및 딥러닝 추론에 소요된 시간입니다. long postProcessingTime 후처리 시간입니다. Properties View Source ImreadTime 이미지를 읽는 시간입니다. Declaration public long ImreadTime { get; } Property Value Type Description long View Source InferenceTime 이미지 전처리 및 딥러닝 추론에 소요된 시간입니다. Declaration public long InferenceTime { get; } Property Value Type Description long View Source PostProcessingTime 후처리 시간입니다. Declaration public long PostProcessingTime { get; } Property Value Type Description long"
  },
  "api_reference/SaigeVision.Net.V2.InspectionEngine-2.html": {
    "href": "api_reference/SaigeVision.Net.V2.InspectionEngine-2.html",
    "title": "Class InspectionEngine<TOption, UResult>",
    "keywords": "Class InspectionEngine<TOption, UResult> Inspection을 수행하는 Engine의 추상 구현체입니다. Engine이 사용 가능한 상태가 되도록 준비하는것을 지원합니다. Inheritance object InspectionEngine<TOption, UResult> ClassificationEngine DetectionEngine IADEngine IENEngine OCREngine SegmentationEngine Implements IInspectionEngine<TOption, UResult> IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SaigeVision.Net.V2 Assembly: SaigeVision.Net.V2.dll Syntax public abstract class InspectionEngine<TOption, UResult> : IInspectionEngine<TOption, UResult>, IDisposable where TOption : IInspectionOption where UResult : IInspectionResult Type Parameters Name Description TOption 검사 옵션 타입 UResult 검사 결과 타입 Remarks InspectionEngine<TOption, UResult>은 지정된 모델에서 범용적으로 사용되는 데이터들을 읽고 준비 하는것이 주 목적입니다. 그외 Inspection에 필요한 지원 함수들이 포함됩니다. Properties View Source Results Declaration public UResult[] Results { get; } Property Value Type Description UResult[] Methods View Source Dispose() 메모리를 해제합니다 Declaration public void Dispose() View Source ~InspectionEngine() Declaration protected ~InspectionEngine() View Source GetInferenceOption() Declaration public abstract TOption GetInferenceOption() Returns Type Description TOption View Source GetModelInfo() 모델 정보가 담긴 클래스입니다. Declaration public ModelInfo GetModelInfo() Returns Type Description ModelInfo 모델정보 View Source GetModuleVersion() 모듈에 대한 정보를 받아볼 수 있습니다. Declaration public string GetModuleVersion() Returns Type Description string 모듈정보 View Source GetResult() Declaration public abstract UResult GetResult() Returns Type Description UResult View Source GetResults() Declaration public abstract UResult[] GetResults() Returns Type Description UResult[] View Source Inspection(SrImage) 추론을 진행합니다. Declaration public UResult Inspection(SrImage image) Parameters Type Name Description SrImage image 추론에 필요한 SrImage Returns Type Description UResult 추론에 대한 결과값을 받아옵니다 View Source Inspection(SrImage[]) 추론을 진행합니다. SrImage에 대한 배열 크기는 최초 batch 사이즈와 같거나 작아야 합니다. Declaration public UResult[] Inspection(SrImage[] images) Parameters Type Name Description SrImage[] images Returns Type Description UResult[] 추론에 대한 결과값을 받아옵니다 View Source InspectionAsync(SrImage) image에 대한 검사를 진행합니다. Declaration public Task<UResult> InspectionAsync(SrImage image) Parameters Type Name Description SrImage image 검사할 이미지. Returns Type Description Task<UResult> View Source InspectionAsync(SrImage[]) images에 대한 검사를 진행합니다. Declaration public Task<UResult[]> InspectionAsync(SrImage[] images) Parameters Type Name Description SrImage[] images 검사할 이미지. Returns Type Description Task<UResult[]> View Source SetInferenceOption(TOption, bool) Declaration public abstract void SetInferenceOption(TOption option, bool writeModelFile = false) Parameters Type Name Description TOption option bool writeModelFile Implements IInspectionEngine<TOption, UResult> System.IDisposable"
  },
  "api_reference/SaigeVision.Net.V2.InspectionOption.html": {
    "href": "api_reference/SaigeVision.Net.V2.InspectionOption.html",
    "title": "Class InspectionOption",
    "keywords": "Class InspectionOption 추론 옵션 정보 Inheritance object InspectionOption ClassificationOption DetectionOption IADOption IENOption OCROption SegmentationOption Implements IInspectionOption Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SaigeVision.Net.V2 Assembly: SaigeVision.Net.V2.dll Syntax public abstract class InspectionOption : IInspectionOption Constructors View Source InspectionOption(bool, int) 생성자입니다 Declaration public InspectionOption(bool calcTime, int batchSize) Parameters Type Name Description bool calcTime 시간을 세분화하여 출력할지 여부 int batchSize 추론을 한 번 수행할 때 추론하는 이미지의 개수 Properties View Source BatchSize 추론을 한 번 수행할 때 추론하는 이미지의 개수입니다. 추론 핸들 생성 시에 SaigeHandleConfig를 통해서만 설정할 수 있습니다. Declaration public int BatchSize { get; } Property Value Type Description int View Source CalcTime 추론 API 실행에 소요되는 시간을 세분화하여 출력할지 결정합니다. true로 설정하면 이미지를 읽는 시간, 순수 딥러닝 추론 시간, 후처리 시간을 각각 확인할 수 있습니다. false로 설정하면 추론 API 실행에 소요된 총 시간만을 확인할 수 있습니다. true로 설정하면 전체 추론 시간이 느려질 수 있습니다. 실제 검사 시에는 false로 설정하는 것을 권장합니다. Declaration public bool CalcTime { get; set; } Property Value Type Description bool Implements IInspectionOption"
  },
  "api_reference/SaigeVision.Net.V2.InspectionResult.html": {
    "href": "api_reference/SaigeVision.Net.V2.InspectionResult.html",
    "title": "Class InspectionResult",
    "keywords": "Class InspectionResult 추론 결과 정보 Inheritance object InspectionResult ClassificationResult DetectionResult IADResult IENResult OCRResult SegmentationResult Implements IInspectionResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SaigeVision.Net.V2 Assembly: SaigeVision.Net.V2.dll Syntax public abstract class InspectionResult : IInspectionResult Constructors View Source InspectionResult(InferenceTimeInfo) 생성자입니다 Declaration public InspectionResult(InferenceTimeInfo inferenceTimeInfo) Parameters Type Name Description InferenceTimeInfo inferenceTimeInfo InferenceTimeInfo 값 Properties View Source InspectionTime 추론 API 실행에 소요된 시간을 밀리초 단위로 받아 옵니다. Declaration public InferenceTimeInfo InspectionTime { get; } Property Value Type Description InferenceTimeInfo Implements IInspectionResult"
  },
  "api_reference/SaigeVision.Net.V2.ModelInfo.html": {
    "href": "api_reference/SaigeVision.Net.V2.ModelInfo.html",
    "title": "Class ModelInfo",
    "keywords": "Class ModelInfo 모델 정보가 담긴 구조체입니다. Inheritance object ModelInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SaigeVision.Net.V2 Assembly: SaigeVision.Net.V2.dll Syntax public class ModelInfo Constructors View Source ModelInfo(SaigeModelInfo) 생성자입니다 Declaration public ModelInfo(SaigeModelInfo modelInfo) Parameters Type Name Description SaigeModelInfo modelInfo engine으로부터 받은 SaigeModelInfo값 Properties View Source ClassInfos 클래스 정보 Declaration public ClassInfo[] ClassInfos { get; } Property Value Type Description ClassInfo[] View Source ClassIsNG 클래스가 NG 클래스인지 나타냅니다 Declaration public bool[] ClassIsNG { get; } Property Value Type Description bool[] View Source CropSizeHeight (SEG) 학습 때 사용된 패치의 높이입니다. 추론 이미지와는 관련 없습니다. Declaration public int CropSizeHeight { get; } Property Value Type Description int View Source CropSizeWidth (SEG) 학습 때 사용된 패치의 너비입니다. 추론 이미지와는 관련 없습니다. Declaration public int CropSizeWidth { get; } Property Value Type Description int View Source Description 학습 시 지정한 모델 설명 문구입니다. Declaration public string Description { get; set; } Property Value Type Description string View Source DeveloperVersion 모델을 학습할 때 사용한 SaigeVision Developer의 버전입니다. Declaration public string DeveloperVersion { get; } Property Value Type Description string View Source ImageResizeHeight (IAD) 인풋 이미지에 적용되는 리사이즈 높이입니다. 추론 이미지에도 동일하게 적용됩니다. Declaration public int ImageResizeHeight { get; } Property Value Type Description int View Source ImageResizeWidth (IAD) 인풋 이미지에 적용되는 리사이즈 너비입니다. 추론 이미지에도 동일하게 적용됩니다. Declaration public int ImageResizeWidth { get; } Property Value Type Description int View Source ModuleVersion 모델을 학습할 때 사용한 SaigeVision Developer의 구성 요소 중 딥러닝 모듈의 버전입니다. Declaration public string ModuleVersion { get; } Property Value Type Description string View Source NetworkType 어떤 종류의 딥러닝 네트워크를 사용했는지 나타냅니다. 네트워크 타입 중 (v1)으로 끝나는 것들은 SaigeVision 1.x.x 버전에서 사용되던 네트워크 타입을 뜻합니다(네트워크 종류가 동일할 뿐, 모델 파일이 호환되지는 않습니다). IAD : Fast, Standard, Accurate SEG : Fast, Standard, Accurate, Shallow (V1), Standard (V1), Deep (V1) Declaration public string NetworkType { get; } Property Value Type Description string View Source NumOfIterations 학습을 진행한 반복 수 입니다. Declaration public string NumOfIterations { get; set; } Property Value Type Description string View Source NumOfTrainImages 학습에 직접 사용한 이미지 수 입니다. Declaration public int NumOfTrainImages { get; set; } Property Value Type Description int View Source NumOfValidationImages 학습과정에서 Validation에 사용한 이미지 수 입니다. Declaration public int NumOfValidationImages { get; set; } Property Value Type Description int View Source ResizeFactor (SEG) 인풋 이미지에 적용되는 리사이즈 비율입니다. 추론 이미지에도 동일하게 적용됩니다. Declaration public float ResizeFactor { get; } Property Value Type Description float View Source RoiInfo ROI 정보입니다. Declaration public SaigeRoiInfo RoiInfo { get; } Property Value Type Description SaigeRoiInfo View Source ServerVersion 모델을 학습할 때 사용한 SaigeVision Developer의 구성 요소 중 서버의 버전입니다. Declaration public string ServerVersion { get; } Property Value Type Description string View Source TargetImageQuality (IEN) 학습시 선택한 enhancement 품질입니다. high, ultra-high 중 하나입니다. Declaration public string TargetImageQuality { get; } Property Value Type Description string View Source TargetTextSize (OCR) 이미지의 텍스트 박스의 height가 targetTextSize가 되도록 학습 단계에서 resize 배율을 자동으로 찾아줍니다. Declaration public int TargetTextSize { get; } Property Value Type Description int View Source TrainingTimeCompleted 학습이 종료된 시각을 나타내는 unix timestamp 값입니다. Declaration public DateTime TrainingTimeCompleted { get; set; } Property Value Type Description DateTime View Source TrainingTimeElapsed 학습을 완료하는데 걸린 시간을 초로 나타낸 값입니다. Declaration public TimeSpan TrainingTimeElapsed { get; set; } Property Value Type Description TimeSpan View Source TrainingTimeStated 학습을 시작한 시각을 나타내는 unix timestamp 값입니다. Declaration public DateTime TrainingTimeStated { get; set; } Property Value Type Description DateTime View Source UsedGpuName 학습 시 사용한 GPU의 이름입니다. Declaration public string UsedGpuName { get; set; } Property Value Type Description string"
  },
  "api_reference/SaigeVision.Net.V2.OCR.html": {
    "href": "api_reference/SaigeVision.Net.V2.OCR.html",
    "title": "Namespace SaigeVision.Net.V2.OCR",
    "keywords": "Namespace SaigeVision.Net.V2.OCR Classes OCREngine OCR를 수행할 수 있는 Engine입니다 OCROption 검사에 필요한 옵션을 가져오거나 설정할 수 있습니다. OCRResult OCR 검사 결과에 대한 정보가 담겨있는 클래스입니다."
  },
  "api_reference/SaigeVision.Net.V2.OCR.OCREngine.html": {
    "href": "api_reference/SaigeVision.Net.V2.OCR.OCREngine.html",
    "title": "Class OCREngine",
    "keywords": "Class OCREngine OCR를 수행할 수 있는 Engine입니다 Inheritance object InspectionEngine<OCROption, OCRResult> OCREngine Implements IInspectionEngine<OCROption, OCRResult> IDisposable Inherited Members InspectionEngine<OCROption, OCRResult>.GetInferenceOption() InspectionEngine<OCROption, OCRResult>.SetInferenceOption(OCROption, bool) InspectionEngine<OCROption, OCRResult>.GetResult() InspectionEngine<OCROption, OCRResult>.GetResults() InspectionEngine<OCROption, OCRResult>.Results InspectionEngine<OCROption, OCRResult>.GetModelInfo() InspectionEngine<OCROption, OCRResult>.GetModuleVersion() InspectionEngine<OCROption, OCRResult>.Inspection(SrImage) InspectionEngine<OCROption, OCRResult>.Inspection(SrImage[]) InspectionEngine<OCROption, OCRResult>.InspectionAsync(SrImage) InspectionEngine<OCROption, OCRResult>.InspectionAsync(SrImage[]) InspectionEngine<OCROption, OCRResult>.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: SaigeVision.Net.V2.OCR Assembly: SaigeVision.Net.V2.dll Syntax public sealed class OCREngine : InspectionEngine<OCROption, OCRResult>, IInspectionEngine<OCROption, OCRResult>, IDisposable Constructors View Source OCREngine(string, int, int) 생성자입니다 Declaration public OCREngine(string model, int gpuNumber, int batchSize = 1) Parameters Type Name Description string model .saigeocr 모델파일의 경로 int gpuNumber 추론에 사용할 장치의 인덱스 int batchSize 예외적으로 OCR은 글자의 영역을 검출한 뒤 글자의 종류를 인식하는 두 단계로 나누어져 있어서 검사 이미지마다 검사시간의 편차가 크게 발생할 수 있습니다. 따라서 OCR에서는 다른 방식으로 작동하며 값을 2로 고정하는 것을 권장합니다. See Also InspectionEngine<TOption, UResult> OCROption OCRResult Methods View Source GetInferenceOption() 검사에 필요한 옵션값을 가져옵니다 Declaration public override OCROption GetInferenceOption() Returns Type Description OCROption 검사에 필요한 옵션값 Overrides SaigeVision.Net.V2.InspectionEngine<SaigeVision.Net.V2.OCR.OCROption, SaigeVision.Net.V2.OCR.OCRResult>.GetInferenceOption() See Also InspectionEngine<TOption, UResult> OCROption OCRResult View Source GetResult() 검사 결과를 받아오는 함수 Declaration public override OCRResult GetResult() Returns Type Description OCRResult 검사 결과가 담겨있는 값 Overrides SaigeVision.Net.V2.InspectionEngine<SaigeVision.Net.V2.OCR.OCROption, SaigeVision.Net.V2.OCR.OCRResult>.GetResult() See Also InspectionEngine<TOption, UResult> OCROption OCRResult View Source GetResults() 검사 결과를 받아오는 함수 Declaration public override OCRResult[] GetResults() Returns Type Description OCRResult[] 검사 결과가 담겨있는 배열값 Overrides SaigeVision.Net.V2.InspectionEngine<SaigeVision.Net.V2.OCR.OCROption, SaigeVision.Net.V2.OCR.OCRResult>.GetResults() See Also InspectionEngine<TOption, UResult> OCROption OCRResult View Source SetInferenceOption(OCROption, bool) 검사에 필요한 옵션값을 설정합니다 Declaration public override void SetInferenceOption(OCROption option, bool writeModelFile = false) Parameters Type Name Description OCROption option 옵션을 설정할 값 bool writeModelFile 모델파일에 옵션값을 덮어 씁니다. Overrides SaigeVision.Net.V2.InspectionEngine<SaigeVision.Net.V2.OCR.OCROption, SaigeVision.Net.V2.OCR.OCRResult>.SetInferenceOption(SaigeVision.Net.V2.OCR.OCROption, bool) See Also InspectionEngine<TOption, UResult> OCROption OCRResult Implements IInspectionEngine<TOption, UResult> System.IDisposable See Also InspectionEngine<TOption, UResult> OCROption OCRResult"
  },
  "api_reference/SaigeVision.Net.V2.OCR.OCROption.html": {
    "href": "api_reference/SaigeVision.Net.V2.OCR.OCROption.html",
    "title": "Class OCROption",
    "keywords": "Class OCROption 검사에 필요한 옵션을 가져오거나 설정할 수 있습니다. Inheritance object InspectionOption OCROption Implements IInspectionOption Inherited Members InspectionOption.CalcTime InspectionOption.BatchSize object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SaigeVision.Net.V2.OCR Assembly: SaigeVision.Net.V2.dll Syntax public class OCROption : InspectionOption, IInspectionOption Constructors View Source OCROption(bool, int, double, int, int, int, double, TextFormatting) 검사 결과에 필요한 옵션값을 설정합니다 Declaration public OCROption(bool calcTime, int batchSize, double polygonScoreThreshold, int textSizeRangeMin, int textSizeRangeMax, int maxNumOfTextObjects, double textScoreThreshold, TextFormatting textFormatting) Parameters Type Name Description bool calcTime 추론 API 실행에 소요되는 시간을 세분화하여 출력할지 결정합니다. int batchSize 추론을 한 번 수행할 때 추론하는 이미지의 개수입니다. double polygonScoreThreshold `검출된 글자영역인 polygon score 값이 이 값보다 작으면 최종 결과에서 제외됩니다. int textSizeRangeMin 검출된 글자영역 크기의 유효범위 하한값입니다. int textSizeRangeMax 검출된 글자영역 크기의 유효범위 상한값입니다. int maxNumOfTextObjects 한 번에 출력할 수 있는 글자 오브젝트의 최대 검출 개수입니다. double textScoreThreshold 인식된 글자 오브젝트의 text score 값이 이 값보다 작으면 최종 결과에서 제외됩니다. TextFormatting textFormatting 인식하고자 하는 글자의 포맷을 지정하는 옵션입니다. Properties View Source MaxNumOfTextObjects 한 번에 출력할 수 있는 글자 오브젝트의 최대 검출 개수입니다. 0 이하의 값은 제한 없음을 의미합니다. Declaration public int MaxNumOfTextObjects { get; set; } Property Value Type Description int View Source PolygonScoreThreshold 검출된 글자영역인 polygon score 값이 이 값보다 작으면 최종 결과에서 제외됩니다. Declaration public double PolygonScoreThreshold { get; set; } Property Value Type Description double View Source TextFormatting 인식하고자 하는 글자의 포맷을 지정하는 옵션입니다. Declaration public TextFormatting TextFormatting { get; set; } Property Value Type Description TextFormatting View Source TextScoreThreshold 인식된 글자 오브젝트의 text score 값이 이 값보다 작으면 최종 결과에서 제외됩니다. Declaration public double TextScoreThreshold { get; set; } Property Value Type Description double View Source TextSizeRangeMax 검출된 글자영역 크기의 유효범위 상한값입니다. 이 값보다 큰 글자는 최종 결과에서 제외됩니다. Declaration public int TextSizeRangeMax { get; set; } Property Value Type Description int View Source TextSizeRangeMin 검출된 글자영역 크기의 유효범위 하한값입니다. 이 값보다 작은 글자는 최종 결과에서 제외됩니다. Declaration public int TextSizeRangeMin { get; set; } Property Value Type Description int Implements IInspectionOption"
  },
  "api_reference/SaigeVision.Net.V2.OCR.OCRResult.html": {
    "href": "api_reference/SaigeVision.Net.V2.OCR.OCRResult.html",
    "title": "Class OCRResult",
    "keywords": "Class OCRResult OCR 검사 결과에 대한 정보가 담겨있는 클래스입니다. Inheritance object InspectionResult OCRResult Implements IInspectionResult Inherited Members InspectionResult.InspectionTime object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SaigeVision.Net.V2.OCR Assembly: SaigeVision.Net.V2.dll Syntax public class OCRResult : InspectionResult, IInspectionResult Constructors View Source OCRResult(TextObject[], InferenceTimeInfo) 생성자입니다. Declaration public OCRResult(TextObject[] textObjects, InferenceTimeInfo inspectionTime) Parameters Type Name Description TextObject[] textObjects 텍스트를 검출하는 OCR 검사의 결과가 담긴 클래스입니다. InferenceTimeInfo inspectionTime 추론 API 실행에 소요된 시간을 밀리초 단위로 받아 옵니다. Properties View Source TextObjects 텍스트를 검출하는 OCR 검사의 결과가 담긴 클래스입니다. Declaration public TextObject[] TextObjects { get; } Property Value Type Description TextObject[] Implements IInspectionResult"
  },
  "api_reference/SaigeVision.Net.V2.OptionFlags.html": {
    "href": "api_reference/SaigeVision.Net.V2.OptionFlags.html",
    "title": "Enum OptionFlags",
    "keywords": "Enum OptionFlags Option 을 선택할 수 있는 flags Namespace: SaigeVision.Net.V2 Assembly: SaigeVision.Net.V2.dll Syntax [Flags] public enum OptionFlags Fields Name Description SAIGE_SET_ADDITIONAL_SCORES (CLS) additionalScores 옵션을 설정하는 플래그입니다. SAIGE_SET_ANOMALY_SCORE_THRESHOLD (IAD) anomalyScoreThreshold 옵션을 설정하는 플래그입니다. SAIGE_SET_CALC_CLASS_ACTIVATION_MAP (CLS) calcClassActivationMap 옵션을 설정하는 플래그입니다. SAIGE_SET_CALC_HEATMAP (IAD) calcHeatmap 옵션을 설정하는 플래그입니다. SAIGE_SET_CALC_MASK (IAD) calcMask 옵션을 설정하는 플래그입니다. SAIGE_SET_CALC_OBJECT (SEG, IAD) calcObject 옵션을 설정하는 플래그입니다. SAIGE_SET_CALC_OBJECT_AREA_AND_APPLY_THRESHOLD (SEG, IAD) calcObjectAreaAndApplyThreshold 옵션을 설정하는 플래그입니다. SAIGE_SET_CALC_OBJECT_SCORE_AND_APPLY_THRESHOLD (SEG, IAD) calcObjectScoreAndApplyThreshold 옵션을 설정하는 플래그입니다. SAIGE_SET_CALC_SCOREMAP (SEG) calcScoremap 옵션을 설정하는 플래그입니다. SAIGE_SET_CALC_TIME calcTime 옵션을 설정합니다. SAIGE_SET_HEATMAP_COLOR_RANGE (IAD) heatmapColorRangeMin, heatmapColorRangeMax 옵션을 설정하는 플래그입니다. SAIGE_SET_MAX_NUM_OF_DETECTED_OBJECTS (DET) maxNumOfDetectedObjects 옵션을 설정하는 플래그입니다. SAIGE_SET_NUM_OF_TEXT_OBJECTS (OCR) maxNumOfTextObjects 옵션을 설정하는 플래그입니다. SAIGE_SET_OBJECT_AREA_THRESHOLD (SEG, DET, IAD) SEG, DET에서는 objectAreaThresholdPerClass 옵션을, IAD에서는 objectAreaThreshold 옵션을 설정하는 플래그입니다. SAIGE_SET_OBJECT_BOUNDARY_THRESHOLD (SEG, IAD) SEG에서는 objectBoundaryThresholdPerClass 옵션을, IAD에서는 objectBoundaryThreshold 옵션을 설정하는 플래그입니다. SAIGE_SET_OBJECT_SCORE_THRESHOLD (SEG, DET, IAD) SEG, DET에서는 objectScoreThresholdPerClass 옵션을, IAD에서는 objectScoreThreshold 옵션을 설정하는 플래그입니다. SAIGE_SET_OVERSIZED_IMAGE_HANDLING (SEG) oversizedImageHandling 옵션을 설정합니다. SAIGE_SET_POLYGON_SCORE_THRESHOLD (OCR) polygonScoreThreshold 옵션을 설정하는 플래그입니다. SAIGE_SET_TEXT_FORMATTING (OCR) textFormatting 옵션을 설정하는 플래그입니다. SAIGE_SET_TEXT_SCORE_THRESHOLD (OCR) textScoreThreshold 옵션을 설정하는 플래그입니다. SAIGE_SET_TEXT_SIZE_RANGE (OCR) textSizeRangeMin, textSizeRangeMax 옵션을 설정하는 플래그입니다. SAIGE_WRITE_ON_MODEL_FILE (Common) 설정한 옵션값을 모델 파일에 덮어 씁니다."
  },
  "api_reference/SaigeVision.Net.V2.OverSizeImage.html": {
    "href": "api_reference/SaigeVision.Net.V2.OverSizeImage.html",
    "title": "Class OverSizeImage",
    "keywords": "Class OverSizeImage (SEG, IEN) SaigeHandleConfig에서 지정한 inspection size보다 큰 이미지를 처리하는 방법입니다. Segmentation 은 SAIGE_DO_NOT_INSPECT, SAIGE_RESIZE_TO_FIT, SAIGE_CROP_INTO_TILES 세 가지 옵션을 사용할 수 있으며, Image Enhancement에서는 SAIGE_DO_NOT_ENHANCE, SAIGE_CROP_INTO_TILES 두 가지 옵션을 사용할 수 있습니다. Inheritance object OverSizeImage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SaigeVision.Net.V2 Assembly: SaigeVision.Net.V2.dll Syntax public static class OverSizeImage Fields View Source CROP_INTO_TILES_PTR (SEG, IEN) 검사 할때 이미지 사이즈 다를 경우 방식을 선택 - 이미지를 crop 하여 검사 Declaration public static IntPtr CROP_INTO_TILES_PTR Field Value Type Description IntPtr View Source DO_NOT_ENHANCE_PTR (IEN) 검사 할때 이미지 사이즈 다를 경우 방식을 선택 - 검사하지 않는 옵션 Declaration public static IntPtr DO_NOT_ENHANCE_PTR Field Value Type Description IntPtr View Source DO_NOT_INSPECT_PTR (SEG) 검사 할때 이미지 사이즈 다를 경우 방식을 선택 - 검사하지 않는 옵션 Declaration public static IntPtr DO_NOT_INSPECT_PTR Field Value Type Description IntPtr View Source OversizedImageHandling Declaration public const OverSizeImageFlags OversizedImageHandling = do_not_inspect Field Value Type Description OverSizeImageFlags View Source RESIZE_TO_FIT_PTR (SEG) 검사 할때 이미지 사이즈 다를 경우 방식을 선택 - 이미지를 resize 하여 검사 Declaration public static IntPtr RESIZE_TO_FIT_PTR Field Value Type Description IntPtr Methods View Source GetOversizedImageHandlingFlags(IntPtr) Declaration public static OverSizeImageFlags GetOversizedImageHandlingFlags(IntPtr intPtr) Parameters Type Name Description IntPtr intPtr Returns Type Description OverSizeImageFlags View Source GetOversizedImageHandlingIntPtr(OverSizeImageFlags) Declaration public static IntPtr GetOversizedImageHandlingIntPtr(OverSizeImageFlags oversizedImageHandling) Parameters Type Name Description OverSizeImageFlags oversizedImageHandling Returns Type Description IntPtr"
  },
  "api_reference/SaigeVision.Net.V2.OverSizeImageFlags.html": {
    "href": "api_reference/SaigeVision.Net.V2.OverSizeImageFlags.html",
    "title": "Enum OverSizeImageFlags",
    "keywords": "Enum OverSizeImageFlags (SEG) SaigeHandleConfig에서 지정한 inspection size보다 큰 이미지를 처리하는 방법입니다. Namespace: SaigeVision.Net.V2 Assembly: SaigeVision.Net.V2.dll Syntax public enum OverSizeImageFlags Fields Name Description crop_into_tiles (SEG, IEN) Inspection size로 이미지를 크롭하여 패치마다 추론을 수행한 뒤 각 결과를 합쳐 내보냅니다. do_not_enhance (IEN) 추론을 수행하지 않고 에러를 일으킵니다. do_not_inspect (SEG) 추론을 수행하지 않고 에러를 일으킵니다. resize_to_fit (SEG) 이미지의 가로-세로 비율을 유지하면서 inspection size 보다는 크지 않게 이미지를 리사이즈하여 추론을 수행합니다."
  },
  "api_reference/SaigeVision.Net.V2.RotatedBox.html": {
    "href": "api_reference/SaigeVision.Net.V2.RotatedBox.html",
    "title": "Class RotatedBox",
    "keywords": "Class RotatedBox Inheritance object RotatedBox Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SaigeVision.Net.V2 Assembly: SaigeVision.Net.V2.dll Syntax public class RotatedBox Constructors View Source RotatedBox(PointF, PointF[], double, double, double) 생성자입니다 Declaration public RotatedBox(PointF center, PointF[] points, double width, double height, double angle) Parameters Type Name Description PointF center 중심점 좌표 PointF[] points 직사각형의 꼭지점 좌표입니다. 좌표 값은 {x1, y1, x2, y2, x3, y3, x4, y4}입니다. 1번 점은 회전하기 전 직사각형의 왼쪽 아래 점이며, 1번 점부터 시계 방향 순서로 2번, 3번, 4번 점이 이어집니다. double width 너비 double height 높이 double angle 각도값(도) Properties View Source Angle 직사각형이 시계 방향으로 회전한 각도입니다. 단위는 '도'입니다. Declaration public double Angle { get; } Property Value Type Description double View Source Center 직사각형의 중심점 좌표입니다. Declaration public PointF Center { get; } Property Value Type Description PointF View Source Height 직사각형의 높이입니다. Declaration public double Height { get; } Property Value Type Description double View Source Points 직사각형의 꼭지점 좌표입니다. 좌표 값은 {x1, y1, x2, y2, x3, y3, x4, y4}입니다. 1번 점부터 4번 점까지의 순서는 회전하기 전의 직사각형을 기준으로 합니다. 1번 점은 회전하기 전 직사각형의 왼쪽 아래 점이며, 1번 점부터 시계 방향 순서로 2번, 3번, 4번 점이 이어집니다. Declaration public PointF[] Points { get; } Property Value Type Description PointF[] View Source Width 직사각형의 너비입니다. Declaration public double Width { get; } Property Value Type Description double View Source X 직사각형의 좌측 상단의 X 좌표입니다. Declaration public double X { get; } Property Value Type Description double View Source Y 직사각형의 좌측 상단의 Y 좌표입니다. Declaration public double Y { get; } Property Value Type Description double Methods View Source GetRotatedBox(SaigeRotatedBox) Engine으로 부터 받은 SaigeRotatedBox 을 RotatedBox 형태로 변경해주는 기능 제공 Declaration public static RotatedBox GetRotatedBox(SaigeRotatedBox saigeRotatedBox) Parameters Type Name Description SaigeRotatedBox saigeRotatedBox 엔진으로 부터 받은 SaigeRotatedBox값 Returns Type Description RotatedBox RotatedBox"
  },
  "api_reference/SaigeVision.Net.V2.ScoreValues-1.html": {
    "href": "api_reference/SaigeVision.Net.V2.ScoreValues-1.html",
    "title": "Class ScoreValues<T>",
    "keywords": "Class ScoreValues<T> 스코어 값, 최저, 최고를 표시하는 클래스입니다. Inheritance object ScoreValues<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SaigeVision.Net.V2 Assembly: SaigeVision.Net.V2.dll Syntax public class ScoreValues<T> where T : struct Type Parameters Name Description T Constructors View Source ScoreValues(T, T, T) 생성자입니다 Declaration public ScoreValues(T score, T minScore, T maxScore) Parameters Type Name Description T score 검출된 컨투어 스코어값 T minScore 검출된 컨투어 최솟값 T maxScore 검출된 컨투어 최댓값 Properties View Source MaxScore 검출된 컨투어 최댓값 Declaration public T MaxScore { get; } Property Value Type Description T View Source MinScore 검출된 컨투어 최솟값 Declaration public T MinScore { get; } Property Value Type Description T View Source Score 검출된 컨투어 스코어값 Declaration public T Score { get; } Property Value Type Description T"
  },
  "api_reference/SaigeVision.Net.V2.Segmentation.html": {
    "href": "api_reference/SaigeVision.Net.V2.Segmentation.html",
    "title": "Namespace SaigeVision.Net.V2.Segmentation",
    "keywords": "Namespace SaigeVision.Net.V2.Segmentation Classes SegmentationEngine Segmentation을 수행할 수 있는 Engine입니다 SegmentationOption Segmentation 검사에 필요한 옵션을 가져오거나 설정할 수 있습니다. SegmentationResult Segmentation 검사 결과에 대한 정보가 담겨있는 클래스입니다."
  },
  "api_reference/SaigeVision.Net.V2.Segmentation.SegmentationEngine.html": {
    "href": "api_reference/SaigeVision.Net.V2.Segmentation.SegmentationEngine.html",
    "title": "Class SegmentationEngine",
    "keywords": "Class SegmentationEngine Segmentation을 수행할 수 있는 Engine입니다 Inheritance object InspectionEngine<SegmentationOption, SegmentationResult> SegmentationEngine Implements IInspectionEngine<SegmentationOption, SegmentationResult> IDisposable Inherited Members InspectionEngine<SegmentationOption, SegmentationResult>.GetInferenceOption() InspectionEngine<SegmentationOption, SegmentationResult>.SetInferenceOption(SegmentationOption, bool) InspectionEngine<SegmentationOption, SegmentationResult>.GetResult() InspectionEngine<SegmentationOption, SegmentationResult>.GetResults() InspectionEngine<SegmentationOption, SegmentationResult>.Results InspectionEngine<SegmentationOption, SegmentationResult>.GetModelInfo() InspectionEngine<SegmentationOption, SegmentationResult>.GetModuleVersion() InspectionEngine<SegmentationOption, SegmentationResult>.Inspection(SrImage) InspectionEngine<SegmentationOption, SegmentationResult>.Inspection(SrImage[]) InspectionEngine<SegmentationOption, SegmentationResult>.InspectionAsync(SrImage) InspectionEngine<SegmentationOption, SegmentationResult>.InspectionAsync(SrImage[]) InspectionEngine<SegmentationOption, SegmentationResult>.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: SaigeVision.Net.V2.Segmentation Assembly: SaigeVision.Net.V2.dll Syntax public sealed class SegmentationEngine : InspectionEngine<SegmentationOption, SegmentationResult>, IInspectionEngine<SegmentationOption, SegmentationResult>, IDisposable Constructors View Source SegmentationEngine(string, int, int, bool, Size?) 생성자입니다 Declaration public SegmentationEngine(string model, int gpuNumber, int batchSize = 1, bool useOptimize = false, Size? size = null) Parameters Type Name Description string model .saigeseg 모델파일의 경로 int gpuNumber 추론에 사용할 장치의 인덱스 int batchSize 추론을 한 번 수행할 때 몇 개의 이미지를 동시에 추론할지 설정 bool useOptimize 최적화 적용하는 플래그. 추론 최적화를 적용하면 추론 시간이 단축되지만, 추론 결과가 약간 달라질 수 있습니다. Size? size See Also InspectionEngine<TOption, UResult> SegmentationOption SegmentationResult Methods View Source GetInferenceOption() 검사에 필요한 옵션값을 가져옵니다 Declaration public override SegmentationOption GetInferenceOption() Returns Type Description SegmentationOption 검사에 필요한 옵션값 Overrides SaigeVision.Net.V2.InspectionEngine<SaigeVision.Net.V2.Segmentation.SegmentationOption, SaigeVision.Net.V2.Segmentation.SegmentationResult>.GetInferenceOption() See Also InspectionEngine<TOption, UResult> SegmentationOption SegmentationResult View Source GetResult() 검사 결과를 받아오는 함수 Declaration public override SegmentationResult GetResult() Returns Type Description SegmentationResult 검사 결과가 담겨있는 값 Overrides SaigeVision.Net.V2.InspectionEngine<SaigeVision.Net.V2.Segmentation.SegmentationOption, SaigeVision.Net.V2.Segmentation.SegmentationResult>.GetResult() See Also InspectionEngine<TOption, UResult> SegmentationOption SegmentationResult View Source GetResults() 검사 결과를 받아오는 함수 Declaration public override SegmentationResult[] GetResults() Returns Type Description SegmentationResult[] 검사 결과가 담겨있는 배열값 Overrides SaigeVision.Net.V2.InspectionEngine<SaigeVision.Net.V2.Segmentation.SegmentationOption, SaigeVision.Net.V2.Segmentation.SegmentationResult>.GetResults() See Also InspectionEngine<TOption, UResult> SegmentationOption SegmentationResult View Source SetInferenceOption(SegmentationOption, bool) 검사에 필요한 옵션값을 설정합니다 Declaration public override void SetInferenceOption(SegmentationOption option, bool writeModelFile = false) Parameters Type Name Description SegmentationOption option 옵션을 설정할 값 bool writeModelFile 모델파일에 옵션값을 덮어 씁니다. Overrides SaigeVision.Net.V2.InspectionEngine<SaigeVision.Net.V2.Segmentation.SegmentationOption, SaigeVision.Net.V2.Segmentation.SegmentationResult>.SetInferenceOption(SaigeVision.Net.V2.Segmentation.SegmentationOption, bool) See Also InspectionEngine<TOption, UResult> SegmentationOption SegmentationResult Implements IInspectionEngine<TOption, UResult> System.IDisposable See Also InspectionEngine<TOption, UResult> SegmentationOption SegmentationResult"
  },
  "api_reference/SaigeVision.Net.V2.Segmentation.SegmentationOption.html": {
    "href": "api_reference/SaigeVision.Net.V2.Segmentation.SegmentationOption.html",
    "title": "Class SegmentationOption",
    "keywords": "Class SegmentationOption Segmentation 검사에 필요한 옵션을 가져오거나 설정할 수 있습니다. Inheritance object InspectionOption SegmentationOption Implements IInspectionOption Inherited Members InspectionOption.CalcTime InspectionOption.BatchSize object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SaigeVision.Net.V2.Segmentation Assembly: SaigeVision.Net.V2.dll Syntax public class SegmentationOption : InspectionOption, IInspectionOption Constructors View Source SegmentationOption(bool, int, OverSizeImageFlags, bool, bool, bool, bool, bool, int[], int[], double[]) 검사 결과에 필요한 옵션값을 설정합니다 Declaration public SegmentationOption(bool calcTime, int batchSize, OverSizeImageFlags oversizedImageHandling, bool calcScoremap, bool calcMask, bool calcObject, bool calcObjectAreaAndApplyThreshold, bool calcObjectScoreAndApplyThreshold, int[] objectAreaThresholdPerClass, int[] objectBoundaryThresholdPerClass, double[] objectScoreThresholdPerClass) Parameters Type Name Description bool calcTime 추론 API 실행에 소요되는 시간을 세분화하여 출력할지 결정합니다. int batchSize 추론을 한 번 수행할 때 추론하는 이미지의 개수입니다. OverSizeImageFlags oversizedImageHandling SaigeHandleConfig에서 지정한 inspection size보다 큰 이미지를 처리하는 방법입니다. bool calcScoremap true로 설정하면 추론 시 scoremap을 계산합니다. bool calcMask bool calcObject true로 설정하면 추론 시 segmented object를 계산합니다. bool calcObjectAreaAndApplyThreshold true로 설정하면 segmented object의 면적을 계산합니다. bool calcObjectScoreAndApplyThreshold true로 설정하면 segmented object의 score를 계산합니다. int[] objectAreaThresholdPerClass 클래스별 object area threshold 값입니다. int[] objectBoundaryThresholdPerClass 클래스별 object boundary threshold 값입니다. double[] objectScoreThresholdPerClass 클래스별 object score threshold 값입니다. Properties View Source CalcMask true로 설정하면 추론 시 mask를 계산합니다. Declaration public bool CalcMask { get; set; } Property Value Type Description bool View Source CalcObject true로 설정하면 추론 시 segmented object를 계산합니다. Declaration public bool CalcObject { get; set; } Property Value Type Description bool View Source CalcObjectAreaAndApplyThreshold true로 설정하면 segmented object의 면적을 계산합니다. Segmented object의 면적이 object area threshold 보다 작으면 최종 결과에서 제외됩니다. Declaration public bool CalcObjectAreaAndApplyThreshold { get; set; } Property Value Type Description bool View Source CalcObjectScoreAndApplyThreshold true로 설정하면 segmented object의 score를 계산합니다. Segmented object의 score가 object score threshold 보다 작으면 최종 결과에서 제외됩니다. Declaration public bool CalcObjectScoreAndApplyThreshold { get; set; } Property Value Type Description bool View Source CalcScoremap true로 설정하면 추론 시 scoremap을 계산합니다. Declaration public bool CalcScoremap { get; set; } Property Value Type Description bool View Source ObjectAreaThresholdPerClass 클래스별 object area threshold 값입니다. n번째 클래스로 검출된 segmented object의 면적이 n번째 값보다 작으면 최종 결과에서 제외됩니다. 0번 인덱스 값은 OK 클래스에 대응하는 값으로 의미가 없으며 설정도 불가능합니다. calcObject가 true일 때 유효합니다. Declaration public int[] ObjectAreaThresholdPerClass { get; set; } Property Value Type Description int[] View Source ObjectBoundaryThresholdPerClass 클래스별 object boundary threshold 값입니다. n번째 값이 클수록 n번째 클래스의 mask 및 segmented object의 경계가 좁아집니다. Declaration public int[] ObjectBoundaryThresholdPerClass { get; set; } Property Value Type Description int[] View Source ObjectScoreThresholdPerClass 클래스별 object score threshold 값입니다. n번째 클래스로 검출된 segmented object의 score가 n번째 값보다 작으면 최종 결과에서 제외됩니다. 0번 인덱스 값은 OK 클래스에 대응하는 값으로 의미가 없으며 설정도 불가능합니다. calcObject가 true일 때 유효합니다. Declaration public double[] ObjectScoreThresholdPerClass { get; set; } Property Value Type Description double[] View Source OversizedImageHandling SaigeHandleConfig에서 지정한 inspection size보다 큰 이미지를 처리하는 방법입니다. DO_NOT_INSPECT, RESIZE_TO_FIT, CROP_INTO_TILES 세 가지 옵션이 존재합니다. Declaration public OverSizeImageFlags OversizedImageHandling { get; set; } Property Value Type Description OverSizeImageFlags Implements IInspectionOption"
  },
  "api_reference/SaigeVision.Net.V2.Segmentation.SegmentationResult.html": {
    "href": "api_reference/SaigeVision.Net.V2.Segmentation.SegmentationResult.html",
    "title": "Class SegmentationResult",
    "keywords": "Class SegmentationResult Segmentation 검사 결과에 대한 정보가 담겨있는 클래스입니다. Inheritance object InspectionResult SegmentationResult Implements IInspectionResult Inherited Members InspectionResult.InspectionTime object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SaigeVision.Net.V2.Segmentation Assembly: SaigeVision.Net.V2.dll Syntax public class SegmentationResult : InspectionResult, IInspectionResult Constructors View Source SegmentationResult(SegmentedObject[], Bitmap[], Bitmap[], InferenceTimeInfo) 생성자입니다. Declaration public SegmentationResult(SegmentedObject[] segmentedObjects, Bitmap[] masks, Bitmap[] scoremaps, InferenceTimeInfo inferenceTimeInfo) Parameters Type Name Description SegmentedObject[] segmentedObjects Segmentation을 통해 검출된 영역의 정보를 받아 옵니다. Bitmap[] masks Mask 이미지 정보입니다. Bitmap[] scoremaps Scoremap 이미지 정보입니다. InferenceTimeInfo inferenceTimeInfo 추론 API 실행에 소요된 시간을 밀리초 단위로 받아 옵니다. Properties View Source Masks Mask 이미지 정보입니다. 정상으로 분류된 픽셀은 0, 비정상으로 분류된 픽셀은 1로 표시됩니다. Declaration public Bitmap[] Masks { get; } Property Value Type Description Bitmap[] View Source Scoremaps Scoremap 이미지 정보입니다. 이미지 픽셀에 해당 클래스로 예측한 score 값이 0 ~ 255 범위의 정수로 표시된 회색조 이미지입니다. Declaration public Bitmap[] Scoremaps { get; } Property Value Type Description Bitmap[] View Source SegmentedObjects Segmentation을 통해 검출된 영역의 정보를 받아 옵니다. Declaration public SegmentedObject[] SegmentedObjects { get; } Property Value Type Description SegmentedObject[] Implements IInspectionResult"
  },
  "api_reference/SaigeVision.Net.V2.SegmentedObject.html": {
    "href": "api_reference/SaigeVision.Net.V2.SegmentedObject.html",
    "title": "Class SegmentedObject",
    "keywords": "Class SegmentedObject Segmentation 또는 Anomaly Detection을 통해 검출된 영역의 정보가 담긴 구조체입니다. Inheritance object SegmentedObject Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SaigeVision.Net.V2 Assembly: SaigeVision.Net.V2.dll Syntax public class SegmentedObject Constructors View Source SegmentedObject(RotatedBox, RotatedBox, Ellipse, uint, ClassInfo, double, Contour) 생성자입니다 Declaration public SegmentedObject(RotatedBox boundingBox, RotatedBox boundingRotBox, Ellipse fittedEllipse, uint area, ClassInfo classInfo, double score, Contour contour) Parameters Type Name Description RotatedBox boundingBox 검출된 영역을 포함하면서 면적이 가장 작은 직사각형입니다. 회전각은 항상 0도입니다. RotatedBox boundingRotBox 검출된 영역을 포함하면서 면적이 가장 작은 직사각형입니다. 회전각이 0도가 아닐 수 있습니다. Ellipse fittedEllipse 검출된 영역에 가장 잘 맞는 타원입니다. uint area 검출된 영역의 면적입니다. ClassInfo classInfo 검출된 영역이 속한 ClassInfo의 정보입니다 double score 검출된 영역을 대표하는 score 값입니다. Contour contour 검출된 영역을 표현하는 Contour의 정보입니다. Properties View Source Area 검출된 영역의 면적입니다. Declaration public uint Area { get; } Property Value Type Description uint View Source BoundingBox 검출된 영역을 포함하면서 면적이 가장 작은 직사각형입니다. 회전각은 항상 0도입니다. Declaration public RotatedBox BoundingBox { get; } Property Value Type Description RotatedBox View Source BoundingRotBox 검출된 영역을 포함하면서 면적이 가장 작은 직사각형입니다. 회전각이 0도가 아닐 수 있습니다. Declaration public RotatedBox BoundingRotBox { get; } Property Value Type Description RotatedBox View Source ClassInfo 검출된 영역이 속한 클래스의 인덱스입니다. 검출된 segmented object는 OK 클래스(0번 인덱스)에 속할 수 없습니다. 따라서 classIndex는 반드시 1 이상의 값을 가집니다. Declaration public ClassInfo ClassInfo { get; } Property Value Type Description ClassInfo View Source Contour 검출된 영역을 표현하는 contour의 정보입니다. Declaration public Contour Contour { get; } Property Value Type Description Contour View Source FittedEllipse 검출된 영역에 가장 잘 맞는 타원입니다. Declaration public Ellipse FittedEllipse { get; } Property Value Type Description Ellipse View Source Score 검출된 영역을 대표하는 score 값입니다. Declaration public double Score { get; } Property Value Type Description double"
  },
  "api_reference/SaigeVision.Net.V2.SrImage.html": {
    "href": "api_reference/SaigeVision.Net.V2.SrImage.html",
    "title": "Class SrImage",
    "keywords": "Class SrImage Inheritance object SrImage Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SaigeVision.Net.V2 Assembly: SaigeVision.Net.V2.dll Syntax public class SrImage : IDisposable Constructors View Source SrImage(Bitmap, Uri) Declaration public SrImage(Bitmap bitmap, Uri uri = null) Parameters Type Name Description Bitmap bitmap Uri uri View Source SrImage(int, int, int, byte[]) Declaration public SrImage(int width, int height, int channelSize, byte[] data) Parameters Type Name Description int width int height int channelSize byte[] data View Source SrImage(int, int, int, IntPtr) Declaration public SrImage(int width, int height, int channelSize, IntPtr data) Parameters Type Name Description int width int height int channelSize IntPtr data View Source SrImage(Stream) Declaration public SrImage(Stream stream) Parameters Type Name Description Stream stream View Source SrImage(string) Declaration public SrImage(string filePath) Parameters Type Name Description string filePath Properties View Source Channel 채널 수 Declaration public int Channel { get; } Property Value Type Description int View Source Flags Channel, Depth 에 대한 정보 Declaration public ImageTypeFlags Flags { get; } Property Value Type Description ImageTypeFlags View Source Height 세로 길이 Declaration public int Height { get; } Property Value Type Description int View Source Uri 원본 이미지의 Uri Declaration public Uri Uri { get; } Property Value Type Description Uri Remarks File path를 통한 생성자를 통해 생성된 인스턴스만 값을 가질 수 있으며, 그외 생성자는 해당 값을 null로 표현합니다. View Source Width 가로 길이 Declaration public int Width { get; } Property Value Type Description int Methods View Source Dispose() Declaration public void Dispose() View Source ~SrImage() Declaration protected ~SrImage() View Source Save(string) 이미지를 저장합니다. Declaration public void Save(string path) Parameters Type Name Description string path 저장할 파일 경로. View Source ToBitmap() Declaration public Bitmap ToBitmap() Returns Type Description Bitmap Operators View Source implicit operator Mat(SrImage) Declaration public static implicit operator Mat(SrImage image) Parameters Type Name Description SrImage image Returns Type Description Mat View Source implicit operator Bitmap(SrImage) Declaration public static implicit operator Bitmap(SrImage image) Parameters Type Name Description SrImage image Returns Type Description Bitmap Implements System.IDisposable"
  },
  "api_reference/SaigeVision.Net.V2.TextFormatting.html": {
    "href": "api_reference/SaigeVision.Net.V2.TextFormatting.html",
    "title": "Class TextFormatting",
    "keywords": "Class TextFormatting 인식하고자 하는 글자의 포맷을 지정하는 옵션입니다. 글자 수에 관계 없이 인식하고자 하는 글자집합을 설정하는 방식과, 글자의 위치별로 인식하고자 하는 글자집합을 설정하는 두 가지 방식이 있습니다. Inheritance object TextFormatting Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SaigeVision.Net.V2 Assembly: SaigeVision.Net.V2.dll Syntax public class TextFormatting Constructors View Source TextFormatting(int, bool[], bool[], bool[], bool[], bool[]) Declaration public TextFormatting(int length, bool[] engLower, bool[] engUpper, bool[] number, bool[] kor, bool[] symbol) Parameters Type Name Description int length bool[] engLower bool[] engUpper bool[] number bool[] kor bool[] symbol Properties View Source EngLower 영소문자를 포함하는지 여부를 지정하는 변수입니다. Declaration public bool[] EngLower { get; set; } Property Value Type Description bool[] View Source EngUpper 영대문자를 포함하는지 여부를 지정하는 변수입니다. Declaration public bool[] EngUpper { get; set; } Property Value Type Description bool[] View Source Kor 한글을 포함하는지 여부를 지정하는 변수입니다. 지원하는 한글집합은 KSC5601을 지원하며 예외적인 글자도 추가될 수 있습니다. Declaration public bool[] Kor { get; set; } Property Value Type Description bool[] View Source Length 인식하려는 글자의 수를 지정합니다. 0인 경우 글자 수에 관계 없는 옵션을 의미합니다. Declaration public int Length { get; set; } Property Value Type Description int View Source Number 숫자를 포함하는지 여부를 지정하는 변수입니다. Declaration public bool[] Number { get; set; } Property Value Type Description bool[] View Source Symbol 기호를 포함하는지 여부를 지정하는 변수입니다. 지원하는 기호의 종류는 다음과 같습니다. .,'\"·●°_~-+±=*※#%&@:/!?(){}[]<> Declaration public bool[] Symbol { get; set; } Property Value Type Description bool[] Methods View Source ToSaigeTextFormatting(TextFormatting) Declaration public static SaigeTextFormatting ToSaigeTextFormatting(TextFormatting src) Parameters Type Name Description TextFormatting src Returns Type Description SaigeTextFormatting View Source ToTextFormatting(SaigeTextFormatting) Declaration public static TextFormatting ToTextFormatting(SaigeTextFormatting src) Parameters Type Name Description SaigeTextFormatting src Returns Type Description TextFormatting"
  },
  "api_reference/SaigeVision.Net.V2.TextObject.html": {
    "href": "api_reference/SaigeVision.Net.V2.TextObject.html",
    "title": "Class TextObject",
    "keywords": "Class TextObject 텍스트를 검출하는 OCR 검사의 결과가 담긴 클래스입니다. Inheritance object TextObject Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SaigeVision.Net.V2 Assembly: SaigeVision.Net.V2.dll Syntax public class TextObject Constructors View Source TextObject(Contour, double, double, double, string) 생성자입니다 검출된 영역을 표현하는 Contour의 정보입니다. 검출된 글자 영역의 신뢰도 점수입니다. 검출된 글자의 크기입니다. 인식된 글자의 확률적 점수입니다. 각 글자별 점수의 평균값 입니다. 검출된 문자열 값입니다. Declaration public TextObject(Contour contour, double contourScore, double textSize, double textScore, string text) Parameters Type Name Description Contour contour double contourScore double textSize double textScore string text Properties View Source Contour 글자 영역을 표현하는 contour의 정보입니다. Declaration public Contour Contour { get; } Property Value Type Description Contour View Source ContourScore 검출된 글자 영역의 신뢰도 점수입니다. Declaration public double ContourScore { get; } Property Value Type Description double View Source Text 검출된 문자열 값입니다. Declaration public string Text { get; } Property Value Type Description string View Source TextScore 인식된 글자의 확률적 점수입니다. 각 글자별 점수의 평균값 입니다. Declaration public double TextScore { get; } Property Value Type Description double View Source TextSize 검출된 글자의 크기입니다. Declaration public double TextSize { get; } Property Value Type Description double"
  },
  "development_guide/classification.html": {
    "href": "development_guide/classification.html",
    "title": "Classification",
    "keywords": "Classification 이 문서는 SaigieVision을 통해 이미지를 'Classification(분류)' 하는 방법에 대해 설명합니다. 여러분이 앞서 제공된 Quick Start 를 끝냈다면, 'Classification'을 수행하는 방법은 그리 어렵지 않습니다. 아래 코드 블럭은 간단하게 Classification 검사 진행 방법에 대해서 설명합니다. { // Prepare SrImage srImage = new SrImage(@\"..\\..\\sample.png\"); string modelPath = @\"..\\..\\model.saigecls\"; int gpuIndex = 0; // Initialize ClassificationEngine engine = new ClassificationEngine(modelPath, gpuIndex); // Model Info ModelInfo model = engine.GetModelInfo(); // Option ClassificationOption option = engine.GetInferenceOption(); option.AdditionalScores[0] = 0; option.CalcClassActivationMap = true; engine.SetInferenceOption(option); // Inspection & Get Result ClassificationResult result = engine.Inspection(srImage); Console.WriteLine($\"Best Class Name: {result.BestScoreClassInfo.ClassInfo.Name}\"); Console.WriteLine($\"Best Class Score: {result.BestScoreClassInfo.Score}\"); for (int i = 0; i < result.ClassScoreInfos.Length; i++) { Console.WriteLine($\"Class Name: {result.ClassScoreInfos[i].ClassInfo.Name}\"); Console.WriteLine($\"Class Score: {result.ClassScoreInfos[i].Score}\"); } // optional srImage.Dispose(); } Prepare SrImage srImage = new SrImage(@\"..\\..\\sample.png\"); string modelPath = @\"..\\..\\model.saigecls\"; int gpuIndex = 0; ClassificationEngine 을 사용하기 위해 필요한 모든 데이터를 준비하는 과정입니다. 일반적으로 아래와 같은 3가지를 요구합니다. 검사에 사용할 GPU 검사에 사용할 샘플 이미지들 검사에 사용할 모델( .saigecls 파일) SaigeVision은 NVIDIA사의 GPU만을 지원하고 있습니다. GPU Index에 대해서는 명령 프롬프트 (command) 창을 통해 nvidia-smi 명령어를 입력하면 GPU의 index를 확인할 수 있습니다. 이미지는 SrImage 객체를 통해 생성 가능합니다. 8bit, 16bit 형태의 이미지를 GrayScale, RGB, RGBA 형태로 제공이 됩니다. Initialize ClassificationEngine engine = new ClassificationEngine(modelPath, gpuIndex) ClassificationEngine 생성자에서 .saigecls 모델파일에 대한 경로와 GPU Index를 매개변수로 설정하여 생성합니다. Model Info (Optional) ModelInfo model = engine.GetModelInfo(); ModelInfo 는 .saigecls 모델 파일에 대한 정보를 확인할 수 있습니다. 일반적으로 아래와 같은 정보를 확인할 수 있습니다. Network Type (어떤 종류의 딥러닝 네트워크를 사용했는지 나타냅니다) Classes Information (클래스 정보입니다. name, color에 대한 정보들을 확인할 수 있습니다.) Developer Version (모델을 학습할 때 사용한 SaigeVision Developer의 버전입니다.) Server Version (모델을 학습할 때 사용한 SaigeVision Developer의 구성 요소 중 서버의 버전입니다.) Module Version (모델을 학습할 때 사용한 SaigeVision Developer의 구성 요소 중 딥러닝 모듈의 버전입니다.) Roi Information (ROI 정보입니다.) Resize Factor (Segmentation, IEN 전용, 인풋 이미지에 적용되는 리사이즈 비율입니다. 추론 이미지에도 동일하게 적용됩니다.) Crop Size (Segmentation, IEN 전용, 학습 때 사용된 패치의 사이즈입니다. 추론 이미지와는 관련 없습니다) Image Resize (IAD, CLS 전용, 인풋 이미지에 적용되는 리사이즈 입니다. 추론 이미지에도 동일하게 적용됩니다) 자세한 내용은 Model Info 문서를 통하여 확인할 수 있습니다. Option (Optional) ClassificationOption option = engine.GetInferenceOption(); option.AdditionalScores[0] = 0; option.CalcClassActivationMap = true; engine.SetInferenceOption(option); ClassificationOption 에서 GetInferenceOption() 을 통해서 옵션에 대해서 정보를 받을 수 있습니다. SetInferenceOption() 을 통해서 옵션에 대해서 설정을 할 수 있습니다. 옵션은 아래와 같은 정보들을 설정할 수 있습니다. Calc Time (추론 API 실행에 소요되는 시간을 세분화하여 출력할지 결정합니다.) Batch Size (추론을 한 번 수행할 때 추론하는 이미지의 개수입니다.) AdditionalScores (클래스별 additional score 값입니다. n번째 인덱스에 설정한 값만큼 n번째 클래스에 추가 score가 부여됩니다. 각 additional score 값은 0 이상 100 이하의 실수로만 설정 가능합니다.) CalcClassActivationMap true로 설정하면 추론 시 class activation map을 계산합니다. true로 설정하면 전체 추론 시간이 느려지며 추론 최적화를 적용하는 것도 불가능합니다. 실제 검사 시에는 false로 설정하는 것을 권장합니다.) 자세한 내용은 Classification Option 문서를 통하여 확인할 수 있습니다. Inspection & GetResult ClassificationResult result = engine.Inspection(srImage); Console.WriteLine($\"Best Class Name: {result.BestScoreClassInfo.ClassInfo.Name}\"); Console.WriteLine($\"Best Class Score: {result.BestScoreClassInfo.Score}\"); for (int i = 0; i < result.ClassScoreInfos.Length; i++) { Console.WriteLine($\"Class Name: {result.ClassScoreInfos[i].ClassInfo.Name}\"); Console.WriteLine($\"Class Score: {result.ClassScoreInfos[i].Score}\"); } 코드에서 볼수 있는 것처럼 'Inspection'을 수행하는 주 함수는 engine.Inspect()입니다. 모든 종류의 Engine들은 이러한 공통의 Inspect() 함수를 보유하고 있습니다. 또한, 다양한 사용을 위해 여러 형태로 중첩 되어 있습니다. 비동기 혹은 다수의 이미지들을 검사하는 등의 여러 시나리오에서 선택적으로 사용할 수 있습니다. ClassificationResult 에서 결과에 대한 모든 정보를 확인할 수 있습니다. Classification 의 경우 아래와 같은 정보를 결과로 확인할 수 있습니다. 일부 결과 정보에 대해서는 ClassificationResult 에서 true로 반영해야 정보를 받아올 수 있습니다. BestScoreClassInfo (Additional score 까지 반영된 클래스별 최종 score 값 중 가장 값의 ClassScoreInfo를 받아옵니다.) ClassScoreInfos (클래스별 score 값이 담긴 ClassScoreInfo 배열을 받아 옵니다.) ActivationMap (Activation Bitmap을 받아 옵니다.) ActivationMapArray (Activation Byte Array로 받아 옵니다.) Insepction Time (추론 API 실행에 소요된 시간을 밀리초 단위로 받아 옵니다.) Optional srImage.Dispose(); 이 예제에서는 검사에 사용했던 SrImage들을 더 이상 사용할 곳이 없이게 Dispose() 합니다. 많은 수의 이미지를 한번에 검사 앞선 예제에서는 '한 장의 이미지'를 검사하는 시나리오에 대해서 살펴보았습니다. 하지만 '많은 수의 이미지'를 한번에 검사하고자 하는 경우에 대해 알아보겠습니다. 샘플 코드에서 몇가지 부분을 수정하여 이 상황을 해결해봅시다. 우선 srImage을 배열로 만들어 '많은 수의 이미지' 데이터를 준비합니다. 아래와 같습니다. SrImage[] srImages = new SrImage[] { new SrImage(@\"..\\...\\sample1.png\"), new SrImage(@\"..\\...\\sample2.png\"), new SrImage(@\"..\\...\\sample3.png\"), new SrImage(@\"..\\...\\sample4.png\") }; 이후 생성자에서 숨어있던 마지막 인자를 사용할 수 있습니다. var engine = new ClassificationEngine(modelPath, gpuIndex, 4) 마지막 인자는 '최대 이미지 수' 를 의미하며 한번에 (병렬로) 처리할 수 있는 이미지 수를 의미합니다. 큰 값이 설정될수록 GPU 메모리 할당량이 커지므로, 메모리가 부족하다면 작은 수로 설정해 주세요. 마지막으로 Inspect() 함수가 포함된 라인 이후를 수정합니다. 결과를 받아오는 GetResults() 함수를 복수명으로 변경 후 배열로 받아올 수 있도록 변경합니다. ClassificationResult[] results = engine.Inspection(srImages); 이제 코드를 동작하여 '많은 수의 이미지'를 검사할 수 있습니다."
  },
  "development_guide/detection.html": {
    "href": "development_guide/detection.html",
    "title": "Detection",
    "keywords": "Detection 이 문서는 SaigieVision을 통해 이미지를 'Detection(검출)' 하는 방법에 대해 설명합니다. 여러분이 앞서 제공된 Quick Start 를 끝냈다면, 'Detection'을 수행하는 방법은 그리 어렵지 않습니다. 아래 코드 블럭은 간단하게 Detection 검사 진행 방법에 대해서 설명합니다. { // Prepare SrImage srImage = new SrImage(@\"..\\..\\sample.png\"); string modelPath = @\"..\\..\\model.saigedet\"; int gpuIndex = 0; // Initialize DetectionEngine engine = new DetectionEngine(modelPath, gpuIndex); // Model Info ModelInfo model = engine.GetModelInfo(); // Option DetectionOption option = engine.GetInferenceOption(); option.CalcTime = true; option.MaxNumOfDetectedObjects[1] = -1; option.MaxNumOfDetectedObjects[2] = -1; option.ObjectScoreThresholdPerClass[1] = 50; option.ObjectScoreThresholdPerClass[2] = 50 option.ObjectAreaThresholdPerClass[1] = 0; option.ObjectAreaThresholdPerClass[2] = 0 engine.SetInferenceOption(option); // Inspection & Get Result DetectionResult result = engine.Inspection(srImage); Console.WriteLine($\"ImreadTime:{result.InspectionTime.ImreadTime}\"); Console.WriteLine($\"InferenceTime:{result.InspectionTime.InferenceTime}\"); Console.WriteLine($\"PostProcessingTime:{result.InspectionTime.PostProcessingTime}\"); foreach (var detectedObject in result.DetectedObjects) { Console.WriteLine($\"Name:{detectedObject.ClassInfo.Name}\"); Console.WriteLine($\"Area:{detectedObject.Area}\"); Console.WriteLine($\"Score:{detectedObject.Score}\"); } // optional srImage.Dispose(); } Prepare SrImage srImage = new SrImage(@\"..\\..\\sample.png\"); string modelPath = @\"..\\..\\model.saigedet\"; int gpuIndex = 0; DetectionEngine 을 사용하기 위해 필요한 모든 데이터를 준비하는 과정입니다. 일반적으로 아래와 같은 3가지를 요구합니다. 검사에 사용할 GPU 검사에 사용할 샘플 이미지들 검사에 사용할 모델( .saigedet 파일) SaigeVision은 NVIDIA사의 GPU만을 지원하고 있습니다. GPU Index에 대해서는 명령 프롬프트 (command) 창을 통해 nvidia-smi 명령어를 입력하면 GPU의 index를 확인할 수 있습니다. 이미지는 SrImage 객체를 통해 생성 가능합니다. 8bit, 16bit 형태의 이미지를 GrayScale, RGB, RGBA 형태로 제공이 됩니다. Initialize DetectionEngine engine = new DetectionEngine(modelPath, gpuIndex) DetectionEngine 생성자에서 .saigedet 모델파일에 대한 경로와 GPU Index를 매개변수로 설정하여 생성합니다. Model Info (Optional) ModelInfo model = engine.GetModelInfo(); ModelInfo 는 .saigedet 모델 파일에 대한 정보를 확인할 수 있습니다. 일반적으로 아래와 같은 정보를 확인할 수 있습니다. Network Type (어떤 종류의 딥러닝 네트워크를 사용했는지 나타냅니다) Classes Information (클래스 정보입니다. name, color에 대한 정보들을 확인할 수 있습니다.) Developer Version (모델을 학습할 때 사용한 SaigeVision Developer의 버전입니다.) Server Version (모델을 학습할 때 사용한 SaigeVision Developer의 구성 요소 중 서버의 버전입니다.) Module Version (모델을 학습할 때 사용한 SaigeVision Developer의 구성 요소 중 딥러닝 모듈의 버전입니다.) Roi Information (ROI 정보입니다.) Resize Factor (Segmentation, IEN 전용, 인풋 이미지에 적용되는 리사이즈 비율입니다. 추론 이미지에도 동일하게 적용됩니다.) Crop Size (Segmentation, IEN 전용, 학습 때 사용된 패치의 사이즈입니다. 추론 이미지와는 관련 없습니다) Image Resize (IAD, CLS 전용, 인풋 이미지에 적용되는 리사이즈 입니다. 추론 이미지에도 동일하게 적용됩니다) 자세한 내용은 Model Info 문서를 통하여 확인할 수 있습니다. Option (Optional) DetectionOption option = engine.GetInferenceOption(); option.MaxNumOfDetectedObjects[1] = -1; option.ObjectScoreThresholdPerClass[1] = 50; option.ObjectAreaThresholdPerClass[1] = 0; engine.SetInferenceOption(option); DetectionOption 에서 GetInferenceOption() 을 통해서 옵션에 대해서 정보를 받을 수 있습니다. SetInferenceOption() 을 통해서 옵션에 대해서 설정을 할 수 있습니다. 옵션은 아래와 같은 정보들을 설정할 수 있습니다. Calc Time (추론 API 실행에 소요되는 시간을 세분화하여 출력할지 결정합니다.) MaxNumOfDetectedObjects (출할 detected object의 최대 개수입니다.) ObjectScoreThresholdPerClass (클래스별 object area threshold 값입니다.) ObjectAreaThresholdPerClass (클래스별 object score threshold 값입니다.) 자세한 내용은 Detection Option 문서를 통하여 확인할 수 있습니다. Inspection & Result DetectionResult result = engine.Inspection(bmp); Console.WriteLine($\"ImreadTime:{result.InspectionTime.ImreadTime}\"); Console.WriteLine($\"InferenceTime:{result.InspectionTime.InferenceTime}\"); Console.WriteLine($\"PostProcessingTime:{result.InspectionTime.PostProcessingTime}\"); foreach (var detectedObject in result.DetectedObjects) { Console.WriteLine($\"Name:{detectedObject.ClassInfo.Name}\"); Console.WriteLine($\"Area:{detectedObject.Area}\"); Console.WriteLine($\"Score:{detectedObject.Score}\"); } 코드에서 볼수 있는 것처럼 'Inspection'을 수행하는 주 함수는 engine.Inspect()입니다. 모든 종류의 Engine들은 이러한 공통의 Inspect() 함수를 보유하고 있습니다. 또한, 다양한 사용을 위해 여러 형태로 중첩 되어 있습니다. 비동기로 검사하는 등의 여러 시나리오에서 선택적으로 사용할 수 있습니다. DetectionResult 에서 결과에 대한 모든 정보를 확인할 수 있습니다. Detection 의 경우 아래와 같은 정보를 결과로 확인할 수 있습니다. Detected Objects (Detection을 통해 검출된 영역의 정보를 받아 옵니다.) Insepction Time (추론 API 실행에 소요된 시간을 밀리초 단위로 받아 옵니다.) Optional srImage.Dispose(); 이 예제에서는 검사에 사용했던 SrImage들을 더 이상 사용할 곳이 없이게 Dispose() 합니다."
  },
  "development_guide/iad.html": {
    "href": "development_guide/iad.html",
    "title": "IAD (Image Anomaly Detection)",
    "keywords": "IAD (Image Anomaly Detection) 이 문서는 SaigieVision을 통해 이미지를 'Image Anomaly Detection(이상탐지)' (이하 IAD) 하는 방법에 대해 설명합니다. 여러분이 앞서 제공된 Quick Start 를 끝냈다면, 'IAD'을 수행하는 방법은 그리 어렵지 않습니다. 아래 코드 블럭은 간단하게 IAD(Image Anomaly Detection) 검사 진행 방법에 대해서 설명합니다. { // Prepare SrImage srImage = new SrImage(@\"..\\..\\sample.png\"); string modelPath = @\"..\\..\\model.saigeiad\"; int gpuIndex = 0; // Initialize using (var engine = new IADEngine(modelPath, gpuIndex)) { // Model Info ModelInfo model = engine.GetModelInfo(); // Option IADOption option = engine.GetInferenceOption(); option.CalcTime = true; option.CalcHeatmap = true; option.CalcMask = true; option.CalcObject = true; option.CalcObjectAreaAndApplyThreshold = true; option.CalcObjectScoreAndApplyThreshold = true; engine.SetInferenceOption(option); // Inspection & Get Result IADResult result = engine.Inspection(srImage); Console.WriteLine(\"RESULT: \" + (result.IsNG ? \"NG\" : \"OK\")); Console.WriteLine($\"Anomaly Score:{result.AnomalyScore.Score:N3}\"); Console.WriteLine($\"Max:{result.AnomalyScore.MaxScore:N3}\"); Console.WriteLine($\"Min{result.AnomalyScore.MinScore:N3}\"); Console.WriteLine($\"ImreadTime:{result.InspectionTime.ImreadTime}\"); Console.WriteLine($\"InferenceTime:{result.InspectionTime.InferenceTime}\"); Console.WriteLine($\"PostProcessingTime:{result.InspectionTime.PostProcessingTime}\"); foreach (var so in result.SegmentedObjects) { Console.WriteLine($\"Name:{so.ClassInfo.Name}\"); Console.WriteLine($\"Area:{so.Area}\"); Console.WriteLine($\"Score:{so.Score}\"); Console.WriteLine($\"Center Point X: ({so.BoundingRotBox.Center.X}\"); Console.WriteLine($\"Center Point Y: ({so.BoundingRotBox.Center.Y}\"); } } // optional srImage.Dispose(); } Prepare SrImage srImage = new SrImage(@\"..\\..\\sample.png\"); string modelPath = @\"..\\..\\model.saigeiad\"; int gpuIndex = 0; IADEngine 을 사용하기 위해 필요한 모든 데이터를 준비하는 과정입니다. 일반적으로 아래와 같은 3가지를 요구합니다. 검사에 사용할 GPU 검사에 사용할 샘플 이미지들 검사에 사용할 모델( .saigeiad 파일) SaigeVision은 NVIDIA사의 GPU만을 지원하고 있습니다. GPU Index에 대해서는 명령 프롬프트 (command) 창을 통해 nvidia-smi 명령어를 입력하면 GPU의 index를 확인할 수 있습니다. 이미지는 SrImage 객체를 통해 생성 가능합니다. 8bit, 16bit 형태의 이미지를 GrayScale, RGB, RGBA 형태로 제공이 됩니다. Initialize IADEngine engine = new IADEngine(modelPath, gpuIndex) IADEngine 생성자에서 .saigeiad 모델파일에 대한 경로와 GPU Index를 매개변수로 설정하여 생성합니다. Model Info (Optional) ModelInfo model = engine.GetModelInfo(); ModelInfo 는 .saigeiad 모델 파일에 대한 정보를 확인할 수 있습니다. 일반적으로 아래와 같은 정보를 확인할 수 있습니다. Network Type (어떤 종류의 딥러닝 네트워크를 사용했는지 나타냅니다) Classes Information (클래스 정보입니다. name, color에 대한 정보들을 확인할 수 있습니다.) Developer Version (모델을 학습할 때 사용한 SaigeVision Developer의 버전입니다.) Server Version (모델을 학습할 때 사용한 SaigeVision Developer의 구성 요소 중 서버의 버전입니다.) Module Version (모델을 학습할 때 사용한 SaigeVision Developer의 구성 요소 중 딥러닝 모듈의 버전입니다.) Roi Information (ROI 정보입니다.) Resize Factor (Segmentation, IEN 전용, 인풋 이미지에 적용되는 리사이즈 비율입니다. 추론 이미지에도 동일하게 적용됩니다.) Crop Size (Segmentation, IEN 전용, 학습 때 사용된 패치의 사이즈입니다. 추론 이미지와는 관련 없습니다) Image Resize (IAD, CLS 전용, 인풋 이미지에 적용되는 리사이즈 입니다. 추론 이미지에도 동일하게 적용됩니다) 자세한 내용은 Model Info 문서를 통하여 확인할 수 있습니다. Option (Optional) IADOption option = engine.GetInferenceOption(); option.CalcTime = true; option.CalcHeatmap = true; option.CalcMask = true; option.CalcObject = true; option.CalcObjectAreaAndApplyThreshold = true; option.CalcObjectScoreAndApplyThreshold = true; engine.SetInferenceOption(option); IADOption 에서 GetInferenceOption() 을 통해서 옵션에 대해서 정보를 받을 수 있습니다. SetInferenceOption() 을 통해서 옵션에 대해서 설정을 할 수 있습니다. 옵션은 아래와 같은 정보들을 설정할 수 있습니다. Calc Time (추론 API 실행에 소요되는 시간을 세분화하여 출력할지 결정합니다.) Batch Size (추론을 한 번 수행할 때 추론하는 이미지의 개수입니다.) Calc Segmented Object (true 로 설정하면 추론 시 segmented object를 계산합니다.) Calc Mask (true로 설정하면 추론 시 이미지 원본과 같은 크기의 mask를 계산합니다.) Calc Heatmap (true로 설정하면 추론 시 이미지 원본과 같은 크기의 heatmap을 계산합니다.) Calc Object Area and Apply Threshold Calc Object Score and Apply Threshold Anomaly Score Threshold (이미지 전체를 대표하는 anomaly score가 이 값보다 크면 비정상 이미지로, 작거나 같으면 정상 이미지로 판정합니다.) Heatmap Color Range Min/Max Object Boundary Threshold Object Area Threshold Object Score Threshold 자세한 내용은 IAD Option 문서를 통하여 확인할 수 있습니다. Inspection engine.Inspection(srImage); 코드에서 볼수 있는 것처럼 'Inspection'을 수행하는 주 함수는 engine.Inspect()입니다. 모든 종류의 Engine들은 이러한 공통의 Inspect() 함수를 보유하고 있습니다. 또한, 다양한 사용을 위해 여러 형태로 중첩 되어 있습니다. 비동기 혹은 다수의 이미지들을 검사하는 등의 여러 시나리오에서 선택적으로 사용할 수 있습니다. Result IADResult result = engine.GetResult(); Console.WriteLine(\"RESULT: \" + (result.IsNG ? \"NG\" : \"OK\")); Console.WriteLine($\"Anomaly Score:{result.AnomalyScore.Score:N3}\"); Console.WriteLine($\"Max:{result.AnomalyScore.MaxScore:N3}\"); Console.WriteLine($\"Min{result.AnomalyScore.MinScore:N3}\"); Console.WriteLine($\"ImreadTime:{result.InspectionTime.ImreadTime}\"); Console.WriteLine($\"InferenceTime:{result.InspectionTime.InferenceTime}\"); Console.WriteLine($\"PostProcessingTime:{result.InspectionTime.PostProcessingTime}\"); foreach (var so in result.SegmentedObjects) { Console.WriteLine($\"Name:{so.ClassInfo.Name}\"); Console.WriteLine($\"Area:{so.Area}\"); Console.WriteLine($\"Score:{so.Score}\"); Console.WriteLine($\"Center Point X: ({so.BoundingRotBox.Center.X}\"); Console.WriteLine($\"Center Point Y: ({so.BoundingRotBox.Center.Y}\"); } IADResult 에서 결과에 대한 모든 정보를 확인할 수 있습니다. IAD 의 경우 아래와 같은 정보를 결과로 확인할 수 있습니다. 일부 결과 정보에 대해서는 IADOption 에서 true로 반영해야 정보를 받아올 수 있습니다. IsNG (정상/비정상 판별 결과입니다.) Anomaly Score (이미지의 대표 anomaly score, 최소, 최대값입니다) Segmented Objects (Anomaly Detection을 통해 검출된 영역의 정보를 받아 옵니다.) Mask (Mask 이미지 정보입니다.) Scoremap (Scoremap 이미지 정보입니다.) Heatmap (Heatmap 이미지 정보입니다.) Insepction Time (추론 API 실행에 소요된 시간을 밀리초 단위로 받아 옵니다.) Optional srImage.Dispose(); 이 예제에서는 검사에 사용했던 Bitmap들을 더 이상 사용할 곳이 없이게 Dispose() 합니다. 많은 수의 이미지를 한번에 검사 앞선 예제에서는 '한 장의 이미지'를 검사하는 시나리오에 대해서 살펴보았습니다. 하지만 '많은 수의 이미지'를 한번에 검사하고자 하는 경우에 대해 알아보겠습니다. 샘플 코드에서 몇가지 부분을 수정하여 이 상황을 해결해봅시다. 우선 Bitmap을 배열로 만들어 '많은 수의 이미지' 데이터를 준비합니다. 아래와 같습니다. SrImage[] srImages = new SrImage[] { new SrImage(@\"..\\...\\sample1.png\"), new SrImage(@\"..\\...\\sample2.png\"), new SrImage(@\"..\\...\\sample3.png\"), new SrImage(@\"..\\...\\sample4.png\") }; 이후 생성자에서 숨어있던 마지막 인자를 사용할 수 있습니다. var engine = new IADEngine(modelPath, gpuIndex, 4) 마지막 인자는 '최대 이미지 수' 를 의미하며 한번에 (병렬로) 처리할 수 있는 이미지 수를 의미합니다. 큰 값이 설정될수록 GPU 메모리 할당량이 커지므로, 메모리가 부족하다면 작은 수로 설정해 주세요. 마지막으로 Inspect() 함수가 포함된 라인 이후를 수정합니다. 결과를 받아오는 GetResults() 함수를 복수명으로 변경 후 배열로 받아올 수 있도록 변경합니다. IADResult[] results =engine.Inspection(srImages); 이제 코드를 동작하여 '많은 수의 이미지'를 검사할 수 있습니다."
  },
  "development_guide/ien.html": {
    "href": "development_guide/ien.html",
    "title": "IEN",
    "keywords": "IEN 이 문서는 SaigieVision을 통해 이미지를 'Image Enhancement(이미지 개선)' (이하 IEN) 하는 방법에 대해 설명합니다. 여러분이 앞서 제공된 Quick Start 를 끝냈다면, 'IEN'을 수행하는 방법은 그리 어렵지 않습니다. 아래 코드 블럭은 간단하게 IEN 검사 진행 방법에 대해서 설명합니다. { // Prepare SrImage srImage = new SrImage(@\"..\\..\\sample.png\"); string modelPath = @\"..\\..\\model.saigeien\"; int gpuIndex = 0; // Initialize IENEngine engine = new IENEngine(modelPath, gpuIndex); // Model Info ModelInfo model = engine.GetModelInfo(); string module engine.GetModuleVersion(); // Option IENOption option = engine.GetInferenceOption(); option.CalcTime = true; option.OversizedImageHandling = OverSizeImageFlags.do_not_enhance; engine.SetInferenceOption(option); // Inspection & Get Result IENResult result = engine.Inspection(srImage); Console.WriteLine($\"ImreadTime:{result.InspectionTime.ImreadTime}\"); Console.WriteLine($\"InferenceTime:{result.InspectionTime.InferenceTime}\"); Console.WriteLine($\"PostProcessingTime:{result.InspectionTime.PostProcessingTime}\"); Bitmap resultImage = result.ResultImage; // IEN 이 적용된 결과 이미지 // optional srImage.Dispose(); } Prepare SrImage srImage = new SrImage(@\"..\\..\\sample.png\"); string modelPath = @\"..\\..\\model.saigeien\"; int gpuIndex = 0; IENEngine 을 사용하기 위해 필요한 모든 데이터를 준비하는 과정입니다. 일반적으로 아래와 같은 3가지를 요구합니다. 검사에 사용할 GPU 검사에 사용할 샘플 이미지들 검사에 사용할 모델( .saigeien 파일) SaigeVision은 NVIDIA사의 GPU만을 지원하고 있습니다. GPU Index에 대해서는 명령 프롬프트 (command) 창을 통해 nvidia-smi 명령어를 입력하면 GPU의 index를 확인할 수 있습니다. 이미지는 SrImage 객체를 통해 생성 가능합니다. 8bit, 16bit 형태의 이미지를 GrayScale, RGB, RGBA 형태로 제공이 됩니다. Initialize IENEngine engine = new IENEngine(modelPath, gpuIndex) IENEngine 생성자에서 .saigeien 모델파일에 대한 경로와 GPU Index를 매개변수로 설정하여 생성합니다. Model Info (Optional) ModelInfo model = engine.GetModelInfo(); ModelInfo 는 .saigeien 모델 파일에 대한 정보를 확인할 수 있습니다. 일반적으로 아래와 같은 정보를 확인할 수 있습니다. Network Type (어떤 종류의 딥러닝 네트워크를 사용했는지 나타냅니다) Classes Information (클래스 정보입니다. name, color에 대한 정보들을 확인할 수 있습니다.) Developer Version (모델을 학습할 때 사용한 SaigeVision Developer의 버전입니다.) Server Version (모델을 학습할 때 사용한 SaigeVision Developer의 구성 요소 중 서버의 버전입니다.) Module Version (모델을 학습할 때 사용한 SaigeVision Developer의 구성 요소 중 딥러닝 모듈의 버전입니다.) Roi Information (ROI 정보입니다.) Resize Factor (Segmentation, IEN 전용, 인풋 이미지에 적용되는 리사이즈 비율입니다. 추론 이미지에도 동일하게 적용됩니다.) Crop Size (Segmentation, IEN 전용, 학습 때 사용된 패치의 사이즈입니다. 추론 이미지와는 관련 없습니다) Image Resize (IAD, CLS 전용, 인풋 이미지에 적용되는 리사이즈 입니다. 추론 이미지에도 동일하게 적용됩니다) 자세한 내용은 Model Info 문서를 통하여 확인할 수 있습니다. Option (Optional) IENOption option = engine.GetInferenceOption(); option.CalcTime = true; option.OversizedImageHandling = OverSizeImageFlags.do_not_enhance; engine.SetInferenceOption(option); IENOption 에서 GetInferenceOption() 을 통해서 옵션에 대해서 정보를 받을 수 있습니다. SetInferenceOption() 을 통해서 옵션에 대해서 설정을 할 수 있습니다. 옵션은 아래와 같은 정보들을 설정할 수 있습니다. Calc Time (추론 API 실행에 소요되는 시간을 세분화하여 출력할지 결정합니다.) Batch Size (추론을 한 번 수행할 때 추론하는 이미지의 개수입니다.) OversizedImageHandling (SaigeHandleConfig에서 지정한 inspection size보다 큰 이미지를 처리하는 방법입니다. DO_NOT_ENHAHNCE, CROP_INTO_TILES 두 가지 옵션이 존재합니다.) 자세한 내용은 IEN Option 문서를 통하여 확인할 수 있습니다. Inspection & Result IENResult result = engine.Inspection(srImage); Console.WriteLine($\"ImreadTime:{result.InspectionTime.ImreadTime}\"); Console.WriteLine($\"InferenceTime:{result.InspectionTime.InferenceTime}\"); Console.WriteLine($\"PostProcessingTime:{result.InspectionTime.PostProcessingTime}\"); Bitmap resultImage = result.ResultImage; // IEN 이 적용된 결과 이미지 코드에서 볼수 있는 것처럼 'Inspection'을 수행하는 주 함수는 engine.Inspect()입니다. 모든 종류의 Engine들은 이러한 공통의 Inspect() 함수를 보유하고 있습니다. 또한, 다양한 사용을 위해 여러 형태로 중첩 되어 있습니다. 비동기 혹은 다수의 이미지들을 검사하는 등의 여러 시나리오에서 선택적으로 사용할 수 있습니다. IENResult 에서 결과에 대한 모든 정보를 확인할 수 있습니다. IEN 의 경우 아래와 같은 정보를 결과로 확인할 수 있습니다. 일부 결과 정보에 대해서는 IENResult 에서 true로 반영해야 정보를 받아올 수 있습니다. ResultImage (IEN을 통한 결과 정보 이미지입니다.) Insepction Time (추론 API 실행에 소요된 시간을 밀리초 단위로 받아 옵니다.) Optional srImage.Dispose(); 이 예제에서는 검사에 사용했던 Bitmap들을 더 이상 사용할 곳이 없이게 Dispose() 합니다. 많은 수의 이미지를 한번에 검사 앞선 예제에서는 '한 장의 이미지'를 검사하는 시나리오에 대해서 살펴보았습니다. 하지만 '많은 수의 이미지'를 한번에 검사하고자 하는 경우에 대해 알아보겠습니다. 샘플 코드에서 몇가지 부분을 수정하여 이 상황을 해결해봅시다. 우선 SrImage을 배열로 만들어 '많은 수의 이미지' 데이터를 준비합니다. 아래와 같습니다. SrImage[] srImages = new SrImage[] { new SrImage(@\"..\\...\\sample1.png\"), new SrImage(@\"..\\...\\sample2.png\"), new SrImage(@\"..\\...\\sample3.png\"), new SrImage(@\"..\\...\\sample4.png\") }; 이후 생성자에서 숨어있던 마지막 인자를 사용할 수 있습니다. var engine = new IENEngine(modelPath, gpuIndex, 4) 마지막 인자는 '최대 이미지 수' 를 의미하며 한번에 (병렬로) 처리할 수 있는 이미지 수를 의미합니다. 큰 값이 설정될수록 GPU 메모리 할당량이 커지므로, 메모리가 부족하다면 작은 수로 설정해 주세요. 마지막으로 Inspect() 함수가 포함된 라인 이후를 수정합니다. 결과를 받아오는 GetResults() 함수를 복수명으로 변경 후 배열로 받아올 수 있도록 변경합니다. IENResult[] results = engine.Inspection(srImages); 이제 코드를 동작하여 '많은 수의 이미지'를 검사할 수 있습니다."
  },
  "development_guide/index.html": {
    "href": "development_guide/index.html",
    "title": "Quick Start",
    "keywords": "Quick Start 아래 코드 블럭은 간단하게 IAD(Image Anomaly Detection) 검사 진행 방법에 대해서 설명합니다. { // Prepare SrImage srImage = new SrImage(@\"..\\..\\sample.png\"); string modelPath = @\"..\\..\\model.saigeiad\"; int gpuIndex = 0; // Initialize using (var engine = new IADEngine(modelPath, gpuIndex)) { // Model Info ModelInfo model = engine.GetModelInfo(); // Option IADOption option = engine.GetInferenceOption(); engine.SetInferenceOption(option); // Inspection & Get Result IADResult result = eengine.Inspection(srImage); } // optional srImage.Dispose(); } 위와 같은 간단한 코드로 SaigeVision.Net.V2에서 제공하는 검사 기능을 수행할 수 있습니다. Workspace에서 정상적으로 SaigeVision.Net.V2, SaigeVision.Net.Core.V2를 참조했다면, 위 샘플 코드를 'Copy & paste' 하여 동작 시켜 보세요. 샘플 코드에 보이듯이 SaigeVision에서 제공하는 'Inference'의 사용은 몇가지 규칙적인 절차를 가지고 있습니다. 해당하는 절차와 각 절차의 설명은 아래와 같습니다. Prepare: 검사에 필요한 데이터와 환경을 준비합니다. Initialize: 모델파일과 GPU 선택 후 InspectionEngine을 로드합니다. Model Info: 학습한 모델의 정보를 확인할 수 있습니다. Option: 검사에 필요한 값을 읽고 쓸 수 있습니다. Inspection: 검사를 수행합니다. Result: 검사 결과를 가져옵니다. InspectionEngine은 IADEngine, SegmentationEngine 등 모델을 사용할때 포괄하여 통칭하는 단어입니다. 이 단계에서는 검사 결과 외에도 SaigeVision.Net.V2 를 통해 'Inference'를 수행하는 전체적인 흐름을 이해하는 것이 중요합니다. 모든 InspectionEngine 검사를 위해서는 이러한 절차를 공통적으로 사용합니다. 각 InspectionEngine에 대한 세부적인 내용과 가이드를 이 Docs에서 확안하세요. InspectionOption과 InspectionResult 만이 엔진별로 별도로 사용합니다. 이 외 대부분의 코드는 공통 사용 영역입니다. Warning SaigeVision에서 사용하는 모든 기능에는 라이센스 검사가 적용되어 있습니다. 사용하기 전에 꼭 라이센스를 위한 준비가 되었는지 확인하세요."
  },
  "development_guide/ocr.html": {
    "href": "development_guide/ocr.html",
    "title": "OCR",
    "keywords": "OCR 이 문서는 SaigieVision을 통해 이미지를 'OCR(문자인식)' 하는 방법에 대해 설명합니다. 여러분이 앞서 제공된 Quick Start 를 끝냈다면, 'OCR'을 수행하는 방법은 그리 어렵지 않습니다. 아래 코드 블럭은 간단하게 OCR 검사 진행 방법에 대해서 설명합니다. { // Prepare SrImage srImage = new SrImage(@\"..\\..\\sample.png\"); string modelPath = @\"..\\..\\model.saigeocr\"; int gpuIndex = 0; // Initialize OCREngine engine = new OCREngine(modelPath, gpuIndex); // Model Info ModelInfo model = engine.GetModelInfo(); // Option OCROption option = engine.GetInferenceOption(); option.PolygonScoreThreshold = 0.9; option.TextSizeRangeMin = 0; option.TextSizeRangeMax = 4608; option.MaxNumOfTextObjects = 0; option.TextScoreThreshold = 0.6; // option.TextFormatting.Length = 0; // option.TextFormatting.EngLower[0] = true; // option.TextFormatting.EngUpper[0] = true; // option.TextFormatting.Kor[0] = true; // option.TextFormatting.Number[0] = true; // option.TextFormatting.Symbol[0] = false; engine.SetInferenceOption(option); // Inspection & Get Result OCRResult result = engine.Inspection(srImage); Console.WriteLine($\"Contour Count:{result.TextObjects.Length}\"); Console.WriteLine($\"ImreadTime:{result.InspectionTime.ImreadTime}\"); Console.WriteLine($\"InferenceTime:{result.InspectionTime.InferenceTime}\"); Console.WriteLine($\"PostProcessingTime:{result.InspectionTime.PostProcessingTime}\"); foreach (var textObjects in result.TextObjects) { Console.WriteLine($\"Text:{textObjects.Text}\"); Console.WriteLine($\"TextScore:{textObjects.TextScore}\"); Console.WriteLine($\"TextSize:{textObjects.TextSize}\"); Console.WriteLine($\"ContourScore:{textObjects.ContourScore}\"); } // optional srImage.Dispose(); } Prepare SrImage srImage = new SrImage(@\"..\\..\\sample.png\"); string modelPath = @\"..\\..\\model.saigeocr\"; int gpuIndex = 0; OCREngine 을 사용하기 위해 필요한 모든 데이터를 준비하는 과정입니다. 일반적으로 아래와 같은 3가지를 요구합니다. 검사에 사용할 GPU 검사에 사용할 샘플 이미지들 검사에 사용할 모델( .saigeocr 파일) SaigeVision은 NVIDIA사의 GPU만을 지원하고 있습니다. GPU Index에 대해서는 명령 프롬프트 (command) 창을 통해 nvidia-smi 명령어를 입력하면 GPU의 index를 확인할 수 있습니다. 이미지는 SrImage 객체를 통해 생성 가능합니다. 8bit, 16bit 형태의 이미지를 GrayScale, RGB, RGBA 형태로 제공이 됩니다. Initialize OCREngine engine = new OCREngine(modelPath, gpuIndex) OCREngine 생성자에서 .saigeocr 모델파일에 대한 경로와 GPU Index를 매개변수로 설정하여 생성합니다. Model Info (Optional) ModelInfo model = engine.GetModelInfo(); ModelInfo 는 .saigeocr 모델 파일에 대한 정보를 확인할 수 있습니다. 일반적으로 아래와 같은 정보를 확인할 수 있습니다. Network Type (어떤 종류의 딥러닝 네트워크를 사용했는지 나타냅니다) Classes Information (클래스 정보입니다. name, color에 대한 정보들을 확인할 수 있습니다.) Developer Version (모델을 학습할 때 사용한 SaigeVision Developer의 버전입니다.) Server Version (모델을 학습할 때 사용한 SaigeVision Developer의 구성 요소 중 서버의 버전입니다.) Module Version (모델을 학습할 때 사용한 SaigeVision Developer의 구성 요소 중 딥러닝 모듈의 버전입니다.) Roi Information (ROI 정보입니다.) Resize Factor (Segmentation, IEN 전용, 인풋 이미지에 적용되는 리사이즈 비율입니다. 추론 이미지에도 동일하게 적용됩니다.) Crop Size (Segmentation, IEN 전용, 학습 때 사용된 패치의 사이즈입니다. 추론 이미지와는 관련 없습니다) Image Resize (IAD, CLS 전용, 인풋 이미지에 적용되는 리사이즈 입니다. 추론 이미지에도 동일하게 적용됩니다) 자세한 내용은 Model Info 문서를 통하여 확인할 수 있습니다. Module 은 .saigeocr 모델 파일에 Option (Optional) OCROption option = engine.GetInferenceOption(); option.PolygonScoreThreshold = 0.9; option.TextSizeRangeMin = 0; option.TextSizeRangeMax = 4608; option.MaxNumOfTextObjects = 0; option.TextScoreThreshold = 0.6; option.TextFormatting.Length = 0; option.TextFormatting.EngLower[0] = true; option.TextFormatting.EngUpper[0] = true; option.TextFormatting.Kor[0] = true; option.TextFormatting.Number[0] = true; option.TextFormatting.Symbol[0] = false; engine.SetInferenceOption(option); OCROption 에서 GetInferenceOption() 을 통해서 옵션에 대해서 정보를 받을 수 있습니다. SetInferenceOption() 을 통해서 옵션에 대해서 설정을 할 수 있습니다. 옵션은 아래와 같은 정보들을 설정할 수 있습니다. Calc Time (추론 API 실행에 소요되는 시간을 세분화하여 출력할지 결정합니다.) Batch Size (추론을 한 번 수행할 때 추론하는 이미지의 개수입니다.) PolygonScoreThreshold (검출된 글자영역인 polygon score 값이 이 값보다 작으면 최종 결과에서 제외됩니다.) TextSizeRangeMin (검출된 글자영역 크기의 유효범위 하한값입니다.) TextSizeRangeMax (검출된 글자영역 크기의 유효범위 상한값입니다.) MaxNumOfTextObjects (한 번에 출력할 수 있는 글자 오브젝트의 최대 검출 개수입니다.) TextScoreThreshold (인식된 글자 오브젝트의 text score 값이 이 값보다 작으면 최종 결과에서 제외됩니다.) TextFormatting.Length (인식하려는 글자의 수를 지정합니다.) TextFormatting.EngLower (영소문자를 포함하는지 여부를 지정하는 변수입니다.) TextFormatting.EngUpper (영대문자를 포함하는지 여부를 지정하는 변수입니다.) TextFormatting.Kor (한글을 포함하는지 여부를 지정하는 변수입니다.) TextFormatting.Number (숫자를 포함하는지 여부를 지정하는 변수입니다.) TextFormatting.Symbol (기호를 포함하는지 여부를 지정하는 변수입니다. 지원하는 기호: ``.,'\"·●°_~-+±=※#%&@:/!?(){}[]<>`)* 글자 수에 관계 없이 글자 집합을 지정하는 방식 (By Character Set) length 값을 0으로 설정합니다. 각 문자집합 bool 배열의 첫 번째 값을 지정합니다. 예시: 영소문자, 숫자만 인식하는 경우 SaigeInferenceOption option; option.TextFormatting.Length = 0; option.TextFormatting.EngLower[0] = true; option.TextFormatting.EngUpper[0] = false; option.TextFormatting.Kor[0] = false; option.TextFormatting.Number[0] = true; option.TextFormatting.Symbol[0] = false; 글자 수와 패턴을 지정하는 방식 (By Character Pattern) length 값을 0 초과, MaxLenOfTextFormatting 이하로 설정합니다. 각 문자집합 bool 배열의 0 ~ length-1 까지의 값을 지정합니다. 예시: 000가1234 (숫자 3자리, 한글 1자리, 숫자 4자리) SaigeInferenceOption option; option.TextFormatting.Length = 8; SaigeInitTextFormatting(option.TextFormatting); // 모든 옵션값을 false로 초기화해주는 함수 for (int i = 0; i < options.TextFormatting.length; i++) { options.textFormatting.number[i] = true; } options.TextFormatting.number[3] = false; options.TextFormatting.kor[3] = true; 자세한 내용은 OCR Option 문서를 통하여 확인할 수 있습니다. Inspection & Result OCRResult result = engine.Inspection(srImage); Console.WriteLine($\"Contour Count:{result.TextObjects.Length}\"); Console.WriteLine($\"ImreadTime:{result.InspectionTime.ImreadTime}\"); Console.WriteLine($\"InferenceTime:{result.InspectionTime.InferenceTime}\"); Console.WriteLine($\"PostProcessingTime:{result.InspectionTime.PostProcessingTime}\"); foreach (var textObjects in result.TextObjects) { Console.WriteLine($\"Text:{textObjects.Text}\"); Console.WriteLine($\"TextScore:{textObjects.TextScore}\"); Console.WriteLine($\"TextSize:{textObjects.TextSize}\"); Console.WriteLine($\"ContourScore:{textObjects.ContourScore}\"); } 코드에서 볼수 있는 것처럼 'Inspection'을 수행하는 주 함수는 engine.Inspect()입니다. 모든 종류의 Engine들은 이러한 공통의 Inspect() 함수를 보유하고 있습니다. 또한, 다양한 사용을 위해 여러 형태로 중첩 되어 있습니다. 비동기 혹은 다수의 이미지들을 검사하는 등의 여러 시나리오에서 선택적으로 사용할 수 있습니다. OCRResult 에서 결과에 대한 모든 정보를 확인할 수 있습니다. OCR 의 경우 아래와 같은 정보를 결과로 확인할 수 있습니다. 일부 결과 정보에 대해서는 OCRResult 에서 true로 반영해야 정보를 받아올 수 있습니다. Insepction Time (추론 API 실행에 소요된 시간을 밀리초 단위로 받아 옵니다.) Optional srImage.Dispose(); 이 예제에서는 검사에 사용했던 Bitmap들을 더 이상 사용할 곳이 없이게 Dispose() 합니다."
  },
  "development_guide/segmentation.html": {
    "href": "development_guide/segmentation.html",
    "title": "Segmentation",
    "keywords": "Segmentation 이 문서는 SaigieVision을 통해 이미지를 'Segmentation(분할)' 하는 방법에 대해 설명합니다. 여러분이 앞서 제공된 Quick Start 를 끝냈다면, 'Segmentation'을 수행하는 방법은 그리 어렵지 않습니다. 아래 코드 블럭은 간단하게 Segmentation 검사 진행 방법에 대해서 설명합니다. { // Prepare SrImage srImage = new SrImage(@\"..\\..\\sample.png\"); string modelPath = @\"..\\..\\model.saigeseg\"; int gpuIndex = 0; // Initialize SegmentationEngine engine = new SegmentationEngine(modelPath, gpuIndex); // Model Info ModelInfo model = engine.GetModelInfo(); // Option SegmentationOption option = engine.GetInferenceOption(); option.CalcTime = true; option.CalcObject = true; option.CalcScoremap = true; option.CalcMask = true; option.CalcObjectAreaAndApplyThreshold = true; option.CalcObjectScoreAndApplyThreshold = true; option.OversizedImageHandling = OverSizeImageFlags.RESIZE_TO_FIT; engine.SetInferenceOption(option); // Inspection & Get Result SegmentationResult result = engine.Inspection(srImage); Console.WriteLine($\"Contour Count:{result.SegmentedObjects.Length}\"); Console.WriteLine($\"ImreadTime:{result.InspectionTime.ImreadTime}\"); Console.WriteLine($\"InferenceTime:{result.InspectionTime.InferenceTime}\"); Console.WriteLine($\"PostProcessingTime:{result.InspectionTime.PostProcessingTime}\"); foreach (var so in result.SegmentedObjects) { Console.WriteLine($\"Name:{so.ClassInfo.Name}\"); Console.WriteLine($\"Area:{so.Area}\"); Console.WriteLine($\"Score:{so.Score}\"); Console.WriteLine($\"Center Point X: ({so.BoundingRotBox.Center.X}\"); Console.WriteLine($\"Center Point Y: ({so.BoundingRotBox.Center.Y}\"); } // optional srImage.Dispose(); } Prepare SrImage srImage = new SrImage(@\"..\\..\\sample.png\"); string modelPath = @\"..\\..\\model.saigeseg\"; int gpuIndex = 0; SegmentationEngine 을 사용하기 위해 필요한 모든 데이터를 준비하는 과정입니다. 일반적으로 아래와 같은 3가지를 요구합니다. 검사에 사용할 GPU 검사에 사용할 샘플 이미지들 검사에 사용할 모델( .saigeseg 파일) SaigeVision은 NVIDIA사의 GPU만을 지원하고 있습니다. GPU Index에 대해서는 명령 프롬프트 (command) 창을 통해 nvidia-smi 명령어를 입력하면 GPU의 index를 확인할 수 있습니다. 이미지는 SrImage 객체를 통해 생성 가능합니다. 8bit, 16bit 형태의 이미지를 GrayScale, RGB, RGBA 형태로 제공이 됩니다. Initialize SegmentationEngine engine = new SegmentationEngine(modelPath, gpuIndex) SegmentationEngine 생성자에서 .saigeseg 모델파일에 대한 경로와 GPU Index를 매개변수로 설정하여 생성합니다. Model Info (Optional) ModelInfo model = engine.GetModelInfo(); ModelInfo 는 .saigeseg 모델 파일에 대한 정보를 확인할 수 있습니다. 일반적으로 아래와 같은 정보를 확인할 수 있습니다. Network Type (어떤 종류의 딥러닝 네트워크를 사용했는지 나타냅니다) Classes Information (클래스 정보입니다. name, color에 대한 정보들을 확인할 수 있습니다.) Developer Version (모델을 학습할 때 사용한 SaigeVision Developer의 버전입니다.) Server Version (모델을 학습할 때 사용한 SaigeVision Developer의 구성 요소 중 서버의 버전입니다.) Module Version (모델을 학습할 때 사용한 SaigeVision Developer의 구성 요소 중 딥러닝 모듈의 버전입니다.) Roi Information (ROI 정보입니다.) Resize Factor (Segmentation, IEN 전용, 인풋 이미지에 적용되는 리사이즈 비율입니다. 추론 이미지에도 동일하게 적용됩니다.) Crop Size (Segmentation, IEN 전용, 학습 때 사용된 패치의 사이즈입니다. 추론 이미지와는 관련 없습니다) Image Resize (IAD, CLS 전용, 인풋 이미지에 적용되는 리사이즈 입니다. 추론 이미지에도 동일하게 적용됩니다) 자세한 내용은 Model Info 문서를 통하여 확인할 수 있습니다. Option (Optional) SegmentationOption option = engine.GetInferenceOption(); option.CalcTime = true; option.CalcObject = true; option.CalcScoremap = true; option.CalcMask = true; option.CalcObjectAreaAndApplyThreshold = true; option.CalcObjectScoreAndApplyThreshold = true; option.OversizedImageHandling = OverSizeImageFlags.RESIZE_TO_FIT; engine.SetInferenceOption(option); SegmentationOption 에서 GetInferenceOption() 을 통해서 옵션에 대해서 정보를 받을 수 있습니다. SetInferenceOption() 을 통해서 옵션에 대해서 설정을 할 수 있습니다. 옵션은 아래와 같은 정보들을 설정할 수 있습니다. Calc Time (추론 API 실행에 소요되는 시간을 세분화하여 출력할지 결정합니다.) Batch Size (추론을 한 번 수행할 때 추론하는 이미지의 개수입니다.) CalcScoremap (true로 설정하면 추론 시 scoremap을 계산합니다.) CalcMask (true로 설정하면 추론 시 mask를 계산합니다.) CalcObjectAreaAndApplyThreshold (true로 설정하면 segmented object의 면적을 계산합니다. Segmented object의 면적이 object area threshold 보다 작으면 최종 결과에서 제외됩니다.) CalcObjectScoreAndApplyThreshold (true로 설정하면 segmented object의 score를 계산합니다. Segmented object의 score가 object score threshold 보다 작으면 최종 결과에서 제외됩니다.) OversizedImageHandling (SaigeHandleConfig에서 지정한 inspection size보다 큰 이미지를 처리하는 방법입니다. DO_NOT_INSPECT, RESIZE_TO_FIT, CROP_INTO_TILES 세 가지 옵션이 존재합니다.) 자세한 내용은 Segmentation Option 문서를 통하여 확인할 수 있습니다. Inspection & Result SegmentationResult result = engine.Inspection(srImage); Console.WriteLine($\"Contour Count:{result.SegmentedObjects.Length}\"); Console.WriteLine($\"ImreadTime:{result.InspectionTime.ImreadTime}\"); Console.WriteLine($\"InferenceTime:{result.InspectionTime.InferenceTime}\"); Console.WriteLine($\"PostProcessingTime:{result.InspectionTime.PostProcessingTime}\"); foreach (var so in result.SegmentedObjects) { Console.WriteLine($\"Name:{so.ClassInfo.Name}\"); Console.WriteLine($\"Area:{so.Area}\"); Console.WriteLine($\"Score:{so.Score}\"); Console.WriteLine($\"Center Point X: ({so.BoundingRotBox.Center.X}\"); Console.WriteLine($\"Center Point Y: ({so.BoundingRotBox.Center.Y}\"); } 코드에서 볼수 있는 것처럼 'Inspection'을 수행하는 주 함수는 engine.Inspect()입니다. 모든 종류의 Engine들은 이러한 공통의 Inspect() 함수를 보유하고 있습니다. 또한, 다양한 사용을 위해 여러 형태로 중첩 되어 있습니다. 비동기 혹은 다수의 이미지들을 검사하는 등의 여러 시나리오에서 선택적으로 사용할 수 있습니다. SegmentationResult 에서 결과에 대한 모든 정보를 확인할 수 있습니다. Segmentation 의 경우 아래와 같은 정보를 결과로 확인할 수 있습니다. 일부 결과 정보에 대해서는 SegmentationResult 에서 true로 반영해야 정보를 받아올 수 있습니다. Segmented Objects (Segmentation을 통해 검출된 영역의 정보를 받아 옵니다.) Mask (Mask 이미지 정보입니다.) Scoremap (Scoremap 이미지 정보입니다.) Insepction Time (추론 API 실행에 소요된 시간을 밀리초 단위로 받아 옵니다.) Optional srImage.Dispose(); 이 예제에서는 검사에 사용했던 Bitmap들을 더 이상 사용할 곳이 없이게 Dispose() 합니다. 많은 수의 이미지를 한번에 검사 앞선 예제에서는 '한 장의 이미지'를 검사하는 시나리오에 대해서 살펴보았습니다. 하지만 '많은 수의 이미지'를 한번에 검사하고자 하는 경우에 대해 알아보겠습니다. 샘플 코드에서 몇가지 부분을 수정하여 이 상황을 해결해봅시다. 우선 SrImage을 배열로 만들어 '많은 수의 이미지' 데이터를 준비합니다. 아래와 같습니다. SrImage[] srImages = new SrImage[] { new SrImage(@\"..\\...\\sample1.png\"), new SrImage(@\"..\\...\\sample2.png\"), new SrImage(@\"..\\...\\sample3.png\"), new SrImage(@\"..\\...\\sample4.png\") }; 이후 생성자에서 숨어있던 마지막 인자를 사용할 수 있습니다. var engine = new SegmentationEngine(modelPath, gpuIndex, 4) 마지막 인자는 '최대 이미지 수' 를 의미하며 한번에 (병렬로) 처리할 수 있는 이미지 수를 의미합니다. 큰 값이 설정될수록 GPU 메모리 할당량이 커지므로, 메모리가 부족하다면 작은 수로 설정해 주세요. 마지막으로 Inspect() 함수가 포함된 라인 이후를 수정합니다. 결과를 받아오는 GetResults() 함수를 복수명으로 변경 후 배열로 받아올 수 있도록 변경합니다. SegmentationResult[] results = engine.Inspection(srImages); 이제 코드를 동작하여 '많은 수의 이미지'를 검사할 수 있습니다."
  },
  "getting_started/index.html": {
    "href": "getting_started/index.html",
    "title": "시작하기",
    "keywords": "시작하기 SaigeVision Runtime C# SDK를 설치하여 Visual Studio 프로젝트에서 사용하거나 예제 프로젝트를 실행해 보세요. 최소 및 권장 시스템 사양 항목 최소 사양* 권장 사양 OS Windows 10 64bit CPU Intel Core i7 RAM 16GB 32GB GPU GeForce RTX 2060 6GB GeForce RTX 3090 24GB * `최소 사양`은 세이지리서치 자체 실험을 통해 해당 환경에서 검사가 성공적으로 수행됨을 확인했다는 의미입니다. 사용하는 모델 및 데이터, 동시에 구동 중인 다른 작업 등에 따라 더 낮은 사양에서 작동할 수도, 더 높은 사양에서 작동하지 않을 수도 있습니다. 준비물 SaigeVision Installer NVIDIA Windows Driver 471.96 참고 SaigeVision 라이센스 동글 .Net Framework 4.6.1 (.Net Framework 4.7.2, .Net Standard 2.0) 설치 SaigeVision Installer를 이용해 SaigeVision을 설치해 주세요. 동봉된 설치 가이드를 참고하시기 바랍니다. Note 환경 변수 SaigeVision Installer를 실행하면 처음에 설치 경로를 지정해야 합니다. 설치가 잘 마무리되면 이때 지정한 설치 경로가 SAIGE_HOME이라는 환경 변수로 자동 설정됩니다. Note 설치 옵션 SaigeVision 설치 과정에서 Runtime SDK는 반드시 설치되는 반면, Developer는 설치 여부를 선택할 수 있습니다. 목적에 따라 Runtime SDK만 설치하거나 Developer까지 함께 설치해 주세요. SaigeVision Installer를 통해 설치된 Runtime SDK 관련 항목은 아래와 같습니다. 항목 위치 .Net Dynamic Library - SaigeVision.Net.V2.dll - SaigeVision.Net.Core.V2.dll - OpenCvSharp.dll - OpenCvSharp.Extensions.dll {설치 경로}\\SaigeVision\\csharp\\bin\\(.netframework_version) Engine Dynamic Library - SaigeVision.dll - SaigeVision_Impl.dll - OpenCvSharpExtern.dll {설치 경로}\\SaigeVision\\csharp\\bin API Documentaion - docs {설치 경로}\\SaigeVision\\csharp\\docs Examples Project {설치 경로}\\SaigeVision\\csharp\\Examples Visual Studio 프로젝트에서 사용하기 Visual Studio 프로젝트 설정 SaigeVision Runtime C# SDK를 Visual Studio 프로젝트에서 사용하기 위해서는 아래 과정을 거쳐야 합니다. 설치 과정을 문제없이 거쳐 환경 변수가 올바르게 설정되었다고 가정합니다. 타깃 플랫폼을 x64로 지정합니다. {설치 경로}\\SaigeVision\\csharp\\bin 폴더 내에 SaigeVision.Net.V2.dll, SaigeVision.Net.Core.V2.dll 두 DLL 파일을 프로젝트에서 참조에 추가합니다. 필요에 따라 OpenCvSharp.dll, OpenCvSharp.Extensions.dll 또는 System.Drawing.Common.dll 파일을 참조해 줍니다. {설치 경로}\\SaigeVision\\csharp\\bin 폴더 내에 SaigeVision.dll, SaigeVision_Impl.dll, OpenCvSharpExtern.dll 세개의 DLL 파일을 프로그램이 실행되고 있는 동일한 경로에 Copy&Paste 합니다. 예제 프로젝트 빌드 및 실행하기 예제 프로젝트에는 Visual Studio 프로젝트 설정에서 안내한 사항이 모두 적용되어 있습니다. 설치 과정만 잘 마쳤다면 아래 설명을 따라 SaigeVision 예제를 빌드하고 실행해 볼 수 있습니다. 빌드 Visual Studio 솔루션 파일 {설치 경로}\\SaigeVision\\csharp\\Examples\\Examples.sln을 실행해 주세요. Warning .Net Framework 4.6.1 을 지원합니다. PC에 설치되어 있지 않는 경우 .Net framework 4.6.1 개발자 팩을 다운받아 설치 진행합니다 사용하는 환경에 따라 .Net Framework 4.7.2, .Net Standard 2.0 버전으로도 사용가능합니다 빌드 타깃은 다음과 같이 지정해 주세요. 구성: Debug 또는 Release 플랫폼: x64 빌드에 성공하면 Examples\\bin\\{Debug 또는 Release} 경로에 실행파일 Examples.exe이 생성됩니다. 실행 빌드된 예제는 두 가지 방법으로 실행할 수 있습니다. Visual Studio에서 디버깅 시작(단축키 F5) 또는 디버그하지 않고 시작(단축키 Ctrl + F5)을 이용하여 예제 애플리케이션을 실행합니다. 예제 프로젝트를 실행하면 원하는 예제를 선택하여 추론 작업을 수행해 볼 수 있습니다. 예제 코드 안내 Examples 프로젝트의 소스 파일에서 각 예제의 코드를 모두 확인할 수 있습니다. 코드를 자유롭게 수정하면서 원하는 대로 SaigeVision 추론 기능을 사용해 보세요. 모든 예제 코드에 기본적인 사용법이 주석으로 작성되어 있으니 참고하시기 바랍니다. SaigeVision 추론 기능 사용을 위한 상세 안내는 개발가이드와 API 레퍼런스를 확인해 주세요. 예제 프로그램 안내 예제 프로그램을 통하여 검사에 대한 정보와 검사 결과를 함께 확인할 수 있습니다. 공통 경로 설정 및 검사 시간을 확인합니다. 모델과 이미지 선택 후 버튼 클릭을 통하여 추론을 실행합니다. 검사한 이미지가 결과와 함께 LIST로 확인합니다. 검사 결과에 대한 상세 정보를 확인합니다. 검사 결과 이미지를 확인할 수 있습니다. (ex. 원본이미지, heatmap 등) 검사 결과 이미지를 확인할 수 있습니다. 에러 처리 방식 거의 모든 SaigeVision API가 에러 발생 시 Exception 이 발생됩니다. 에러 메세지에는 어떤 에러인지 설명하는 문자열이 적혀있습니다. 예외가 발생할 경우 상황에 따라 각기 다른 패턴으로 예외를 처리합니다. 각 API 함수의 예외 처리 방식은 다음과 같습니다. API 처리 방식 Constructor (생성자) 객체가 생성되어 있으면 파괴하고 애플리케이션을 종료합니다. OptimizeInferenceHandle GetModelInfo 예외를 catch 로 작업합니다. 추론 작업을 진행하는 데는 문제가 없기 때문에 계속 실행합니다. Inspection 현재 이미지를 스킵하고 다음 이미지 추론으로 넘어갑니다(for 문 안에서 continue) GetResult(s) 객체를 해제하고 애플리케이션을 종료합니다. 유의 사항 생성자에서 batch size를 적절하게 생성해야 합니다. (기본값: 1) batch size 보다 이미지 사이즈가 큰 경우 에러가 발생합니다. engine 객체는 애플리케이션 내에서 '단 한번' 호출 하는 것을 권장합니다. engine 객체 사용이 종료되면 Dispose 패턴을 통하여 항상 메모리를 해제시켜주시길 바랍니다. 이미지 경로에 오류가 있는 경우에 대해서는 예외 처리가 잘 되어 있지 않습니다. 별도 메시지 없이 프로그램이 종료될 수 있습니다. 예제에서 한글이 포함된 이미지 경로를 읽어 오는 코드가 유니코드 UTF-8만 인식하도록 작성되어 있습니다. 한글 경로로 인한 문제가 발생할 경우 아래 순서대로 따라해 보신 뒤 다시 예제를 실행해 주시기 바랍니다. 언어 -> 기본 언어 설정 -> 시스템 로캘 변경 으로 들어갑니다. 하단의 Beta: 세계 언어 지원을 위해 Unicode UTF-8 사용 체크박스를 체크한 뒤 확인 버튼을 누릅니다. 안내에 따라 시스템을 재부팅합니다. (중요) 적절한 NVIDIA Driver 버전 및 설정 NVIDIA 그래픽 드라이버의 버그 내지는 사이드이펙트로 검사 시간이 비정상적으로 늘어나는 경우가 있습니다. 따라서 다음 가이드에 따르기를 권장합니다. NVIDIA GeForce RTX 30 시리즈 이하: 471.96 link NVIDIA GeForce RTX 40 시리즈 이상: 515.15 이상 또는 최신버전 NVIDIA 제어판 설정 저지연 모드: 켜기 전원 관리 모드: 최고 성능 선호"
  },
  "index.html": {
    "href": "index.html",
    "title": "SaigeVision® 개요",
    "keywords": "SaigeVision® 개요 SaigeVision® Runtime C# SDK는 실시간 비전 검사용 SDK입니다. SaigeVision® 딥러닝 추론 엔진을 C#에서 쉽게 사용할 수 있도록 개발되었습니다. SaigeVision®의 특징 딥러닝 비전문가도 쉽게 사용할 수 있습니다. 비전 검사 성능이 뛰어납니다. 비전 검사 속도가 빠릅니다. 다양한 비전 검사 시나리오를 지원합니다. SaigeVision®의 기능 Classification 사용자가 정한 기준에 맞춰 이미지를 유형별로 분류합니다. Detection 이미지 상의 물체 또는 결함을 박스 형태로 검출합니다. Segmentation 결함의 정확한 위치를 픽셀 단위로 검출합니다. Image Anomaly Detection 정상 이미지만으로 학습하여 정상과 다른 이미지 검출합니다. Advanced OCR 정상 이미지만으로 학습하여 정상과 다른 이미지 검출합니다. Image Enhancement 저화질 이미지를 고화질 이미지로 개선합니다. 기능 설명 Classification 이미지가 정상인지 불량인지, 그리고 불량이라면 어떤 종류의 불량인지 판별합니다 Detection 이미지 내에 찾고자 하는 불량 영역을 직사각형으로 검출합니다. 검출된 영역이 어떤 종류의 불량인지도 판별합니다. Segmentation 이미지 내에 찾고자 하는 불량 영역을 픽셀 단위로 검출합니다. 검출된 영역이 어떤 종류의 불량인지도 판별됩니다. IAD (Image Anomaly Detection) 이미지가 정상인지 불량인지 판정하고, 이미지 내의 불량 영역을 픽셀 단위로 검출합니다. 정상 이미지만으로 학습이 가능하다는 장점이 있지만, 어떤 종류의 불량인지를 판별할 수는 없습니다. OCR (Optical Character Recognition) 이미지 내에 찾고자 하는 문자열의 위치를 파악하고, 문자열이 어떤 글자로 이루어져 있는지 인식합니다. IEN (Image Enhencement) 이미지의 화질을 개선합니다"
  },
  "release_notes/index.html": {
    "href": "release_notes/index.html",
    "title": "Release Notes",
    "keywords": "Release Notes 2.2.4 (2024.01.31) Anomaly Detection 에서 CalcScoremap 옵션을 사용할 수 있도록 추가되었습니다. namespace 를 일부 간소화 시켰습니다. SAIGE VISION Developer 버전 2.0.6 이상에서 학습한 모델 파일이 기존 버전에서는 사용이 불가능합니다. 따라서 런타임의 실행환경인 %SAIGE_HOME%\\SaigeVision\\module 또한 SAIGE VISION Developer 2.0.6 이상을 요구합니다. (SDK 버전과는 무관합니다.) ModelInfo의 항목이 추가되었습니다. TargetTextSize TargetImageQuality 2.2.3 (2024.01.03) OpenCvSharp 관련 dll 파일들이 추가되었습니다. 라이세스 체크 방식의 안정성을 개선하였습니다. 모델파일을 불러올 때 한글을 못읽어오던 버그를 수정하였습니다. ModelInfo의 내용에 학습시 기록된 정보가 다음과 같이 추가되었습니다. Description UsedGpuName NumOfIterations NumOfTrainImages NumOfValidationImages NumOfValidationImages TrainingTimeStarted TrainingTimeCompleted TrainingTimeElapsed 2.2.2 (2023.11.29) IEN 기능을 사용할 수 있습니다. 2.2.1 (2023.11.23) OCR Optimize 기능에서는 최적화 기능의 안정성 문제로 지원을 중단합니다. OCR 기능 업그레이드에 따른 변경사항이 적용되었습니다. 기존에 학습된 모델은 사용이 불가능합니다. OCR 기능의 score값, score threshold 값들이 백분율 처리되지 않는 부분 해결하였습니다. 2.2.0 (2023.10.05) OCR 검사 기능을 사용할 수 있습니다. 2.1.3 (2023.09.26) ModelInfo.ClassIsNG 항목이 새로 추가되었습니다. 각 클래스별로 학습 시 설정한 NG 클래스 여부를 나타냅니다. 2.1.2 (2023.09.01) Classification 에서 CalcActivationMap = false; 인 경우 에러 발생하는 버그 수정 2.1.1 (2023.08.18) Segmentation의 추론 옵션 변경 Mask 계산여부인 calcMask도 Segmentation 추론옵션에 포함됩니다. SegmentedObject 연산 속도를 향상시키기 위해서 calcScoremap, calcMask를 false로 설정할 수 있습니다. 의미있는 추론결과가 없는 현상을 방지하기 위해 calcScoremap, calcMask, calcObject를 모두 false로 설정할 수 없습니다. 2.1.0 (2023.08.14) 기존에 이미지 형식을 24bit RGB 형태로만 입력되던게 아래와 같이 변경 되었습니다. 8BIT GRAY 16BIT GRAY 24BIT RGB 32BIT RGBA 48BIT RGB 64BIT RGBA Object Detection 기능의 내부 구조가 바뀌어 기존에 학습된 모델파일의 직접 사용이 어렵습니다. 새로운 버전에서 학습된 모델을 사용해주세요. 2.0.4 (2023.06.29) Detection 검사 기능을 사용할 수 있습니다. 핸들 추론 최적화 방식이 변경되었습니다. 모든 기능에 공통 적용됩니다. SaigeOptimizeInferenceHandle API 가 삭제되었습니다. InspectionEngine 생성자에서 parameter로 optimize 여부를 결정합니다. 2.0.3 (2023.06.09) Classification 검사 기능을 사용할 수 있습니다. 2.0.2 (2023.05.31) SEG 검사 기능을 사용할 수 있습니다. 2.0.1 (2023.05.20) IAD 검사 기능을 사용할 수 있습니다."
  }
}